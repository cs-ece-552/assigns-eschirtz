$date
	Thu Feb 28 23:55:42 2019
$end
$version
	ModelSim Version 10.4a
$end
$timescale
	1ns
$end

$scope module rf_bench $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var reg 3 A readReg1Sel [2:0] $end
$var reg 3 B readReg2Sel [2:0] $end
$var reg 1 C writeEn $end
$var reg 16 D writeData [15:0] $end
$var reg 3 E writeRegSel [2:0] $end
$var integer 32 F cycle_count $end
$var wire 1 G clk $end
$var wire 1 H rst $end
$var reg 1 I fail $end
$var reg 16 J ref_r1data [15:0] $end
$var reg 16 K ref_r2data [15:0] $end

$scope module DUT $end
$var wire 1 L readReg1Sel [2] $end
$var wire 1 M readReg1Sel [1] $end
$var wire 1 N readReg1Sel [0] $end
$var wire 1 O readReg2Sel [2] $end
$var wire 1 P readReg2Sel [1] $end
$var wire 1 Q readReg2Sel [0] $end
$var wire 1 R writeRegSel [2] $end
$var wire 1 S writeRegSel [1] $end
$var wire 1 T writeRegSel [0] $end
$var wire 1 U writeData [15] $end
$var wire 1 V writeData [14] $end
$var wire 1 W writeData [13] $end
$var wire 1 X writeData [12] $end
$var wire 1 Y writeData [11] $end
$var wire 1 Z writeData [10] $end
$var wire 1 [ writeData [9] $end
$var wire 1 \ writeData [8] $end
$var wire 1 ] writeData [7] $end
$var wire 1 ^ writeData [6] $end
$var wire 1 _ writeData [5] $end
$var wire 1 ` writeData [4] $end
$var wire 1 a writeData [3] $end
$var wire 1 b writeData [2] $end
$var wire 1 c writeData [1] $end
$var wire 1 d writeData [0] $end
$var wire 1 e writeEn $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 h err $end

$scope module clk_generator $end
$var reg 1 i clk $end
$var reg 1 j rst $end
$var wire 1 h err $end
$var integer 32 k cycle_count $end
$upscope $end

$scope module rf0 $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 L readReg1Sel [2] $end
$var wire 1 M readReg1Sel [1] $end
$var wire 1 N readReg1Sel [0] $end
$var wire 1 O readReg2Sel [2] $end
$var wire 1 P readReg2Sel [1] $end
$var wire 1 Q readReg2Sel [0] $end
$var wire 1 R writeRegSel [2] $end
$var wire 1 S writeRegSel [1] $end
$var wire 1 T writeRegSel [0] $end
$var wire 1 U writeData [15] $end
$var wire 1 V writeData [14] $end
$var wire 1 W writeData [13] $end
$var wire 1 X writeData [12] $end
$var wire 1 Y writeData [11] $end
$var wire 1 Z writeData [10] $end
$var wire 1 [ writeData [9] $end
$var wire 1 \ writeData [8] $end
$var wire 1 ] writeData [7] $end
$var wire 1 ^ writeData [6] $end
$var wire 1 _ writeData [5] $end
$var wire 1 ` writeData [4] $end
$var wire 1 a writeData [3] $end
$var wire 1 b writeData [2] $end
$var wire 1 c writeData [1] $end
$var wire 1 d writeData [0] $end
$var wire 1 e writeEn $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var wire 1 h err $end
$var wire 1 l reg0out [15] $end
$var wire 1 m reg0out [14] $end
$var wire 1 n reg0out [13] $end
$var wire 1 o reg0out [12] $end
$var wire 1 p reg0out [11] $end
$var wire 1 q reg0out [10] $end
$var wire 1 r reg0out [9] $end
$var wire 1 s reg0out [8] $end
$var wire 1 t reg0out [7] $end
$var wire 1 u reg0out [6] $end
$var wire 1 v reg0out [5] $end
$var wire 1 w reg0out [4] $end
$var wire 1 x reg0out [3] $end
$var wire 1 y reg0out [2] $end
$var wire 1 z reg0out [1] $end
$var wire 1 { reg0out [0] $end
$var wire 1 | reg1out [15] $end
$var wire 1 } reg1out [14] $end
$var wire 1 ~ reg1out [13] $end
$var wire 1 !! reg1out [12] $end
$var wire 1 "! reg1out [11] $end
$var wire 1 #! reg1out [10] $end
$var wire 1 $! reg1out [9] $end
$var wire 1 %! reg1out [8] $end
$var wire 1 &! reg1out [7] $end
$var wire 1 '! reg1out [6] $end
$var wire 1 (! reg1out [5] $end
$var wire 1 )! reg1out [4] $end
$var wire 1 *! reg1out [3] $end
$var wire 1 +! reg1out [2] $end
$var wire 1 ,! reg1out [1] $end
$var wire 1 -! reg1out [0] $end
$var wire 1 .! reg2out [15] $end
$var wire 1 /! reg2out [14] $end
$var wire 1 0! reg2out [13] $end
$var wire 1 1! reg2out [12] $end
$var wire 1 2! reg2out [11] $end
$var wire 1 3! reg2out [10] $end
$var wire 1 4! reg2out [9] $end
$var wire 1 5! reg2out [8] $end
$var wire 1 6! reg2out [7] $end
$var wire 1 7! reg2out [6] $end
$var wire 1 8! reg2out [5] $end
$var wire 1 9! reg2out [4] $end
$var wire 1 :! reg2out [3] $end
$var wire 1 ;! reg2out [2] $end
$var wire 1 <! reg2out [1] $end
$var wire 1 =! reg2out [0] $end
$var wire 1 >! reg3out [15] $end
$var wire 1 ?! reg3out [14] $end
$var wire 1 @! reg3out [13] $end
$var wire 1 A! reg3out [12] $end
$var wire 1 B! reg3out [11] $end
$var wire 1 C! reg3out [10] $end
$var wire 1 D! reg3out [9] $end
$var wire 1 E! reg3out [8] $end
$var wire 1 F! reg3out [7] $end
$var wire 1 G! reg3out [6] $end
$var wire 1 H! reg3out [5] $end
$var wire 1 I! reg3out [4] $end
$var wire 1 J! reg3out [3] $end
$var wire 1 K! reg3out [2] $end
$var wire 1 L! reg3out [1] $end
$var wire 1 M! reg3out [0] $end
$var wire 1 N! reg4out [15] $end
$var wire 1 O! reg4out [14] $end
$var wire 1 P! reg4out [13] $end
$var wire 1 Q! reg4out [12] $end
$var wire 1 R! reg4out [11] $end
$var wire 1 S! reg4out [10] $end
$var wire 1 T! reg4out [9] $end
$var wire 1 U! reg4out [8] $end
$var wire 1 V! reg4out [7] $end
$var wire 1 W! reg4out [6] $end
$var wire 1 X! reg4out [5] $end
$var wire 1 Y! reg4out [4] $end
$var wire 1 Z! reg4out [3] $end
$var wire 1 [! reg4out [2] $end
$var wire 1 \! reg4out [1] $end
$var wire 1 ]! reg4out [0] $end
$var wire 1 ^! reg5out [15] $end
$var wire 1 _! reg5out [14] $end
$var wire 1 `! reg5out [13] $end
$var wire 1 a! reg5out [12] $end
$var wire 1 b! reg5out [11] $end
$var wire 1 c! reg5out [10] $end
$var wire 1 d! reg5out [9] $end
$var wire 1 e! reg5out [8] $end
$var wire 1 f! reg5out [7] $end
$var wire 1 g! reg5out [6] $end
$var wire 1 h! reg5out [5] $end
$var wire 1 i! reg5out [4] $end
$var wire 1 j! reg5out [3] $end
$var wire 1 k! reg5out [2] $end
$var wire 1 l! reg5out [1] $end
$var wire 1 m! reg5out [0] $end
$var wire 1 n! reg6out [15] $end
$var wire 1 o! reg6out [14] $end
$var wire 1 p! reg6out [13] $end
$var wire 1 q! reg6out [12] $end
$var wire 1 r! reg6out [11] $end
$var wire 1 s! reg6out [10] $end
$var wire 1 t! reg6out [9] $end
$var wire 1 u! reg6out [8] $end
$var wire 1 v! reg6out [7] $end
$var wire 1 w! reg6out [6] $end
$var wire 1 x! reg6out [5] $end
$var wire 1 y! reg6out [4] $end
$var wire 1 z! reg6out [3] $end
$var wire 1 {! reg6out [2] $end
$var wire 1 |! reg6out [1] $end
$var wire 1 }! reg6out [0] $end
$var wire 1 ~! reg7out [15] $end
$var wire 1 !" reg7out [14] $end
$var wire 1 "" reg7out [13] $end
$var wire 1 #" reg7out [12] $end
$var wire 1 $" reg7out [11] $end
$var wire 1 %" reg7out [10] $end
$var wire 1 &" reg7out [9] $end
$var wire 1 '" reg7out [8] $end
$var wire 1 (" reg7out [7] $end
$var wire 1 )" reg7out [6] $end
$var wire 1 *" reg7out [5] $end
$var wire 1 +" reg7out [4] $end
$var wire 1 ," reg7out [3] $end
$var wire 1 -" reg7out [2] $end
$var wire 1 ." reg7out [1] $end
$var wire 1 /" reg7out [0] $end
$var wire 1 0" writeSel [7] $end
$var wire 1 1" writeSel [6] $end
$var wire 1 2" writeSel [5] $end
$var wire 1 3" writeSel [4] $end
$var wire 1 4" writeSel [3] $end
$var wire 1 5" writeSel [2] $end
$var wire 1 6" writeSel [1] $end
$var wire 1 7" writeSel [0] $end
$var wire 1 8" tempSel [7] $end
$var wire 1 9" tempSel [6] $end
$var wire 1 :" tempSel [5] $end
$var wire 1 ;" tempSel [4] $end
$var wire 1 <" tempSel [3] $end
$var wire 1 =" tempSel [2] $end
$var wire 1 >" tempSel [1] $end
$var wire 1 ?" tempSel [0] $end

$scope module reg0 $end
$var wire 1 l q [15] $end
$var wire 1 m q [14] $end
$var wire 1 n q [13] $end
$var wire 1 o q [12] $end
$var wire 1 p q [11] $end
$var wire 1 q q [10] $end
$var wire 1 r q [9] $end
$var wire 1 s q [8] $end
$var wire 1 t q [7] $end
$var wire 1 u q [6] $end
$var wire 1 v q [5] $end
$var wire 1 w q [4] $end
$var wire 1 x q [3] $end
$var wire 1 y q [2] $end
$var wire 1 z q [1] $end
$var wire 1 { q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 7" writeNew $end
$var wire 1 g rst $end
$var wire 1 @" newVal [15] $end
$var wire 1 A" newVal [14] $end
$var wire 1 B" newVal [13] $end
$var wire 1 C" newVal [12] $end
$var wire 1 D" newVal [11] $end
$var wire 1 E" newVal [10] $end
$var wire 1 F" newVal [9] $end
$var wire 1 G" newVal [8] $end
$var wire 1 H" newVal [7] $end
$var wire 1 I" newVal [6] $end
$var wire 1 J" newVal [5] $end
$var wire 1 K" newVal [4] $end
$var wire 1 L" newVal [3] $end
$var wire 1 M" newVal [2] $end
$var wire 1 N" newVal [1] $end
$var wire 1 O" newVal [0] $end

$scope module dff1 $end
$var wire 1 { q $end
$var wire 1 O" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 P" state $end
$upscope $end

$scope module dff2 $end
$var wire 1 z q $end
$var wire 1 N" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Q" state $end
$upscope $end

$scope module dff3 $end
$var wire 1 y q $end
$var wire 1 M" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 R" state $end
$upscope $end

$scope module dff4 $end
$var wire 1 x q $end
$var wire 1 L" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 S" state $end
$upscope $end

$scope module dff5 $end
$var wire 1 w q $end
$var wire 1 K" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 T" state $end
$upscope $end

$scope module dff6 $end
$var wire 1 v q $end
$var wire 1 J" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 U" state $end
$upscope $end

$scope module dff7 $end
$var wire 1 u q $end
$var wire 1 I" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 V" state $end
$upscope $end

$scope module dff8 $end
$var wire 1 t q $end
$var wire 1 H" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 W" state $end
$upscope $end

$scope module dff9 $end
$var wire 1 s q $end
$var wire 1 G" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 X" state $end
$upscope $end

$scope module dff10 $end
$var wire 1 r q $end
$var wire 1 F" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Y" state $end
$upscope $end

$scope module dff11 $end
$var wire 1 q q $end
$var wire 1 E" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Z" state $end
$upscope $end

$scope module dff12 $end
$var wire 1 p q $end
$var wire 1 D" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 [" state $end
$upscope $end

$scope module dff13 $end
$var wire 1 o q $end
$var wire 1 C" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 \" state $end
$upscope $end

$scope module dff14 $end
$var wire 1 n q $end
$var wire 1 B" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ]" state $end
$upscope $end

$scope module dff15 $end
$var wire 1 m q $end
$var wire 1 A" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ^" state $end
$upscope $end

$scope module dff16 $end
$var wire 1 l q $end
$var wire 1 @" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 _" state $end
$upscope $end
$upscope $end

$scope module reg1 $end
$var wire 1 | q [15] $end
$var wire 1 } q [14] $end
$var wire 1 ~ q [13] $end
$var wire 1 !! q [12] $end
$var wire 1 "! q [11] $end
$var wire 1 #! q [10] $end
$var wire 1 $! q [9] $end
$var wire 1 %! q [8] $end
$var wire 1 &! q [7] $end
$var wire 1 '! q [6] $end
$var wire 1 (! q [5] $end
$var wire 1 )! q [4] $end
$var wire 1 *! q [3] $end
$var wire 1 +! q [2] $end
$var wire 1 ,! q [1] $end
$var wire 1 -! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 6" writeNew $end
$var wire 1 g rst $end
$var wire 1 `" newVal [15] $end
$var wire 1 a" newVal [14] $end
$var wire 1 b" newVal [13] $end
$var wire 1 c" newVal [12] $end
$var wire 1 d" newVal [11] $end
$var wire 1 e" newVal [10] $end
$var wire 1 f" newVal [9] $end
$var wire 1 g" newVal [8] $end
$var wire 1 h" newVal [7] $end
$var wire 1 i" newVal [6] $end
$var wire 1 j" newVal [5] $end
$var wire 1 k" newVal [4] $end
$var wire 1 l" newVal [3] $end
$var wire 1 m" newVal [2] $end
$var wire 1 n" newVal [1] $end
$var wire 1 o" newVal [0] $end

$scope module dff1 $end
$var wire 1 -! q $end
$var wire 1 o" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 p" state $end
$upscope $end

$scope module dff2 $end
$var wire 1 ,! q $end
$var wire 1 n" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 q" state $end
$upscope $end

$scope module dff3 $end
$var wire 1 +! q $end
$var wire 1 m" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 r" state $end
$upscope $end

$scope module dff4 $end
$var wire 1 *! q $end
$var wire 1 l" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 s" state $end
$upscope $end

$scope module dff5 $end
$var wire 1 )! q $end
$var wire 1 k" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 t" state $end
$upscope $end

$scope module dff6 $end
$var wire 1 (! q $end
$var wire 1 j" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 u" state $end
$upscope $end

$scope module dff7 $end
$var wire 1 '! q $end
$var wire 1 i" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 v" state $end
$upscope $end

$scope module dff8 $end
$var wire 1 &! q $end
$var wire 1 h" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 w" state $end
$upscope $end

$scope module dff9 $end
$var wire 1 %! q $end
$var wire 1 g" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 x" state $end
$upscope $end

$scope module dff10 $end
$var wire 1 $! q $end
$var wire 1 f" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 y" state $end
$upscope $end

$scope module dff11 $end
$var wire 1 #! q $end
$var wire 1 e" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 z" state $end
$upscope $end

$scope module dff12 $end
$var wire 1 "! q $end
$var wire 1 d" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 {" state $end
$upscope $end

$scope module dff13 $end
$var wire 1 !! q $end
$var wire 1 c" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 |" state $end
$upscope $end

$scope module dff14 $end
$var wire 1 ~ q $end
$var wire 1 b" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 }" state $end
$upscope $end

$scope module dff15 $end
$var wire 1 } q $end
$var wire 1 a" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ~" state $end
$upscope $end

$scope module dff16 $end
$var wire 1 | q $end
$var wire 1 `" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 !# state $end
$upscope $end
$upscope $end

$scope module reg2 $end
$var wire 1 .! q [15] $end
$var wire 1 /! q [14] $end
$var wire 1 0! q [13] $end
$var wire 1 1! q [12] $end
$var wire 1 2! q [11] $end
$var wire 1 3! q [10] $end
$var wire 1 4! q [9] $end
$var wire 1 5! q [8] $end
$var wire 1 6! q [7] $end
$var wire 1 7! q [6] $end
$var wire 1 8! q [5] $end
$var wire 1 9! q [4] $end
$var wire 1 :! q [3] $end
$var wire 1 ;! q [2] $end
$var wire 1 <! q [1] $end
$var wire 1 =! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 5" writeNew $end
$var wire 1 g rst $end
$var wire 1 "# newVal [15] $end
$var wire 1 ## newVal [14] $end
$var wire 1 $# newVal [13] $end
$var wire 1 %# newVal [12] $end
$var wire 1 &# newVal [11] $end
$var wire 1 '# newVal [10] $end
$var wire 1 (# newVal [9] $end
$var wire 1 )# newVal [8] $end
$var wire 1 *# newVal [7] $end
$var wire 1 +# newVal [6] $end
$var wire 1 ,# newVal [5] $end
$var wire 1 -# newVal [4] $end
$var wire 1 .# newVal [3] $end
$var wire 1 /# newVal [2] $end
$var wire 1 0# newVal [1] $end
$var wire 1 1# newVal [0] $end

$scope module dff1 $end
$var wire 1 =! q $end
$var wire 1 1# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 2# state $end
$upscope $end

$scope module dff2 $end
$var wire 1 <! q $end
$var wire 1 0# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 3# state $end
$upscope $end

$scope module dff3 $end
$var wire 1 ;! q $end
$var wire 1 /# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 4# state $end
$upscope $end

$scope module dff4 $end
$var wire 1 :! q $end
$var wire 1 .# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 5# state $end
$upscope $end

$scope module dff5 $end
$var wire 1 9! q $end
$var wire 1 -# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 6# state $end
$upscope $end

$scope module dff6 $end
$var wire 1 8! q $end
$var wire 1 ,# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 7# state $end
$upscope $end

$scope module dff7 $end
$var wire 1 7! q $end
$var wire 1 +# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 8# state $end
$upscope $end

$scope module dff8 $end
$var wire 1 6! q $end
$var wire 1 *# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 9# state $end
$upscope $end

$scope module dff9 $end
$var wire 1 5! q $end
$var wire 1 )# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 :# state $end
$upscope $end

$scope module dff10 $end
$var wire 1 4! q $end
$var wire 1 (# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ;# state $end
$upscope $end

$scope module dff11 $end
$var wire 1 3! q $end
$var wire 1 '# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 <# state $end
$upscope $end

$scope module dff12 $end
$var wire 1 2! q $end
$var wire 1 &# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 =# state $end
$upscope $end

$scope module dff13 $end
$var wire 1 1! q $end
$var wire 1 %# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ># state $end
$upscope $end

$scope module dff14 $end
$var wire 1 0! q $end
$var wire 1 $# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ?# state $end
$upscope $end

$scope module dff15 $end
$var wire 1 /! q $end
$var wire 1 ## d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 @# state $end
$upscope $end

$scope module dff16 $end
$var wire 1 .! q $end
$var wire 1 "# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 A# state $end
$upscope $end
$upscope $end

$scope module reg3 $end
$var wire 1 >! q [15] $end
$var wire 1 ?! q [14] $end
$var wire 1 @! q [13] $end
$var wire 1 A! q [12] $end
$var wire 1 B! q [11] $end
$var wire 1 C! q [10] $end
$var wire 1 D! q [9] $end
$var wire 1 E! q [8] $end
$var wire 1 F! q [7] $end
$var wire 1 G! q [6] $end
$var wire 1 H! q [5] $end
$var wire 1 I! q [4] $end
$var wire 1 J! q [3] $end
$var wire 1 K! q [2] $end
$var wire 1 L! q [1] $end
$var wire 1 M! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 4" writeNew $end
$var wire 1 g rst $end
$var wire 1 B# newVal [15] $end
$var wire 1 C# newVal [14] $end
$var wire 1 D# newVal [13] $end
$var wire 1 E# newVal [12] $end
$var wire 1 F# newVal [11] $end
$var wire 1 G# newVal [10] $end
$var wire 1 H# newVal [9] $end
$var wire 1 I# newVal [8] $end
$var wire 1 J# newVal [7] $end
$var wire 1 K# newVal [6] $end
$var wire 1 L# newVal [5] $end
$var wire 1 M# newVal [4] $end
$var wire 1 N# newVal [3] $end
$var wire 1 O# newVal [2] $end
$var wire 1 P# newVal [1] $end
$var wire 1 Q# newVal [0] $end

$scope module dff1 $end
$var wire 1 M! q $end
$var wire 1 Q# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 R# state $end
$upscope $end

$scope module dff2 $end
$var wire 1 L! q $end
$var wire 1 P# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 S# state $end
$upscope $end

$scope module dff3 $end
$var wire 1 K! q $end
$var wire 1 O# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 T# state $end
$upscope $end

$scope module dff4 $end
$var wire 1 J! q $end
$var wire 1 N# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 U# state $end
$upscope $end

$scope module dff5 $end
$var wire 1 I! q $end
$var wire 1 M# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 V# state $end
$upscope $end

$scope module dff6 $end
$var wire 1 H! q $end
$var wire 1 L# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 W# state $end
$upscope $end

$scope module dff7 $end
$var wire 1 G! q $end
$var wire 1 K# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 X# state $end
$upscope $end

$scope module dff8 $end
$var wire 1 F! q $end
$var wire 1 J# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Y# state $end
$upscope $end

$scope module dff9 $end
$var wire 1 E! q $end
$var wire 1 I# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Z# state $end
$upscope $end

$scope module dff10 $end
$var wire 1 D! q $end
$var wire 1 H# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 [# state $end
$upscope $end

$scope module dff11 $end
$var wire 1 C! q $end
$var wire 1 G# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 \# state $end
$upscope $end

$scope module dff12 $end
$var wire 1 B! q $end
$var wire 1 F# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ]# state $end
$upscope $end

$scope module dff13 $end
$var wire 1 A! q $end
$var wire 1 E# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ^# state $end
$upscope $end

$scope module dff14 $end
$var wire 1 @! q $end
$var wire 1 D# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 _# state $end
$upscope $end

$scope module dff15 $end
$var wire 1 ?! q $end
$var wire 1 C# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 `# state $end
$upscope $end

$scope module dff16 $end
$var wire 1 >! q $end
$var wire 1 B# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 a# state $end
$upscope $end
$upscope $end

$scope module reg4 $end
$var wire 1 N! q [15] $end
$var wire 1 O! q [14] $end
$var wire 1 P! q [13] $end
$var wire 1 Q! q [12] $end
$var wire 1 R! q [11] $end
$var wire 1 S! q [10] $end
$var wire 1 T! q [9] $end
$var wire 1 U! q [8] $end
$var wire 1 V! q [7] $end
$var wire 1 W! q [6] $end
$var wire 1 X! q [5] $end
$var wire 1 Y! q [4] $end
$var wire 1 Z! q [3] $end
$var wire 1 [! q [2] $end
$var wire 1 \! q [1] $end
$var wire 1 ]! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 3" writeNew $end
$var wire 1 g rst $end
$var wire 1 b# newVal [15] $end
$var wire 1 c# newVal [14] $end
$var wire 1 d# newVal [13] $end
$var wire 1 e# newVal [12] $end
$var wire 1 f# newVal [11] $end
$var wire 1 g# newVal [10] $end
$var wire 1 h# newVal [9] $end
$var wire 1 i# newVal [8] $end
$var wire 1 j# newVal [7] $end
$var wire 1 k# newVal [6] $end
$var wire 1 l# newVal [5] $end
$var wire 1 m# newVal [4] $end
$var wire 1 n# newVal [3] $end
$var wire 1 o# newVal [2] $end
$var wire 1 p# newVal [1] $end
$var wire 1 q# newVal [0] $end

$scope module dff1 $end
$var wire 1 ]! q $end
$var wire 1 q# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 r# state $end
$upscope $end

$scope module dff2 $end
$var wire 1 \! q $end
$var wire 1 p# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 s# state $end
$upscope $end

$scope module dff3 $end
$var wire 1 [! q $end
$var wire 1 o# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 t# state $end
$upscope $end

$scope module dff4 $end
$var wire 1 Z! q $end
$var wire 1 n# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 u# state $end
$upscope $end

$scope module dff5 $end
$var wire 1 Y! q $end
$var wire 1 m# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 v# state $end
$upscope $end

$scope module dff6 $end
$var wire 1 X! q $end
$var wire 1 l# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 w# state $end
$upscope $end

$scope module dff7 $end
$var wire 1 W! q $end
$var wire 1 k# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 x# state $end
$upscope $end

$scope module dff8 $end
$var wire 1 V! q $end
$var wire 1 j# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 y# state $end
$upscope $end

$scope module dff9 $end
$var wire 1 U! q $end
$var wire 1 i# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 z# state $end
$upscope $end

$scope module dff10 $end
$var wire 1 T! q $end
$var wire 1 h# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 {# state $end
$upscope $end

$scope module dff11 $end
$var wire 1 S! q $end
$var wire 1 g# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 |# state $end
$upscope $end

$scope module dff12 $end
$var wire 1 R! q $end
$var wire 1 f# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 }# state $end
$upscope $end

$scope module dff13 $end
$var wire 1 Q! q $end
$var wire 1 e# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ~# state $end
$upscope $end

$scope module dff14 $end
$var wire 1 P! q $end
$var wire 1 d# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 !$ state $end
$upscope $end

$scope module dff15 $end
$var wire 1 O! q $end
$var wire 1 c# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 "$ state $end
$upscope $end

$scope module dff16 $end
$var wire 1 N! q $end
$var wire 1 b# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 #$ state $end
$upscope $end
$upscope $end

$scope module reg5 $end
$var wire 1 ^! q [15] $end
$var wire 1 _! q [14] $end
$var wire 1 `! q [13] $end
$var wire 1 a! q [12] $end
$var wire 1 b! q [11] $end
$var wire 1 c! q [10] $end
$var wire 1 d! q [9] $end
$var wire 1 e! q [8] $end
$var wire 1 f! q [7] $end
$var wire 1 g! q [6] $end
$var wire 1 h! q [5] $end
$var wire 1 i! q [4] $end
$var wire 1 j! q [3] $end
$var wire 1 k! q [2] $end
$var wire 1 l! q [1] $end
$var wire 1 m! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 2" writeNew $end
$var wire 1 g rst $end
$var wire 1 $$ newVal [15] $end
$var wire 1 %$ newVal [14] $end
$var wire 1 &$ newVal [13] $end
$var wire 1 '$ newVal [12] $end
$var wire 1 ($ newVal [11] $end
$var wire 1 )$ newVal [10] $end
$var wire 1 *$ newVal [9] $end
$var wire 1 +$ newVal [8] $end
$var wire 1 ,$ newVal [7] $end
$var wire 1 -$ newVal [6] $end
$var wire 1 .$ newVal [5] $end
$var wire 1 /$ newVal [4] $end
$var wire 1 0$ newVal [3] $end
$var wire 1 1$ newVal [2] $end
$var wire 1 2$ newVal [1] $end
$var wire 1 3$ newVal [0] $end

$scope module dff1 $end
$var wire 1 m! q $end
$var wire 1 3$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 4$ state $end
$upscope $end

$scope module dff2 $end
$var wire 1 l! q $end
$var wire 1 2$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 5$ state $end
$upscope $end

$scope module dff3 $end
$var wire 1 k! q $end
$var wire 1 1$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 6$ state $end
$upscope $end

$scope module dff4 $end
$var wire 1 j! q $end
$var wire 1 0$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 7$ state $end
$upscope $end

$scope module dff5 $end
$var wire 1 i! q $end
$var wire 1 /$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 8$ state $end
$upscope $end

$scope module dff6 $end
$var wire 1 h! q $end
$var wire 1 .$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 9$ state $end
$upscope $end

$scope module dff7 $end
$var wire 1 g! q $end
$var wire 1 -$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 :$ state $end
$upscope $end

$scope module dff8 $end
$var wire 1 f! q $end
$var wire 1 ,$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ;$ state $end
$upscope $end

$scope module dff9 $end
$var wire 1 e! q $end
$var wire 1 +$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 <$ state $end
$upscope $end

$scope module dff10 $end
$var wire 1 d! q $end
$var wire 1 *$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 =$ state $end
$upscope $end

$scope module dff11 $end
$var wire 1 c! q $end
$var wire 1 )$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 >$ state $end
$upscope $end

$scope module dff12 $end
$var wire 1 b! q $end
$var wire 1 ($ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ?$ state $end
$upscope $end

$scope module dff13 $end
$var wire 1 a! q $end
$var wire 1 '$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 @$ state $end
$upscope $end

$scope module dff14 $end
$var wire 1 `! q $end
$var wire 1 &$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 A$ state $end
$upscope $end

$scope module dff15 $end
$var wire 1 _! q $end
$var wire 1 %$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 B$ state $end
$upscope $end

$scope module dff16 $end
$var wire 1 ^! q $end
$var wire 1 $$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 C$ state $end
$upscope $end
$upscope $end

$scope module reg6 $end
$var wire 1 n! q [15] $end
$var wire 1 o! q [14] $end
$var wire 1 p! q [13] $end
$var wire 1 q! q [12] $end
$var wire 1 r! q [11] $end
$var wire 1 s! q [10] $end
$var wire 1 t! q [9] $end
$var wire 1 u! q [8] $end
$var wire 1 v! q [7] $end
$var wire 1 w! q [6] $end
$var wire 1 x! q [5] $end
$var wire 1 y! q [4] $end
$var wire 1 z! q [3] $end
$var wire 1 {! q [2] $end
$var wire 1 |! q [1] $end
$var wire 1 }! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 1" writeNew $end
$var wire 1 g rst $end
$var wire 1 D$ newVal [15] $end
$var wire 1 E$ newVal [14] $end
$var wire 1 F$ newVal [13] $end
$var wire 1 G$ newVal [12] $end
$var wire 1 H$ newVal [11] $end
$var wire 1 I$ newVal [10] $end
$var wire 1 J$ newVal [9] $end
$var wire 1 K$ newVal [8] $end
$var wire 1 L$ newVal [7] $end
$var wire 1 M$ newVal [6] $end
$var wire 1 N$ newVal [5] $end
$var wire 1 O$ newVal [4] $end
$var wire 1 P$ newVal [3] $end
$var wire 1 Q$ newVal [2] $end
$var wire 1 R$ newVal [1] $end
$var wire 1 S$ newVal [0] $end

$scope module dff1 $end
$var wire 1 }! q $end
$var wire 1 S$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 T$ state $end
$upscope $end

$scope module dff2 $end
$var wire 1 |! q $end
$var wire 1 R$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 U$ state $end
$upscope $end

$scope module dff3 $end
$var wire 1 {! q $end
$var wire 1 Q$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 V$ state $end
$upscope $end

$scope module dff4 $end
$var wire 1 z! q $end
$var wire 1 P$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 W$ state $end
$upscope $end

$scope module dff5 $end
$var wire 1 y! q $end
$var wire 1 O$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 X$ state $end
$upscope $end

$scope module dff6 $end
$var wire 1 x! q $end
$var wire 1 N$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Y$ state $end
$upscope $end

$scope module dff7 $end
$var wire 1 w! q $end
$var wire 1 M$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 Z$ state $end
$upscope $end

$scope module dff8 $end
$var wire 1 v! q $end
$var wire 1 L$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 [$ state $end
$upscope $end

$scope module dff9 $end
$var wire 1 u! q $end
$var wire 1 K$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 \$ state $end
$upscope $end

$scope module dff10 $end
$var wire 1 t! q $end
$var wire 1 J$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ]$ state $end
$upscope $end

$scope module dff11 $end
$var wire 1 s! q $end
$var wire 1 I$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ^$ state $end
$upscope $end

$scope module dff12 $end
$var wire 1 r! q $end
$var wire 1 H$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 _$ state $end
$upscope $end

$scope module dff13 $end
$var wire 1 q! q $end
$var wire 1 G$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 `$ state $end
$upscope $end

$scope module dff14 $end
$var wire 1 p! q $end
$var wire 1 F$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 a$ state $end
$upscope $end

$scope module dff15 $end
$var wire 1 o! q $end
$var wire 1 E$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 b$ state $end
$upscope $end

$scope module dff16 $end
$var wire 1 n! q $end
$var wire 1 D$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 c$ state $end
$upscope $end
$upscope $end

$scope module reg7 $end
$var wire 1 ~! q [15] $end
$var wire 1 !" q [14] $end
$var wire 1 "" q [13] $end
$var wire 1 #" q [12] $end
$var wire 1 $" q [11] $end
$var wire 1 %" q [10] $end
$var wire 1 &" q [9] $end
$var wire 1 '" q [8] $end
$var wire 1 (" q [7] $end
$var wire 1 )" q [6] $end
$var wire 1 *" q [5] $end
$var wire 1 +" q [4] $end
$var wire 1 ," q [3] $end
$var wire 1 -" q [2] $end
$var wire 1 ." q [1] $end
$var wire 1 /" q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 0" writeNew $end
$var wire 1 g rst $end
$var wire 1 d$ newVal [15] $end
$var wire 1 e$ newVal [14] $end
$var wire 1 f$ newVal [13] $end
$var wire 1 g$ newVal [12] $end
$var wire 1 h$ newVal [11] $end
$var wire 1 i$ newVal [10] $end
$var wire 1 j$ newVal [9] $end
$var wire 1 k$ newVal [8] $end
$var wire 1 l$ newVal [7] $end
$var wire 1 m$ newVal [6] $end
$var wire 1 n$ newVal [5] $end
$var wire 1 o$ newVal [4] $end
$var wire 1 p$ newVal [3] $end
$var wire 1 q$ newVal [2] $end
$var wire 1 r$ newVal [1] $end
$var wire 1 s$ newVal [0] $end

$scope module dff1 $end
$var wire 1 /" q $end
$var wire 1 s$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 t$ state $end
$upscope $end

$scope module dff2 $end
$var wire 1 ." q $end
$var wire 1 r$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 u$ state $end
$upscope $end

$scope module dff3 $end
$var wire 1 -" q $end
$var wire 1 q$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 v$ state $end
$upscope $end

$scope module dff4 $end
$var wire 1 ," q $end
$var wire 1 p$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 w$ state $end
$upscope $end

$scope module dff5 $end
$var wire 1 +" q $end
$var wire 1 o$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 x$ state $end
$upscope $end

$scope module dff6 $end
$var wire 1 *" q $end
$var wire 1 n$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 y$ state $end
$upscope $end

$scope module dff7 $end
$var wire 1 )" q $end
$var wire 1 m$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 z$ state $end
$upscope $end

$scope module dff8 $end
$var wire 1 (" q $end
$var wire 1 l$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 {$ state $end
$upscope $end

$scope module dff9 $end
$var wire 1 '" q $end
$var wire 1 k$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 |$ state $end
$upscope $end

$scope module dff10 $end
$var wire 1 &" q $end
$var wire 1 j$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 }$ state $end
$upscope $end

$scope module dff11 $end
$var wire 1 %" q $end
$var wire 1 i$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 ~$ state $end
$upscope $end

$scope module dff12 $end
$var wire 1 $" q $end
$var wire 1 h$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 !% state $end
$upscope $end

$scope module dff13 $end
$var wire 1 #" q $end
$var wire 1 g$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 "% state $end
$upscope $end

$scope module dff14 $end
$var wire 1 "" q $end
$var wire 1 f$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 #% state $end
$upscope $end

$scope module dff15 $end
$var wire 1 !" q $end
$var wire 1 e$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 $% state $end
$upscope $end

$scope module dff16 $end
$var wire 1 ~! q $end
$var wire 1 d$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var reg 1 %% state $end
$upscope $end
$upscope $end

$scope module read1Sel $end
$var parameter 32 &% N $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 N! InE [15] $end
$var wire 1 O! InE [14] $end
$var wire 1 P! InE [13] $end
$var wire 1 Q! InE [12] $end
$var wire 1 R! InE [11] $end
$var wire 1 S! InE [10] $end
$var wire 1 T! InE [9] $end
$var wire 1 U! InE [8] $end
$var wire 1 V! InE [7] $end
$var wire 1 W! InE [6] $end
$var wire 1 X! InE [5] $end
$var wire 1 Y! InE [4] $end
$var wire 1 Z! InE [3] $end
$var wire 1 [! InE [2] $end
$var wire 1 \! InE [1] $end
$var wire 1 ]! InE [0] $end
$var wire 1 ^! InF [15] $end
$var wire 1 _! InF [14] $end
$var wire 1 `! InF [13] $end
$var wire 1 a! InF [12] $end
$var wire 1 b! InF [11] $end
$var wire 1 c! InF [10] $end
$var wire 1 d! InF [9] $end
$var wire 1 e! InF [8] $end
$var wire 1 f! InF [7] $end
$var wire 1 g! InF [6] $end
$var wire 1 h! InF [5] $end
$var wire 1 i! InF [4] $end
$var wire 1 j! InF [3] $end
$var wire 1 k! InF [2] $end
$var wire 1 l! InF [1] $end
$var wire 1 m! InF [0] $end
$var wire 1 n! InG [15] $end
$var wire 1 o! InG [14] $end
$var wire 1 p! InG [13] $end
$var wire 1 q! InG [12] $end
$var wire 1 r! InG [11] $end
$var wire 1 s! InG [10] $end
$var wire 1 t! InG [9] $end
$var wire 1 u! InG [8] $end
$var wire 1 v! InG [7] $end
$var wire 1 w! InG [6] $end
$var wire 1 x! InG [5] $end
$var wire 1 y! InG [4] $end
$var wire 1 z! InG [3] $end
$var wire 1 {! InG [2] $end
$var wire 1 |! InG [1] $end
$var wire 1 }! InG [0] $end
$var wire 1 ~! InH [15] $end
$var wire 1 !" InH [14] $end
$var wire 1 "" InH [13] $end
$var wire 1 #" InH [12] $end
$var wire 1 $" InH [11] $end
$var wire 1 %" InH [10] $end
$var wire 1 &" InH [9] $end
$var wire 1 '" InH [8] $end
$var wire 1 (" InH [7] $end
$var wire 1 )" InH [6] $end
$var wire 1 *" InH [5] $end
$var wire 1 +" InH [4] $end
$var wire 1 ," InH [3] $end
$var wire 1 -" InH [2] $end
$var wire 1 ." InH [1] $end
$var wire 1 /" InH [0] $end
$var wire 1 L S [2] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ! Out [15] $end
$var wire 1 " Out [14] $end
$var wire 1 # Out [13] $end
$var wire 1 $ Out [12] $end
$var wire 1 % Out [11] $end
$var wire 1 & Out [10] $end
$var wire 1 ' Out [9] $end
$var wire 1 ( Out [8] $end
$var wire 1 ) Out [7] $end
$var wire 1 * Out [6] $end
$var wire 1 + Out [5] $end
$var wire 1 , Out [4] $end
$var wire 1 - Out [3] $end
$var wire 1 . Out [2] $end
$var wire 1 / Out [1] $end
$var wire 1 0 Out [0] $end
$var wire 1 '% mux1out [15] $end
$var wire 1 (% mux1out [14] $end
$var wire 1 )% mux1out [13] $end
$var wire 1 *% mux1out [12] $end
$var wire 1 +% mux1out [11] $end
$var wire 1 ,% mux1out [10] $end
$var wire 1 -% mux1out [9] $end
$var wire 1 .% mux1out [8] $end
$var wire 1 /% mux1out [7] $end
$var wire 1 0% mux1out [6] $end
$var wire 1 1% mux1out [5] $end
$var wire 1 2% mux1out [4] $end
$var wire 1 3% mux1out [3] $end
$var wire 1 4% mux1out [2] $end
$var wire 1 5% mux1out [1] $end
$var wire 1 6% mux1out [0] $end
$var wire 1 7% mux2out [15] $end
$var wire 1 8% mux2out [14] $end
$var wire 1 9% mux2out [13] $end
$var wire 1 :% mux2out [12] $end
$var wire 1 ;% mux2out [11] $end
$var wire 1 <% mux2out [10] $end
$var wire 1 =% mux2out [9] $end
$var wire 1 >% mux2out [8] $end
$var wire 1 ?% mux2out [7] $end
$var wire 1 @% mux2out [6] $end
$var wire 1 A% mux2out [5] $end
$var wire 1 B% mux2out [4] $end
$var wire 1 C% mux2out [3] $end
$var wire 1 D% mux2out [2] $end
$var wire 1 E% mux2out [1] $end
$var wire 1 F% mux2out [0] $end

$scope module mux0 $end
$var parameter 32 G% N $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out [15] $end
$var wire 1 (% Out [14] $end
$var wire 1 )% Out [13] $end
$var wire 1 *% Out [12] $end
$var wire 1 +% Out [11] $end
$var wire 1 ,% Out [10] $end
$var wire 1 -% Out [9] $end
$var wire 1 .% Out [8] $end
$var wire 1 /% Out [7] $end
$var wire 1 0% Out [6] $end
$var wire 1 1% Out [5] $end
$var wire 1 2% Out [4] $end
$var wire 1 3% Out [3] $end
$var wire 1 4% Out [2] $end
$var wire 1 5% Out [1] $end
$var wire 1 6% Out [0] $end

$scope module mux0 $end
$var parameter 32 H% N $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 3% Out [3] $end
$var wire 1 4% Out [2] $end
$var wire 1 5% Out [1] $end
$var wire 1 6% Out [0] $end

$scope module mux0 $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 =! InC $end
$var wire 1 M! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 6% Out $end
$var wire 1 I% AB $end
$var wire 1 J% CD $end

$scope module muxAB $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 N S $end
$var wire 1 I% Out $end
$var wire 1 K% S_n $end
$var wire 1 L% As $end
$var wire 1 M% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 K% out $end
$upscope $end

$scope module nandA $end
$var wire 1 { in1 $end
$var wire 1 K% in2 $end
$var wire 1 L% out $end
$upscope $end

$scope module nandB $end
$var wire 1 -! in1 $end
$var wire 1 N in2 $end
$var wire 1 M% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 L% in1 $end
$var wire 1 M% in2 $end
$var wire 1 I% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 =! InA $end
$var wire 1 M! InB $end
$var wire 1 N S $end
$var wire 1 J% Out $end
$var wire 1 N% S_n $end
$var wire 1 O% As $end
$var wire 1 P% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 N% out $end
$upscope $end

$scope module nandA $end
$var wire 1 =! in1 $end
$var wire 1 N% in2 $end
$var wire 1 O% out $end
$upscope $end

$scope module nandB $end
$var wire 1 M! in1 $end
$var wire 1 N in2 $end
$var wire 1 P% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O% in1 $end
$var wire 1 P% in2 $end
$var wire 1 J% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 I% InA $end
$var wire 1 J% InB $end
$var wire 1 M S $end
$var wire 1 6% Out $end
$var wire 1 Q% S_n $end
$var wire 1 R% As $end
$var wire 1 S% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 Q% out $end
$upscope $end

$scope module nandA $end
$var wire 1 I% in1 $end
$var wire 1 Q% in2 $end
$var wire 1 R% out $end
$upscope $end

$scope module nandB $end
$var wire 1 J% in1 $end
$var wire 1 M in2 $end
$var wire 1 S% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R% in1 $end
$var wire 1 S% in2 $end
$var wire 1 6% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 <! InC $end
$var wire 1 L! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 5% Out $end
$var wire 1 T% AB $end
$var wire 1 U% CD $end

$scope module muxAB $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 N S $end
$var wire 1 T% Out $end
$var wire 1 V% S_n $end
$var wire 1 W% As $end
$var wire 1 X% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 V% out $end
$upscope $end

$scope module nandA $end
$var wire 1 z in1 $end
$var wire 1 V% in2 $end
$var wire 1 W% out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,! in1 $end
$var wire 1 N in2 $end
$var wire 1 X% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W% in1 $end
$var wire 1 X% in2 $end
$var wire 1 T% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 <! InA $end
$var wire 1 L! InB $end
$var wire 1 N S $end
$var wire 1 U% Out $end
$var wire 1 Y% S_n $end
$var wire 1 Z% As $end
$var wire 1 [% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Y% out $end
$upscope $end

$scope module nandA $end
$var wire 1 <! in1 $end
$var wire 1 Y% in2 $end
$var wire 1 Z% out $end
$upscope $end

$scope module nandB $end
$var wire 1 L! in1 $end
$var wire 1 N in2 $end
$var wire 1 [% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z% in1 $end
$var wire 1 [% in2 $end
$var wire 1 U% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 T% InA $end
$var wire 1 U% InB $end
$var wire 1 M S $end
$var wire 1 5% Out $end
$var wire 1 \% S_n $end
$var wire 1 ]% As $end
$var wire 1 ^% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 \% out $end
$upscope $end

$scope module nandA $end
$var wire 1 T% in1 $end
$var wire 1 \% in2 $end
$var wire 1 ]% out $end
$upscope $end

$scope module nandB $end
$var wire 1 U% in1 $end
$var wire 1 M in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ]% in1 $end
$var wire 1 ^% in2 $end
$var wire 1 5% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 ;! InC $end
$var wire 1 K! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 4% Out $end
$var wire 1 _% AB $end
$var wire 1 `% CD $end

$scope module muxAB $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 N S $end
$var wire 1 _% Out $end
$var wire 1 a% S_n $end
$var wire 1 b% As $end
$var wire 1 c% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 a% out $end
$upscope $end

$scope module nandA $end
$var wire 1 y in1 $end
$var wire 1 a% in2 $end
$var wire 1 b% out $end
$upscope $end

$scope module nandB $end
$var wire 1 +! in1 $end
$var wire 1 N in2 $end
$var wire 1 c% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b% in1 $end
$var wire 1 c% in2 $end
$var wire 1 _% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 ;! InA $end
$var wire 1 K! InB $end
$var wire 1 N S $end
$var wire 1 `% Out $end
$var wire 1 d% S_n $end
$var wire 1 e% As $end
$var wire 1 f% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 d% out $end
$upscope $end

$scope module nandA $end
$var wire 1 ;! in1 $end
$var wire 1 d% in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module nandB $end
$var wire 1 K! in1 $end
$var wire 1 N in2 $end
$var wire 1 f% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e% in1 $end
$var wire 1 f% in2 $end
$var wire 1 `% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 _% InA $end
$var wire 1 `% InB $end
$var wire 1 M S $end
$var wire 1 4% Out $end
$var wire 1 g% S_n $end
$var wire 1 h% As $end
$var wire 1 i% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 g% out $end
$upscope $end

$scope module nandA $end
$var wire 1 _% in1 $end
$var wire 1 g% in2 $end
$var wire 1 h% out $end
$upscope $end

$scope module nandB $end
$var wire 1 `% in1 $end
$var wire 1 M in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 h% in1 $end
$var wire 1 i% in2 $end
$var wire 1 4% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 :! InC $end
$var wire 1 J! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 3% Out $end
$var wire 1 j% AB $end
$var wire 1 k% CD $end

$scope module muxAB $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 N S $end
$var wire 1 j% Out $end
$var wire 1 l% S_n $end
$var wire 1 m% As $end
$var wire 1 n% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 l% out $end
$upscope $end

$scope module nandA $end
$var wire 1 x in1 $end
$var wire 1 l% in2 $end
$var wire 1 m% out $end
$upscope $end

$scope module nandB $end
$var wire 1 *! in1 $end
$var wire 1 N in2 $end
$var wire 1 n% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m% in1 $end
$var wire 1 n% in2 $end
$var wire 1 j% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 :! InA $end
$var wire 1 J! InB $end
$var wire 1 N S $end
$var wire 1 k% Out $end
$var wire 1 o% S_n $end
$var wire 1 p% As $end
$var wire 1 q% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 o% out $end
$upscope $end

$scope module nandA $end
$var wire 1 :! in1 $end
$var wire 1 o% in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module nandB $end
$var wire 1 J! in1 $end
$var wire 1 N in2 $end
$var wire 1 q% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p% in1 $end
$var wire 1 q% in2 $end
$var wire 1 k% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 j% InA $end
$var wire 1 k% InB $end
$var wire 1 M S $end
$var wire 1 3% Out $end
$var wire 1 r% S_n $end
$var wire 1 s% As $end
$var wire 1 t% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 r% out $end
$upscope $end

$scope module nandA $end
$var wire 1 j% in1 $end
$var wire 1 r% in2 $end
$var wire 1 s% out $end
$upscope $end

$scope module nandB $end
$var wire 1 k% in1 $end
$var wire 1 M in2 $end
$var wire 1 t% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 s% in1 $end
$var wire 1 t% in2 $end
$var wire 1 3% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 u% N $end
$var wire 1 t InA [3] $end
$var wire 1 u InA [2] $end
$var wire 1 v InA [1] $end
$var wire 1 w InA [0] $end
$var wire 1 &! InB [3] $end
$var wire 1 '! InB [2] $end
$var wire 1 (! InB [1] $end
$var wire 1 )! InB [0] $end
$var wire 1 6! InC [3] $end
$var wire 1 7! InC [2] $end
$var wire 1 8! InC [1] $end
$var wire 1 9! InC [0] $end
$var wire 1 F! InD [3] $end
$var wire 1 G! InD [2] $end
$var wire 1 H! InD [1] $end
$var wire 1 I! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 /% Out [3] $end
$var wire 1 0% Out [2] $end
$var wire 1 1% Out [1] $end
$var wire 1 2% Out [0] $end

$scope module mux0 $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 9! InC $end
$var wire 1 I! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 2% Out $end
$var wire 1 v% AB $end
$var wire 1 w% CD $end

$scope module muxAB $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 N S $end
$var wire 1 v% Out $end
$var wire 1 x% S_n $end
$var wire 1 y% As $end
$var wire 1 z% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 x% out $end
$upscope $end

$scope module nandA $end
$var wire 1 w in1 $end
$var wire 1 x% in2 $end
$var wire 1 y% out $end
$upscope $end

$scope module nandB $end
$var wire 1 )! in1 $end
$var wire 1 N in2 $end
$var wire 1 z% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y% in1 $end
$var wire 1 z% in2 $end
$var wire 1 v% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 9! InA $end
$var wire 1 I! InB $end
$var wire 1 N S $end
$var wire 1 w% Out $end
$var wire 1 {% S_n $end
$var wire 1 |% As $end
$var wire 1 }% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 {% out $end
$upscope $end

$scope module nandA $end
$var wire 1 9! in1 $end
$var wire 1 {% in2 $end
$var wire 1 |% out $end
$upscope $end

$scope module nandB $end
$var wire 1 I! in1 $end
$var wire 1 N in2 $end
$var wire 1 }% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |% in1 $end
$var wire 1 }% in2 $end
$var wire 1 w% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v% InA $end
$var wire 1 w% InB $end
$var wire 1 M S $end
$var wire 1 2% Out $end
$var wire 1 ~% S_n $end
$var wire 1 !& As $end
$var wire 1 "& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 ~% out $end
$upscope $end

$scope module nandA $end
$var wire 1 v% in1 $end
$var wire 1 ~% in2 $end
$var wire 1 !& out $end
$upscope $end

$scope module nandB $end
$var wire 1 w% in1 $end
$var wire 1 M in2 $end
$var wire 1 "& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !& in1 $end
$var wire 1 "& in2 $end
$var wire 1 2% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 8! InC $end
$var wire 1 H! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 1% Out $end
$var wire 1 #& AB $end
$var wire 1 $& CD $end

$scope module muxAB $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 N S $end
$var wire 1 #& Out $end
$var wire 1 %& S_n $end
$var wire 1 && As $end
$var wire 1 '& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 %& out $end
$upscope $end

$scope module nandA $end
$var wire 1 v in1 $end
$var wire 1 %& in2 $end
$var wire 1 && out $end
$upscope $end

$scope module nandB $end
$var wire 1 (! in1 $end
$var wire 1 N in2 $end
$var wire 1 '& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 && in1 $end
$var wire 1 '& in2 $end
$var wire 1 #& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 8! InA $end
$var wire 1 H! InB $end
$var wire 1 N S $end
$var wire 1 $& Out $end
$var wire 1 (& S_n $end
$var wire 1 )& As $end
$var wire 1 *& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 (& out $end
$upscope $end

$scope module nandA $end
$var wire 1 8! in1 $end
$var wire 1 (& in2 $end
$var wire 1 )& out $end
$upscope $end

$scope module nandB $end
$var wire 1 H! in1 $end
$var wire 1 N in2 $end
$var wire 1 *& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )& in1 $end
$var wire 1 *& in2 $end
$var wire 1 $& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 #& InA $end
$var wire 1 $& InB $end
$var wire 1 M S $end
$var wire 1 1% Out $end
$var wire 1 +& S_n $end
$var wire 1 ,& As $end
$var wire 1 -& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 +& out $end
$upscope $end

$scope module nandA $end
$var wire 1 #& in1 $end
$var wire 1 +& in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module nandB $end
$var wire 1 $& in1 $end
$var wire 1 M in2 $end
$var wire 1 -& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ,& in1 $end
$var wire 1 -& in2 $end
$var wire 1 1% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 7! InC $end
$var wire 1 G! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 0% Out $end
$var wire 1 .& AB $end
$var wire 1 /& CD $end

$scope module muxAB $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 N S $end
$var wire 1 .& Out $end
$var wire 1 0& S_n $end
$var wire 1 1& As $end
$var wire 1 2& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 0& out $end
$upscope $end

$scope module nandA $end
$var wire 1 u in1 $end
$var wire 1 0& in2 $end
$var wire 1 1& out $end
$upscope $end

$scope module nandB $end
$var wire 1 '! in1 $end
$var wire 1 N in2 $end
$var wire 1 2& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1& in1 $end
$var wire 1 2& in2 $end
$var wire 1 .& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 7! InA $end
$var wire 1 G! InB $end
$var wire 1 N S $end
$var wire 1 /& Out $end
$var wire 1 3& S_n $end
$var wire 1 4& As $end
$var wire 1 5& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 3& out $end
$upscope $end

$scope module nandA $end
$var wire 1 7! in1 $end
$var wire 1 3& in2 $end
$var wire 1 4& out $end
$upscope $end

$scope module nandB $end
$var wire 1 G! in1 $end
$var wire 1 N in2 $end
$var wire 1 5& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4& in1 $end
$var wire 1 5& in2 $end
$var wire 1 /& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 .& InA $end
$var wire 1 /& InB $end
$var wire 1 M S $end
$var wire 1 0% Out $end
$var wire 1 6& S_n $end
$var wire 1 7& As $end
$var wire 1 8& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 6& out $end
$upscope $end

$scope module nandA $end
$var wire 1 .& in1 $end
$var wire 1 6& in2 $end
$var wire 1 7& out $end
$upscope $end

$scope module nandB $end
$var wire 1 /& in1 $end
$var wire 1 M in2 $end
$var wire 1 8& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 7& in1 $end
$var wire 1 8& in2 $end
$var wire 1 0% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 6! InC $end
$var wire 1 F! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 /% Out $end
$var wire 1 9& AB $end
$var wire 1 :& CD $end

$scope module muxAB $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 N S $end
$var wire 1 9& Out $end
$var wire 1 ;& S_n $end
$var wire 1 <& As $end
$var wire 1 =& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ;& out $end
$upscope $end

$scope module nandA $end
$var wire 1 t in1 $end
$var wire 1 ;& in2 $end
$var wire 1 <& out $end
$upscope $end

$scope module nandB $end
$var wire 1 &! in1 $end
$var wire 1 N in2 $end
$var wire 1 =& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <& in1 $end
$var wire 1 =& in2 $end
$var wire 1 9& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 6! InA $end
$var wire 1 F! InB $end
$var wire 1 N S $end
$var wire 1 :& Out $end
$var wire 1 >& S_n $end
$var wire 1 ?& As $end
$var wire 1 @& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 >& out $end
$upscope $end

$scope module nandA $end
$var wire 1 6! in1 $end
$var wire 1 >& in2 $end
$var wire 1 ?& out $end
$upscope $end

$scope module nandB $end
$var wire 1 F! in1 $end
$var wire 1 N in2 $end
$var wire 1 @& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?& in1 $end
$var wire 1 @& in2 $end
$var wire 1 :& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 9& InA $end
$var wire 1 :& InB $end
$var wire 1 M S $end
$var wire 1 /% Out $end
$var wire 1 A& S_n $end
$var wire 1 B& As $end
$var wire 1 C& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 A& out $end
$upscope $end

$scope module nandA $end
$var wire 1 9& in1 $end
$var wire 1 A& in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module nandB $end
$var wire 1 :& in1 $end
$var wire 1 M in2 $end
$var wire 1 C& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 B& in1 $end
$var wire 1 C& in2 $end
$var wire 1 /% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var parameter 32 D& N $end
$var wire 1 p InA [3] $end
$var wire 1 q InA [2] $end
$var wire 1 r InA [1] $end
$var wire 1 s InA [0] $end
$var wire 1 "! InB [3] $end
$var wire 1 #! InB [2] $end
$var wire 1 $! InB [1] $end
$var wire 1 %! InB [0] $end
$var wire 1 2! InC [3] $end
$var wire 1 3! InC [2] $end
$var wire 1 4! InC [1] $end
$var wire 1 5! InC [0] $end
$var wire 1 B! InD [3] $end
$var wire 1 C! InD [2] $end
$var wire 1 D! InD [1] $end
$var wire 1 E! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 +% Out [3] $end
$var wire 1 ,% Out [2] $end
$var wire 1 -% Out [1] $end
$var wire 1 .% Out [0] $end

$scope module mux0 $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 5! InC $end
$var wire 1 E! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 .% Out $end
$var wire 1 E& AB $end
$var wire 1 F& CD $end

$scope module muxAB $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 N S $end
$var wire 1 E& Out $end
$var wire 1 G& S_n $end
$var wire 1 H& As $end
$var wire 1 I& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 G& out $end
$upscope $end

$scope module nandA $end
$var wire 1 s in1 $end
$var wire 1 G& in2 $end
$var wire 1 H& out $end
$upscope $end

$scope module nandB $end
$var wire 1 %! in1 $end
$var wire 1 N in2 $end
$var wire 1 I& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H& in1 $end
$var wire 1 I& in2 $end
$var wire 1 E& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 5! InA $end
$var wire 1 E! InB $end
$var wire 1 N S $end
$var wire 1 F& Out $end
$var wire 1 J& S_n $end
$var wire 1 K& As $end
$var wire 1 L& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 J& out $end
$upscope $end

$scope module nandA $end
$var wire 1 5! in1 $end
$var wire 1 J& in2 $end
$var wire 1 K& out $end
$upscope $end

$scope module nandB $end
$var wire 1 E! in1 $end
$var wire 1 N in2 $end
$var wire 1 L& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K& in1 $end
$var wire 1 L& in2 $end
$var wire 1 F& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 E& InA $end
$var wire 1 F& InB $end
$var wire 1 M S $end
$var wire 1 .% Out $end
$var wire 1 M& S_n $end
$var wire 1 N& As $end
$var wire 1 O& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 M& out $end
$upscope $end

$scope module nandA $end
$var wire 1 E& in1 $end
$var wire 1 M& in2 $end
$var wire 1 N& out $end
$upscope $end

$scope module nandB $end
$var wire 1 F& in1 $end
$var wire 1 M in2 $end
$var wire 1 O& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N& in1 $end
$var wire 1 O& in2 $end
$var wire 1 .% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 4! InC $end
$var wire 1 D! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 -% Out $end
$var wire 1 P& AB $end
$var wire 1 Q& CD $end

$scope module muxAB $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 N S $end
$var wire 1 P& Out $end
$var wire 1 R& S_n $end
$var wire 1 S& As $end
$var wire 1 T& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 R& out $end
$upscope $end

$scope module nandA $end
$var wire 1 r in1 $end
$var wire 1 R& in2 $end
$var wire 1 S& out $end
$upscope $end

$scope module nandB $end
$var wire 1 $! in1 $end
$var wire 1 N in2 $end
$var wire 1 T& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 S& in1 $end
$var wire 1 T& in2 $end
$var wire 1 P& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 4! InA $end
$var wire 1 D! InB $end
$var wire 1 N S $end
$var wire 1 Q& Out $end
$var wire 1 U& S_n $end
$var wire 1 V& As $end
$var wire 1 W& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 U& out $end
$upscope $end

$scope module nandA $end
$var wire 1 4! in1 $end
$var wire 1 U& in2 $end
$var wire 1 V& out $end
$upscope $end

$scope module nandB $end
$var wire 1 D! in1 $end
$var wire 1 N in2 $end
$var wire 1 W& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 V& in1 $end
$var wire 1 W& in2 $end
$var wire 1 Q& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 P& InA $end
$var wire 1 Q& InB $end
$var wire 1 M S $end
$var wire 1 -% Out $end
$var wire 1 X& S_n $end
$var wire 1 Y& As $end
$var wire 1 Z& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 X& out $end
$upscope $end

$scope module nandA $end
$var wire 1 P& in1 $end
$var wire 1 X& in2 $end
$var wire 1 Y& out $end
$upscope $end

$scope module nandB $end
$var wire 1 Q& in1 $end
$var wire 1 M in2 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Y& in1 $end
$var wire 1 Z& in2 $end
$var wire 1 -% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 3! InC $end
$var wire 1 C! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ,% Out $end
$var wire 1 [& AB $end
$var wire 1 \& CD $end

$scope module muxAB $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 N S $end
$var wire 1 [& Out $end
$var wire 1 ]& S_n $end
$var wire 1 ^& As $end
$var wire 1 _& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ]& out $end
$upscope $end

$scope module nandA $end
$var wire 1 q in1 $end
$var wire 1 ]& in2 $end
$var wire 1 ^& out $end
$upscope $end

$scope module nandB $end
$var wire 1 #! in1 $end
$var wire 1 N in2 $end
$var wire 1 _& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^& in1 $end
$var wire 1 _& in2 $end
$var wire 1 [& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 3! InA $end
$var wire 1 C! InB $end
$var wire 1 N S $end
$var wire 1 \& Out $end
$var wire 1 `& S_n $end
$var wire 1 a& As $end
$var wire 1 b& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 `& out $end
$upscope $end

$scope module nandA $end
$var wire 1 3! in1 $end
$var wire 1 `& in2 $end
$var wire 1 a& out $end
$upscope $end

$scope module nandB $end
$var wire 1 C! in1 $end
$var wire 1 N in2 $end
$var wire 1 b& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a& in1 $end
$var wire 1 b& in2 $end
$var wire 1 \& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 [& InA $end
$var wire 1 \& InB $end
$var wire 1 M S $end
$var wire 1 ,% Out $end
$var wire 1 c& S_n $end
$var wire 1 d& As $end
$var wire 1 e& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 c& out $end
$upscope $end

$scope module nandA $end
$var wire 1 [& in1 $end
$var wire 1 c& in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module nandB $end
$var wire 1 \& in1 $end
$var wire 1 M in2 $end
$var wire 1 e& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 d& in1 $end
$var wire 1 e& in2 $end
$var wire 1 ,% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 2! InC $end
$var wire 1 B! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 +% Out $end
$var wire 1 f& AB $end
$var wire 1 g& CD $end

$scope module muxAB $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 N S $end
$var wire 1 f& Out $end
$var wire 1 h& S_n $end
$var wire 1 i& As $end
$var wire 1 j& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 h& out $end
$upscope $end

$scope module nandA $end
$var wire 1 p in1 $end
$var wire 1 h& in2 $end
$var wire 1 i& out $end
$upscope $end

$scope module nandB $end
$var wire 1 "! in1 $end
$var wire 1 N in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i& in1 $end
$var wire 1 j& in2 $end
$var wire 1 f& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 2! InA $end
$var wire 1 B! InB $end
$var wire 1 N S $end
$var wire 1 g& Out $end
$var wire 1 k& S_n $end
$var wire 1 l& As $end
$var wire 1 m& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 k& out $end
$upscope $end

$scope module nandA $end
$var wire 1 2! in1 $end
$var wire 1 k& in2 $end
$var wire 1 l& out $end
$upscope $end

$scope module nandB $end
$var wire 1 B! in1 $end
$var wire 1 N in2 $end
$var wire 1 m& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l& in1 $end
$var wire 1 m& in2 $end
$var wire 1 g& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 f& InA $end
$var wire 1 g& InB $end
$var wire 1 M S $end
$var wire 1 +% Out $end
$var wire 1 n& S_n $end
$var wire 1 o& As $end
$var wire 1 p& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 n& out $end
$upscope $end

$scope module nandA $end
$var wire 1 f& in1 $end
$var wire 1 n& in2 $end
$var wire 1 o& out $end
$upscope $end

$scope module nandB $end
$var wire 1 g& in1 $end
$var wire 1 M in2 $end
$var wire 1 p& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 o& in1 $end
$var wire 1 p& in2 $end
$var wire 1 +% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var parameter 32 q& N $end
$var wire 1 l InA [3] $end
$var wire 1 m InA [2] $end
$var wire 1 n InA [1] $end
$var wire 1 o InA [0] $end
$var wire 1 | InB [3] $end
$var wire 1 } InB [2] $end
$var wire 1 ~ InB [1] $end
$var wire 1 !! InB [0] $end
$var wire 1 .! InC [3] $end
$var wire 1 /! InC [2] $end
$var wire 1 0! InC [1] $end
$var wire 1 1! InC [0] $end
$var wire 1 >! InD [3] $end
$var wire 1 ?! InD [2] $end
$var wire 1 @! InD [1] $end
$var wire 1 A! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out [3] $end
$var wire 1 (% Out [2] $end
$var wire 1 )% Out [1] $end
$var wire 1 *% Out [0] $end

$scope module mux0 $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 1! InC $end
$var wire 1 A! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 *% Out $end
$var wire 1 r& AB $end
$var wire 1 s& CD $end

$scope module muxAB $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 N S $end
$var wire 1 r& Out $end
$var wire 1 t& S_n $end
$var wire 1 u& As $end
$var wire 1 v& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 t& out $end
$upscope $end

$scope module nandA $end
$var wire 1 o in1 $end
$var wire 1 t& in2 $end
$var wire 1 u& out $end
$upscope $end

$scope module nandB $end
$var wire 1 !! in1 $end
$var wire 1 N in2 $end
$var wire 1 v& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u& in1 $end
$var wire 1 v& in2 $end
$var wire 1 r& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 1! InA $end
$var wire 1 A! InB $end
$var wire 1 N S $end
$var wire 1 s& Out $end
$var wire 1 w& S_n $end
$var wire 1 x& As $end
$var wire 1 y& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 w& out $end
$upscope $end

$scope module nandA $end
$var wire 1 1! in1 $end
$var wire 1 w& in2 $end
$var wire 1 x& out $end
$upscope $end

$scope module nandB $end
$var wire 1 A! in1 $end
$var wire 1 N in2 $end
$var wire 1 y& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x& in1 $end
$var wire 1 y& in2 $end
$var wire 1 s& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r& InA $end
$var wire 1 s& InB $end
$var wire 1 M S $end
$var wire 1 *% Out $end
$var wire 1 z& S_n $end
$var wire 1 {& As $end
$var wire 1 |& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 z& out $end
$upscope $end

$scope module nandA $end
$var wire 1 r& in1 $end
$var wire 1 z& in2 $end
$var wire 1 {& out $end
$upscope $end

$scope module nandB $end
$var wire 1 s& in1 $end
$var wire 1 M in2 $end
$var wire 1 |& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {& in1 $end
$var wire 1 |& in2 $end
$var wire 1 *% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 0! InC $end
$var wire 1 @! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 )% Out $end
$var wire 1 }& AB $end
$var wire 1 ~& CD $end

$scope module muxAB $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 N S $end
$var wire 1 }& Out $end
$var wire 1 !' S_n $end
$var wire 1 "' As $end
$var wire 1 #' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 !' out $end
$upscope $end

$scope module nandA $end
$var wire 1 n in1 $end
$var wire 1 !' in2 $end
$var wire 1 "' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~ in1 $end
$var wire 1 N in2 $end
$var wire 1 #' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "' in1 $end
$var wire 1 #' in2 $end
$var wire 1 }& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 0! InA $end
$var wire 1 @! InB $end
$var wire 1 N S $end
$var wire 1 ~& Out $end
$var wire 1 $' S_n $end
$var wire 1 %' As $end
$var wire 1 &' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 $' out $end
$upscope $end

$scope module nandA $end
$var wire 1 0! in1 $end
$var wire 1 $' in2 $end
$var wire 1 %' out $end
$upscope $end

$scope module nandB $end
$var wire 1 @! in1 $end
$var wire 1 N in2 $end
$var wire 1 &' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %' in1 $end
$var wire 1 &' in2 $end
$var wire 1 ~& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 }& InA $end
$var wire 1 ~& InB $end
$var wire 1 M S $end
$var wire 1 )% Out $end
$var wire 1 '' S_n $end
$var wire 1 (' As $end
$var wire 1 )' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 '' out $end
$upscope $end

$scope module nandA $end
$var wire 1 }& in1 $end
$var wire 1 '' in2 $end
$var wire 1 (' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~& in1 $end
$var wire 1 M in2 $end
$var wire 1 )' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 (' in1 $end
$var wire 1 )' in2 $end
$var wire 1 )% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 /! InC $end
$var wire 1 ?! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 (% Out $end
$var wire 1 *' AB $end
$var wire 1 +' CD $end

$scope module muxAB $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 N S $end
$var wire 1 *' Out $end
$var wire 1 ,' S_n $end
$var wire 1 -' As $end
$var wire 1 .' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nandA $end
$var wire 1 m in1 $end
$var wire 1 ,' in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nandB $end
$var wire 1 } in1 $end
$var wire 1 N in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -' in1 $end
$var wire 1 .' in2 $end
$var wire 1 *' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 /! InA $end
$var wire 1 ?! InB $end
$var wire 1 N S $end
$var wire 1 +' Out $end
$var wire 1 /' S_n $end
$var wire 1 0' As $end
$var wire 1 1' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 /' out $end
$upscope $end

$scope module nandA $end
$var wire 1 /! in1 $end
$var wire 1 /' in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?! in1 $end
$var wire 1 N in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0' in1 $end
$var wire 1 1' in2 $end
$var wire 1 +' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 *' InA $end
$var wire 1 +' InB $end
$var wire 1 M S $end
$var wire 1 (% Out $end
$var wire 1 2' S_n $end
$var wire 1 3' As $end
$var wire 1 4' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 2' out $end
$upscope $end

$scope module nandA $end
$var wire 1 *' in1 $end
$var wire 1 2' in2 $end
$var wire 1 3' out $end
$upscope $end

$scope module nandB $end
$var wire 1 +' in1 $end
$var wire 1 M in2 $end
$var wire 1 4' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 3' in1 $end
$var wire 1 4' in2 $end
$var wire 1 (% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 .! InC $end
$var wire 1 >! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out $end
$var wire 1 5' AB $end
$var wire 1 6' CD $end

$scope module muxAB $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 N S $end
$var wire 1 5' Out $end
$var wire 1 7' S_n $end
$var wire 1 8' As $end
$var wire 1 9' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 7' out $end
$upscope $end

$scope module nandA $end
$var wire 1 l in1 $end
$var wire 1 7' in2 $end
$var wire 1 8' out $end
$upscope $end

$scope module nandB $end
$var wire 1 | in1 $end
$var wire 1 N in2 $end
$var wire 1 9' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8' in1 $end
$var wire 1 9' in2 $end
$var wire 1 5' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 .! InA $end
$var wire 1 >! InB $end
$var wire 1 N S $end
$var wire 1 6' Out $end
$var wire 1 :' S_n $end
$var wire 1 ;' As $end
$var wire 1 <' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 :' out $end
$upscope $end

$scope module nandA $end
$var wire 1 .! in1 $end
$var wire 1 :' in2 $end
$var wire 1 ;' out $end
$upscope $end

$scope module nandB $end
$var wire 1 >! in1 $end
$var wire 1 N in2 $end
$var wire 1 <' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;' in1 $end
$var wire 1 <' in2 $end
$var wire 1 6' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 5' InA $end
$var wire 1 6' InB $end
$var wire 1 M S $end
$var wire 1 '% Out $end
$var wire 1 =' S_n $end
$var wire 1 >' As $end
$var wire 1 ?' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 =' out $end
$upscope $end

$scope module nandA $end
$var wire 1 5' in1 $end
$var wire 1 =' in2 $end
$var wire 1 >' out $end
$upscope $end

$scope module nandB $end
$var wire 1 6' in1 $end
$var wire 1 M in2 $end
$var wire 1 ?' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 >' in1 $end
$var wire 1 ?' in2 $end
$var wire 1 '% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 @' N $end
$var wire 1 N! InA [15] $end
$var wire 1 O! InA [14] $end
$var wire 1 P! InA [13] $end
$var wire 1 Q! InA [12] $end
$var wire 1 R! InA [11] $end
$var wire 1 S! InA [10] $end
$var wire 1 T! InA [9] $end
$var wire 1 U! InA [8] $end
$var wire 1 V! InA [7] $end
$var wire 1 W! InA [6] $end
$var wire 1 X! InA [5] $end
$var wire 1 Y! InA [4] $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 ^! InB [15] $end
$var wire 1 _! InB [14] $end
$var wire 1 `! InB [13] $end
$var wire 1 a! InB [12] $end
$var wire 1 b! InB [11] $end
$var wire 1 c! InB [10] $end
$var wire 1 d! InB [9] $end
$var wire 1 e! InB [8] $end
$var wire 1 f! InB [7] $end
$var wire 1 g! InB [6] $end
$var wire 1 h! InB [5] $end
$var wire 1 i! InB [4] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 n! InC [15] $end
$var wire 1 o! InC [14] $end
$var wire 1 p! InC [13] $end
$var wire 1 q! InC [12] $end
$var wire 1 r! InC [11] $end
$var wire 1 s! InC [10] $end
$var wire 1 t! InC [9] $end
$var wire 1 u! InC [8] $end
$var wire 1 v! InC [7] $end
$var wire 1 w! InC [6] $end
$var wire 1 x! InC [5] $end
$var wire 1 y! InC [4] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ~! InD [15] $end
$var wire 1 !" InD [14] $end
$var wire 1 "" InD [13] $end
$var wire 1 #" InD [12] $end
$var wire 1 $" InD [11] $end
$var wire 1 %" InD [10] $end
$var wire 1 &" InD [9] $end
$var wire 1 '" InD [8] $end
$var wire 1 (" InD [7] $end
$var wire 1 )" InD [6] $end
$var wire 1 *" InD [5] $end
$var wire 1 +" InD [4] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out [15] $end
$var wire 1 8% Out [14] $end
$var wire 1 9% Out [13] $end
$var wire 1 :% Out [12] $end
$var wire 1 ;% Out [11] $end
$var wire 1 <% Out [10] $end
$var wire 1 =% Out [9] $end
$var wire 1 >% Out [8] $end
$var wire 1 ?% Out [7] $end
$var wire 1 @% Out [6] $end
$var wire 1 A% Out [5] $end
$var wire 1 B% Out [4] $end
$var wire 1 C% Out [3] $end
$var wire 1 D% Out [2] $end
$var wire 1 E% Out [1] $end
$var wire 1 F% Out [0] $end

$scope module mux0 $end
$var parameter 32 A' N $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 C% Out [3] $end
$var wire 1 D% Out [2] $end
$var wire 1 E% Out [1] $end
$var wire 1 F% Out [0] $end

$scope module mux0 $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 }! InC $end
$var wire 1 /" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 F% Out $end
$var wire 1 B' AB $end
$var wire 1 C' CD $end

$scope module muxAB $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 N S $end
$var wire 1 B' Out $end
$var wire 1 D' S_n $end
$var wire 1 E' As $end
$var wire 1 F' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 D' out $end
$upscope $end

$scope module nandA $end
$var wire 1 ]! in1 $end
$var wire 1 D' in2 $end
$var wire 1 E' out $end
$upscope $end

$scope module nandB $end
$var wire 1 m! in1 $end
$var wire 1 N in2 $end
$var wire 1 F' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 E' in1 $end
$var wire 1 F' in2 $end
$var wire 1 B' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 }! InA $end
$var wire 1 /" InB $end
$var wire 1 N S $end
$var wire 1 C' Out $end
$var wire 1 G' S_n $end
$var wire 1 H' As $end
$var wire 1 I' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 G' out $end
$upscope $end

$scope module nandA $end
$var wire 1 }! in1 $end
$var wire 1 G' in2 $end
$var wire 1 H' out $end
$upscope $end

$scope module nandB $end
$var wire 1 /" in1 $end
$var wire 1 N in2 $end
$var wire 1 I' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H' in1 $end
$var wire 1 I' in2 $end
$var wire 1 C' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 B' InA $end
$var wire 1 C' InB $end
$var wire 1 M S $end
$var wire 1 F% Out $end
$var wire 1 J' S_n $end
$var wire 1 K' As $end
$var wire 1 L' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 J' out $end
$upscope $end

$scope module nandA $end
$var wire 1 B' in1 $end
$var wire 1 J' in2 $end
$var wire 1 K' out $end
$upscope $end

$scope module nandB $end
$var wire 1 C' in1 $end
$var wire 1 M in2 $end
$var wire 1 L' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K' in1 $end
$var wire 1 L' in2 $end
$var wire 1 F% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 |! InC $end
$var wire 1 ." InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 E% Out $end
$var wire 1 M' AB $end
$var wire 1 N' CD $end

$scope module muxAB $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 N S $end
$var wire 1 M' Out $end
$var wire 1 O' S_n $end
$var wire 1 P' As $end
$var wire 1 Q' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 O' out $end
$upscope $end

$scope module nandA $end
$var wire 1 \! in1 $end
$var wire 1 O' in2 $end
$var wire 1 P' out $end
$upscope $end

$scope module nandB $end
$var wire 1 l! in1 $end
$var wire 1 N in2 $end
$var wire 1 Q' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 P' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 M' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 |! InA $end
$var wire 1 ." InB $end
$var wire 1 N S $end
$var wire 1 N' Out $end
$var wire 1 R' S_n $end
$var wire 1 S' As $end
$var wire 1 T' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 R' out $end
$upscope $end

$scope module nandA $end
$var wire 1 |! in1 $end
$var wire 1 R' in2 $end
$var wire 1 S' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ." in1 $end
$var wire 1 N in2 $end
$var wire 1 T' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 S' in1 $end
$var wire 1 T' in2 $end
$var wire 1 N' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 M' InA $end
$var wire 1 N' InB $end
$var wire 1 M S $end
$var wire 1 E% Out $end
$var wire 1 U' S_n $end
$var wire 1 V' As $end
$var wire 1 W' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 U' out $end
$upscope $end

$scope module nandA $end
$var wire 1 M' in1 $end
$var wire 1 U' in2 $end
$var wire 1 V' out $end
$upscope $end

$scope module nandB $end
$var wire 1 N' in1 $end
$var wire 1 M in2 $end
$var wire 1 W' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 V' in1 $end
$var wire 1 W' in2 $end
$var wire 1 E% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 {! InC $end
$var wire 1 -" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 D% Out $end
$var wire 1 X' AB $end
$var wire 1 Y' CD $end

$scope module muxAB $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 N S $end
$var wire 1 X' Out $end
$var wire 1 Z' S_n $end
$var wire 1 [' As $end
$var wire 1 \' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Z' out $end
$upscope $end

$scope module nandA $end
$var wire 1 [! in1 $end
$var wire 1 Z' in2 $end
$var wire 1 [' out $end
$upscope $end

$scope module nandB $end
$var wire 1 k! in1 $end
$var wire 1 N in2 $end
$var wire 1 \' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [' in1 $end
$var wire 1 \' in2 $end
$var wire 1 X' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 {! InA $end
$var wire 1 -" InB $end
$var wire 1 N S $end
$var wire 1 Y' Out $end
$var wire 1 ]' S_n $end
$var wire 1 ^' As $end
$var wire 1 _' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ]' out $end
$upscope $end

$scope module nandA $end
$var wire 1 {! in1 $end
$var wire 1 ]' in2 $end
$var wire 1 ^' out $end
$upscope $end

$scope module nandB $end
$var wire 1 -" in1 $end
$var wire 1 N in2 $end
$var wire 1 _' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^' in1 $end
$var wire 1 _' in2 $end
$var wire 1 Y' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 X' InA $end
$var wire 1 Y' InB $end
$var wire 1 M S $end
$var wire 1 D% Out $end
$var wire 1 `' S_n $end
$var wire 1 a' As $end
$var wire 1 b' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 `' out $end
$upscope $end

$scope module nandA $end
$var wire 1 X' in1 $end
$var wire 1 `' in2 $end
$var wire 1 a' out $end
$upscope $end

$scope module nandB $end
$var wire 1 Y' in1 $end
$var wire 1 M in2 $end
$var wire 1 b' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a' in1 $end
$var wire 1 b' in2 $end
$var wire 1 D% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 z! InC $end
$var wire 1 ," InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 C% Out $end
$var wire 1 c' AB $end
$var wire 1 d' CD $end

$scope module muxAB $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 N S $end
$var wire 1 c' Out $end
$var wire 1 e' S_n $end
$var wire 1 f' As $end
$var wire 1 g' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 e' out $end
$upscope $end

$scope module nandA $end
$var wire 1 Z! in1 $end
$var wire 1 e' in2 $end
$var wire 1 f' out $end
$upscope $end

$scope module nandB $end
$var wire 1 j! in1 $end
$var wire 1 N in2 $end
$var wire 1 g' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f' in1 $end
$var wire 1 g' in2 $end
$var wire 1 c' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 z! InA $end
$var wire 1 ," InB $end
$var wire 1 N S $end
$var wire 1 d' Out $end
$var wire 1 h' S_n $end
$var wire 1 i' As $end
$var wire 1 j' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 h' out $end
$upscope $end

$scope module nandA $end
$var wire 1 z! in1 $end
$var wire 1 h' in2 $end
$var wire 1 i' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ," in1 $end
$var wire 1 N in2 $end
$var wire 1 j' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i' in1 $end
$var wire 1 j' in2 $end
$var wire 1 d' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 c' InA $end
$var wire 1 d' InB $end
$var wire 1 M S $end
$var wire 1 C% Out $end
$var wire 1 k' S_n $end
$var wire 1 l' As $end
$var wire 1 m' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 k' out $end
$upscope $end

$scope module nandA $end
$var wire 1 c' in1 $end
$var wire 1 k' in2 $end
$var wire 1 l' out $end
$upscope $end

$scope module nandB $end
$var wire 1 d' in1 $end
$var wire 1 M in2 $end
$var wire 1 m' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l' in1 $end
$var wire 1 m' in2 $end
$var wire 1 C% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 n' N $end
$var wire 1 V! InA [3] $end
$var wire 1 W! InA [2] $end
$var wire 1 X! InA [1] $end
$var wire 1 Y! InA [0] $end
$var wire 1 f! InB [3] $end
$var wire 1 g! InB [2] $end
$var wire 1 h! InB [1] $end
$var wire 1 i! InB [0] $end
$var wire 1 v! InC [3] $end
$var wire 1 w! InC [2] $end
$var wire 1 x! InC [1] $end
$var wire 1 y! InC [0] $end
$var wire 1 (" InD [3] $end
$var wire 1 )" InD [2] $end
$var wire 1 *" InD [1] $end
$var wire 1 +" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ?% Out [3] $end
$var wire 1 @% Out [2] $end
$var wire 1 A% Out [1] $end
$var wire 1 B% Out [0] $end

$scope module mux0 $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 y! InC $end
$var wire 1 +" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 B% Out $end
$var wire 1 o' AB $end
$var wire 1 p' CD $end

$scope module muxAB $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 N S $end
$var wire 1 o' Out $end
$var wire 1 q' S_n $end
$var wire 1 r' As $end
$var wire 1 s' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 q' out $end
$upscope $end

$scope module nandA $end
$var wire 1 Y! in1 $end
$var wire 1 q' in2 $end
$var wire 1 r' out $end
$upscope $end

$scope module nandB $end
$var wire 1 i! in1 $end
$var wire 1 N in2 $end
$var wire 1 s' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 r' in1 $end
$var wire 1 s' in2 $end
$var wire 1 o' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 y! InA $end
$var wire 1 +" InB $end
$var wire 1 N S $end
$var wire 1 p' Out $end
$var wire 1 t' S_n $end
$var wire 1 u' As $end
$var wire 1 v' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 t' out $end
$upscope $end

$scope module nandA $end
$var wire 1 y! in1 $end
$var wire 1 t' in2 $end
$var wire 1 u' out $end
$upscope $end

$scope module nandB $end
$var wire 1 +" in1 $end
$var wire 1 N in2 $end
$var wire 1 v' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u' in1 $end
$var wire 1 v' in2 $end
$var wire 1 p' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 o' InA $end
$var wire 1 p' InB $end
$var wire 1 M S $end
$var wire 1 B% Out $end
$var wire 1 w' S_n $end
$var wire 1 x' As $end
$var wire 1 y' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 w' out $end
$upscope $end

$scope module nandA $end
$var wire 1 o' in1 $end
$var wire 1 w' in2 $end
$var wire 1 x' out $end
$upscope $end

$scope module nandB $end
$var wire 1 p' in1 $end
$var wire 1 M in2 $end
$var wire 1 y' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x' in1 $end
$var wire 1 y' in2 $end
$var wire 1 B% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 x! InC $end
$var wire 1 *" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 A% Out $end
$var wire 1 z' AB $end
$var wire 1 {' CD $end

$scope module muxAB $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 N S $end
$var wire 1 z' Out $end
$var wire 1 |' S_n $end
$var wire 1 }' As $end
$var wire 1 ~' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 |' out $end
$upscope $end

$scope module nandA $end
$var wire 1 X! in1 $end
$var wire 1 |' in2 $end
$var wire 1 }' out $end
$upscope $end

$scope module nandB $end
$var wire 1 h! in1 $end
$var wire 1 N in2 $end
$var wire 1 ~' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 }' in1 $end
$var wire 1 ~' in2 $end
$var wire 1 z' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 x! InA $end
$var wire 1 *" InB $end
$var wire 1 N S $end
$var wire 1 {' Out $end
$var wire 1 !( S_n $end
$var wire 1 "( As $end
$var wire 1 #( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 !( out $end
$upscope $end

$scope module nandA $end
$var wire 1 x! in1 $end
$var wire 1 !( in2 $end
$var wire 1 "( out $end
$upscope $end

$scope module nandB $end
$var wire 1 *" in1 $end
$var wire 1 N in2 $end
$var wire 1 #( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "( in1 $end
$var wire 1 #( in2 $end
$var wire 1 {' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 z' InA $end
$var wire 1 {' InB $end
$var wire 1 M S $end
$var wire 1 A% Out $end
$var wire 1 $( S_n $end
$var wire 1 %( As $end
$var wire 1 &( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 $( out $end
$upscope $end

$scope module nandA $end
$var wire 1 z' in1 $end
$var wire 1 $( in2 $end
$var wire 1 %( out $end
$upscope $end

$scope module nandB $end
$var wire 1 {' in1 $end
$var wire 1 M in2 $end
$var wire 1 &( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %( in1 $end
$var wire 1 &( in2 $end
$var wire 1 A% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 w! InC $end
$var wire 1 )" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 @% Out $end
$var wire 1 '( AB $end
$var wire 1 (( CD $end

$scope module muxAB $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 N S $end
$var wire 1 '( Out $end
$var wire 1 )( S_n $end
$var wire 1 *( As $end
$var wire 1 +( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 )( out $end
$upscope $end

$scope module nandA $end
$var wire 1 W! in1 $end
$var wire 1 )( in2 $end
$var wire 1 *( out $end
$upscope $end

$scope module nandB $end
$var wire 1 g! in1 $end
$var wire 1 N in2 $end
$var wire 1 +( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *( in1 $end
$var wire 1 +( in2 $end
$var wire 1 '( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 w! InA $end
$var wire 1 )" InB $end
$var wire 1 N S $end
$var wire 1 (( Out $end
$var wire 1 ,( S_n $end
$var wire 1 -( As $end
$var wire 1 .( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ,( out $end
$upscope $end

$scope module nandA $end
$var wire 1 w! in1 $end
$var wire 1 ,( in2 $end
$var wire 1 -( out $end
$upscope $end

$scope module nandB $end
$var wire 1 )" in1 $end
$var wire 1 N in2 $end
$var wire 1 .( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -( in1 $end
$var wire 1 .( in2 $end
$var wire 1 (( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 '( InA $end
$var wire 1 (( InB $end
$var wire 1 M S $end
$var wire 1 @% Out $end
$var wire 1 /( S_n $end
$var wire 1 0( As $end
$var wire 1 1( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 /( out $end
$upscope $end

$scope module nandA $end
$var wire 1 '( in1 $end
$var wire 1 /( in2 $end
$var wire 1 0( out $end
$upscope $end

$scope module nandB $end
$var wire 1 (( in1 $end
$var wire 1 M in2 $end
$var wire 1 1( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0( in1 $end
$var wire 1 1( in2 $end
$var wire 1 @% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 v! InC $end
$var wire 1 (" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ?% Out $end
$var wire 1 2( AB $end
$var wire 1 3( CD $end

$scope module muxAB $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 N S $end
$var wire 1 2( Out $end
$var wire 1 4( S_n $end
$var wire 1 5( As $end
$var wire 1 6( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 4( out $end
$upscope $end

$scope module nandA $end
$var wire 1 V! in1 $end
$var wire 1 4( in2 $end
$var wire 1 5( out $end
$upscope $end

$scope module nandB $end
$var wire 1 f! in1 $end
$var wire 1 N in2 $end
$var wire 1 6( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5( in1 $end
$var wire 1 6( in2 $end
$var wire 1 2( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 v! InA $end
$var wire 1 (" InB $end
$var wire 1 N S $end
$var wire 1 3( Out $end
$var wire 1 7( S_n $end
$var wire 1 8( As $end
$var wire 1 9( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 7( out $end
$upscope $end

$scope module nandA $end
$var wire 1 v! in1 $end
$var wire 1 7( in2 $end
$var wire 1 8( out $end
$upscope $end

$scope module nandB $end
$var wire 1 (" in1 $end
$var wire 1 N in2 $end
$var wire 1 9( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8( in1 $end
$var wire 1 9( in2 $end
$var wire 1 3( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 2( InA $end
$var wire 1 3( InB $end
$var wire 1 M S $end
$var wire 1 ?% Out $end
$var wire 1 :( S_n $end
$var wire 1 ;( As $end
$var wire 1 <( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 :( out $end
$upscope $end

$scope module nandA $end
$var wire 1 2( in1 $end
$var wire 1 :( in2 $end
$var wire 1 ;( out $end
$upscope $end

$scope module nandB $end
$var wire 1 3( in1 $end
$var wire 1 M in2 $end
$var wire 1 <( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;( in1 $end
$var wire 1 <( in2 $end
$var wire 1 ?% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var parameter 32 =( N $end
$var wire 1 R! InA [3] $end
$var wire 1 S! InA [2] $end
$var wire 1 T! InA [1] $end
$var wire 1 U! InA [0] $end
$var wire 1 b! InB [3] $end
$var wire 1 c! InB [2] $end
$var wire 1 d! InB [1] $end
$var wire 1 e! InB [0] $end
$var wire 1 r! InC [3] $end
$var wire 1 s! InC [2] $end
$var wire 1 t! InC [1] $end
$var wire 1 u! InC [0] $end
$var wire 1 $" InD [3] $end
$var wire 1 %" InD [2] $end
$var wire 1 &" InD [1] $end
$var wire 1 '" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ;% Out [3] $end
$var wire 1 <% Out [2] $end
$var wire 1 =% Out [1] $end
$var wire 1 >% Out [0] $end

$scope module mux0 $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 u! InC $end
$var wire 1 '" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 >% Out $end
$var wire 1 >( AB $end
$var wire 1 ?( CD $end

$scope module muxAB $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 N S $end
$var wire 1 >( Out $end
$var wire 1 @( S_n $end
$var wire 1 A( As $end
$var wire 1 B( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 @( out $end
$upscope $end

$scope module nandA $end
$var wire 1 U! in1 $end
$var wire 1 @( in2 $end
$var wire 1 A( out $end
$upscope $end

$scope module nandB $end
$var wire 1 e! in1 $end
$var wire 1 N in2 $end
$var wire 1 B( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 A( in1 $end
$var wire 1 B( in2 $end
$var wire 1 >( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 u! InA $end
$var wire 1 '" InB $end
$var wire 1 N S $end
$var wire 1 ?( Out $end
$var wire 1 C( S_n $end
$var wire 1 D( As $end
$var wire 1 E( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 C( out $end
$upscope $end

$scope module nandA $end
$var wire 1 u! in1 $end
$var wire 1 C( in2 $end
$var wire 1 D( out $end
$upscope $end

$scope module nandB $end
$var wire 1 '" in1 $end
$var wire 1 N in2 $end
$var wire 1 E( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D( in1 $end
$var wire 1 E( in2 $end
$var wire 1 ?( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 >( InA $end
$var wire 1 ?( InB $end
$var wire 1 M S $end
$var wire 1 >% Out $end
$var wire 1 F( S_n $end
$var wire 1 G( As $end
$var wire 1 H( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 F( out $end
$upscope $end

$scope module nandA $end
$var wire 1 >( in1 $end
$var wire 1 F( in2 $end
$var wire 1 G( out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?( in1 $end
$var wire 1 M in2 $end
$var wire 1 H( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G( in1 $end
$var wire 1 H( in2 $end
$var wire 1 >% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 t! InC $end
$var wire 1 &" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 =% Out $end
$var wire 1 I( AB $end
$var wire 1 J( CD $end

$scope module muxAB $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 N S $end
$var wire 1 I( Out $end
$var wire 1 K( S_n $end
$var wire 1 L( As $end
$var wire 1 M( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 K( out $end
$upscope $end

$scope module nandA $end
$var wire 1 T! in1 $end
$var wire 1 K( in2 $end
$var wire 1 L( out $end
$upscope $end

$scope module nandB $end
$var wire 1 d! in1 $end
$var wire 1 N in2 $end
$var wire 1 M( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 L( in1 $end
$var wire 1 M( in2 $end
$var wire 1 I( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 t! InA $end
$var wire 1 &" InB $end
$var wire 1 N S $end
$var wire 1 J( Out $end
$var wire 1 N( S_n $end
$var wire 1 O( As $end
$var wire 1 P( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 N( out $end
$upscope $end

$scope module nandA $end
$var wire 1 t! in1 $end
$var wire 1 N( in2 $end
$var wire 1 O( out $end
$upscope $end

$scope module nandB $end
$var wire 1 &" in1 $end
$var wire 1 N in2 $end
$var wire 1 P( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O( in1 $end
$var wire 1 P( in2 $end
$var wire 1 J( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 I( InA $end
$var wire 1 J( InB $end
$var wire 1 M S $end
$var wire 1 =% Out $end
$var wire 1 Q( S_n $end
$var wire 1 R( As $end
$var wire 1 S( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 Q( out $end
$upscope $end

$scope module nandA $end
$var wire 1 I( in1 $end
$var wire 1 Q( in2 $end
$var wire 1 R( out $end
$upscope $end

$scope module nandB $end
$var wire 1 J( in1 $end
$var wire 1 M in2 $end
$var wire 1 S( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R( in1 $end
$var wire 1 S( in2 $end
$var wire 1 =% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 s! InC $end
$var wire 1 %" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 <% Out $end
$var wire 1 T( AB $end
$var wire 1 U( CD $end

$scope module muxAB $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 N S $end
$var wire 1 T( Out $end
$var wire 1 V( S_n $end
$var wire 1 W( As $end
$var wire 1 X( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 V( out $end
$upscope $end

$scope module nandA $end
$var wire 1 S! in1 $end
$var wire 1 V( in2 $end
$var wire 1 W( out $end
$upscope $end

$scope module nandB $end
$var wire 1 c! in1 $end
$var wire 1 N in2 $end
$var wire 1 X( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W( in1 $end
$var wire 1 X( in2 $end
$var wire 1 T( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 s! InA $end
$var wire 1 %" InB $end
$var wire 1 N S $end
$var wire 1 U( Out $end
$var wire 1 Y( S_n $end
$var wire 1 Z( As $end
$var wire 1 [( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Y( out $end
$upscope $end

$scope module nandA $end
$var wire 1 s! in1 $end
$var wire 1 Y( in2 $end
$var wire 1 Z( out $end
$upscope $end

$scope module nandB $end
$var wire 1 %" in1 $end
$var wire 1 N in2 $end
$var wire 1 [( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z( in1 $end
$var wire 1 [( in2 $end
$var wire 1 U( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 T( InA $end
$var wire 1 U( InB $end
$var wire 1 M S $end
$var wire 1 <% Out $end
$var wire 1 \( S_n $end
$var wire 1 ]( As $end
$var wire 1 ^( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 \( out $end
$upscope $end

$scope module nandA $end
$var wire 1 T( in1 $end
$var wire 1 \( in2 $end
$var wire 1 ]( out $end
$upscope $end

$scope module nandB $end
$var wire 1 U( in1 $end
$var wire 1 M in2 $end
$var wire 1 ^( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ]( in1 $end
$var wire 1 ^( in2 $end
$var wire 1 <% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 r! InC $end
$var wire 1 $" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ;% Out $end
$var wire 1 _( AB $end
$var wire 1 `( CD $end

$scope module muxAB $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 N S $end
$var wire 1 _( Out $end
$var wire 1 a( S_n $end
$var wire 1 b( As $end
$var wire 1 c( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 a( out $end
$upscope $end

$scope module nandA $end
$var wire 1 R! in1 $end
$var wire 1 a( in2 $end
$var wire 1 b( out $end
$upscope $end

$scope module nandB $end
$var wire 1 b! in1 $end
$var wire 1 N in2 $end
$var wire 1 c( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b( in1 $end
$var wire 1 c( in2 $end
$var wire 1 _( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 r! InA $end
$var wire 1 $" InB $end
$var wire 1 N S $end
$var wire 1 `( Out $end
$var wire 1 d( S_n $end
$var wire 1 e( As $end
$var wire 1 f( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 d( out $end
$upscope $end

$scope module nandA $end
$var wire 1 r! in1 $end
$var wire 1 d( in2 $end
$var wire 1 e( out $end
$upscope $end

$scope module nandB $end
$var wire 1 $" in1 $end
$var wire 1 N in2 $end
$var wire 1 f( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e( in1 $end
$var wire 1 f( in2 $end
$var wire 1 `( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 _( InA $end
$var wire 1 `( InB $end
$var wire 1 M S $end
$var wire 1 ;% Out $end
$var wire 1 g( S_n $end
$var wire 1 h( As $end
$var wire 1 i( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 g( out $end
$upscope $end

$scope module nandA $end
$var wire 1 _( in1 $end
$var wire 1 g( in2 $end
$var wire 1 h( out $end
$upscope $end

$scope module nandB $end
$var wire 1 `( in1 $end
$var wire 1 M in2 $end
$var wire 1 i( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 h( in1 $end
$var wire 1 i( in2 $end
$var wire 1 ;% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var parameter 32 j( N $end
$var wire 1 N! InA [3] $end
$var wire 1 O! InA [2] $end
$var wire 1 P! InA [1] $end
$var wire 1 Q! InA [0] $end
$var wire 1 ^! InB [3] $end
$var wire 1 _! InB [2] $end
$var wire 1 `! InB [1] $end
$var wire 1 a! InB [0] $end
$var wire 1 n! InC [3] $end
$var wire 1 o! InC [2] $end
$var wire 1 p! InC [1] $end
$var wire 1 q! InC [0] $end
$var wire 1 ~! InD [3] $end
$var wire 1 !" InD [2] $end
$var wire 1 "" InD [1] $end
$var wire 1 #" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out [3] $end
$var wire 1 8% Out [2] $end
$var wire 1 9% Out [1] $end
$var wire 1 :% Out [0] $end

$scope module mux0 $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 q! InC $end
$var wire 1 #" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 :% Out $end
$var wire 1 k( AB $end
$var wire 1 l( CD $end

$scope module muxAB $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 N S $end
$var wire 1 k( Out $end
$var wire 1 m( S_n $end
$var wire 1 n( As $end
$var wire 1 o( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 m( out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q! in1 $end
$var wire 1 m( in2 $end
$var wire 1 n( out $end
$upscope $end

$scope module nandB $end
$var wire 1 a! in1 $end
$var wire 1 N in2 $end
$var wire 1 o( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 n( in1 $end
$var wire 1 o( in2 $end
$var wire 1 k( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 q! InA $end
$var wire 1 #" InB $end
$var wire 1 N S $end
$var wire 1 l( Out $end
$var wire 1 p( S_n $end
$var wire 1 q( As $end
$var wire 1 r( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 p( out $end
$upscope $end

$scope module nandA $end
$var wire 1 q! in1 $end
$var wire 1 p( in2 $end
$var wire 1 q( out $end
$upscope $end

$scope module nandB $end
$var wire 1 #" in1 $end
$var wire 1 N in2 $end
$var wire 1 r( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q( in1 $end
$var wire 1 r( in2 $end
$var wire 1 l( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 k( InA $end
$var wire 1 l( InB $end
$var wire 1 M S $end
$var wire 1 :% Out $end
$var wire 1 s( S_n $end
$var wire 1 t( As $end
$var wire 1 u( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 s( out $end
$upscope $end

$scope module nandA $end
$var wire 1 k( in1 $end
$var wire 1 s( in2 $end
$var wire 1 t( out $end
$upscope $end

$scope module nandB $end
$var wire 1 l( in1 $end
$var wire 1 M in2 $end
$var wire 1 u( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t( in1 $end
$var wire 1 u( in2 $end
$var wire 1 :% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 p! InC $end
$var wire 1 "" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 9% Out $end
$var wire 1 v( AB $end
$var wire 1 w( CD $end

$scope module muxAB $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 N S $end
$var wire 1 v( Out $end
$var wire 1 x( S_n $end
$var wire 1 y( As $end
$var wire 1 z( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 x( out $end
$upscope $end

$scope module nandA $end
$var wire 1 P! in1 $end
$var wire 1 x( in2 $end
$var wire 1 y( out $end
$upscope $end

$scope module nandB $end
$var wire 1 `! in1 $end
$var wire 1 N in2 $end
$var wire 1 z( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y( in1 $end
$var wire 1 z( in2 $end
$var wire 1 v( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 p! InA $end
$var wire 1 "" InB $end
$var wire 1 N S $end
$var wire 1 w( Out $end
$var wire 1 {( S_n $end
$var wire 1 |( As $end
$var wire 1 }( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 {( out $end
$upscope $end

$scope module nandA $end
$var wire 1 p! in1 $end
$var wire 1 {( in2 $end
$var wire 1 |( out $end
$upscope $end

$scope module nandB $end
$var wire 1 "" in1 $end
$var wire 1 N in2 $end
$var wire 1 }( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |( in1 $end
$var wire 1 }( in2 $end
$var wire 1 w( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v( InA $end
$var wire 1 w( InB $end
$var wire 1 M S $end
$var wire 1 9% Out $end
$var wire 1 ~( S_n $end
$var wire 1 !) As $end
$var wire 1 ") Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 ~( out $end
$upscope $end

$scope module nandA $end
$var wire 1 v( in1 $end
$var wire 1 ~( in2 $end
$var wire 1 !) out $end
$upscope $end

$scope module nandB $end
$var wire 1 w( in1 $end
$var wire 1 M in2 $end
$var wire 1 ") out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !) in1 $end
$var wire 1 ") in2 $end
$var wire 1 9% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 o! InC $end
$var wire 1 !" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 8% Out $end
$var wire 1 #) AB $end
$var wire 1 $) CD $end

$scope module muxAB $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 N S $end
$var wire 1 #) Out $end
$var wire 1 %) S_n $end
$var wire 1 &) As $end
$var wire 1 ') Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 %) out $end
$upscope $end

$scope module nandA $end
$var wire 1 O! in1 $end
$var wire 1 %) in2 $end
$var wire 1 &) out $end
$upscope $end

$scope module nandB $end
$var wire 1 _! in1 $end
$var wire 1 N in2 $end
$var wire 1 ') out $end
$upscope $end

$scope module nandOut $end
$var wire 1 &) in1 $end
$var wire 1 ') in2 $end
$var wire 1 #) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 o! InA $end
$var wire 1 !" InB $end
$var wire 1 N S $end
$var wire 1 $) Out $end
$var wire 1 () S_n $end
$var wire 1 )) As $end
$var wire 1 *) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 () out $end
$upscope $end

$scope module nandA $end
$var wire 1 o! in1 $end
$var wire 1 () in2 $end
$var wire 1 )) out $end
$upscope $end

$scope module nandB $end
$var wire 1 !" in1 $end
$var wire 1 N in2 $end
$var wire 1 *) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )) in1 $end
$var wire 1 *) in2 $end
$var wire 1 $) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 #) InA $end
$var wire 1 $) InB $end
$var wire 1 M S $end
$var wire 1 8% Out $end
$var wire 1 +) S_n $end
$var wire 1 ,) As $end
$var wire 1 -) Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 +) out $end
$upscope $end

$scope module nandA $end
$var wire 1 #) in1 $end
$var wire 1 +) in2 $end
$var wire 1 ,) out $end
$upscope $end

$scope module nandB $end
$var wire 1 $) in1 $end
$var wire 1 M in2 $end
$var wire 1 -) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ,) in1 $end
$var wire 1 -) in2 $end
$var wire 1 8% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 n! InC $end
$var wire 1 ~! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out $end
$var wire 1 .) AB $end
$var wire 1 /) CD $end

$scope module muxAB $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 N S $end
$var wire 1 .) Out $end
$var wire 1 0) S_n $end
$var wire 1 1) As $end
$var wire 1 2) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 0) out $end
$upscope $end

$scope module nandA $end
$var wire 1 N! in1 $end
$var wire 1 0) in2 $end
$var wire 1 1) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ^! in1 $end
$var wire 1 N in2 $end
$var wire 1 2) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1) in1 $end
$var wire 1 2) in2 $end
$var wire 1 .) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 n! InA $end
$var wire 1 ~! InB $end
$var wire 1 N S $end
$var wire 1 /) Out $end
$var wire 1 3) S_n $end
$var wire 1 4) As $end
$var wire 1 5) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 3) out $end
$upscope $end

$scope module nandA $end
$var wire 1 n! in1 $end
$var wire 1 3) in2 $end
$var wire 1 4) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~! in1 $end
$var wire 1 N in2 $end
$var wire 1 5) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4) in1 $end
$var wire 1 5) in2 $end
$var wire 1 /) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 .) InA $end
$var wire 1 /) InB $end
$var wire 1 M S $end
$var wire 1 7% Out $end
$var wire 1 6) S_n $end
$var wire 1 7) As $end
$var wire 1 8) Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 6) out $end
$upscope $end

$scope module nandA $end
$var wire 1 .) in1 $end
$var wire 1 6) in2 $end
$var wire 1 7) out $end
$upscope $end

$scope module nandB $end
$var wire 1 /) in1 $end
$var wire 1 M in2 $end
$var wire 1 8) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 7) in1 $end
$var wire 1 8) in2 $end
$var wire 1 7% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module read2Sel $end
$var parameter 32 9) N $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 N! InE [15] $end
$var wire 1 O! InE [14] $end
$var wire 1 P! InE [13] $end
$var wire 1 Q! InE [12] $end
$var wire 1 R! InE [11] $end
$var wire 1 S! InE [10] $end
$var wire 1 T! InE [9] $end
$var wire 1 U! InE [8] $end
$var wire 1 V! InE [7] $end
$var wire 1 W! InE [6] $end
$var wire 1 X! InE [5] $end
$var wire 1 Y! InE [4] $end
$var wire 1 Z! InE [3] $end
$var wire 1 [! InE [2] $end
$var wire 1 \! InE [1] $end
$var wire 1 ]! InE [0] $end
$var wire 1 ^! InF [15] $end
$var wire 1 _! InF [14] $end
$var wire 1 `! InF [13] $end
$var wire 1 a! InF [12] $end
$var wire 1 b! InF [11] $end
$var wire 1 c! InF [10] $end
$var wire 1 d! InF [9] $end
$var wire 1 e! InF [8] $end
$var wire 1 f! InF [7] $end
$var wire 1 g! InF [6] $end
$var wire 1 h! InF [5] $end
$var wire 1 i! InF [4] $end
$var wire 1 j! InF [3] $end
$var wire 1 k! InF [2] $end
$var wire 1 l! InF [1] $end
$var wire 1 m! InF [0] $end
$var wire 1 n! InG [15] $end
$var wire 1 o! InG [14] $end
$var wire 1 p! InG [13] $end
$var wire 1 q! InG [12] $end
$var wire 1 r! InG [11] $end
$var wire 1 s! InG [10] $end
$var wire 1 t! InG [9] $end
$var wire 1 u! InG [8] $end
$var wire 1 v! InG [7] $end
$var wire 1 w! InG [6] $end
$var wire 1 x! InG [5] $end
$var wire 1 y! InG [4] $end
$var wire 1 z! InG [3] $end
$var wire 1 {! InG [2] $end
$var wire 1 |! InG [1] $end
$var wire 1 }! InG [0] $end
$var wire 1 ~! InH [15] $end
$var wire 1 !" InH [14] $end
$var wire 1 "" InH [13] $end
$var wire 1 #" InH [12] $end
$var wire 1 $" InH [11] $end
$var wire 1 %" InH [10] $end
$var wire 1 &" InH [9] $end
$var wire 1 '" InH [8] $end
$var wire 1 (" InH [7] $end
$var wire 1 )" InH [6] $end
$var wire 1 *" InH [5] $end
$var wire 1 +" InH [4] $end
$var wire 1 ," InH [3] $end
$var wire 1 -" InH [2] $end
$var wire 1 ." InH [1] $end
$var wire 1 /" InH [0] $end
$var wire 1 O S [2] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 1 Out [15] $end
$var wire 1 2 Out [14] $end
$var wire 1 3 Out [13] $end
$var wire 1 4 Out [12] $end
$var wire 1 5 Out [11] $end
$var wire 1 6 Out [10] $end
$var wire 1 7 Out [9] $end
$var wire 1 8 Out [8] $end
$var wire 1 9 Out [7] $end
$var wire 1 : Out [6] $end
$var wire 1 ; Out [5] $end
$var wire 1 < Out [4] $end
$var wire 1 = Out [3] $end
$var wire 1 > Out [2] $end
$var wire 1 ? Out [1] $end
$var wire 1 @ Out [0] $end
$var wire 1 :) mux1out [15] $end
$var wire 1 ;) mux1out [14] $end
$var wire 1 <) mux1out [13] $end
$var wire 1 =) mux1out [12] $end
$var wire 1 >) mux1out [11] $end
$var wire 1 ?) mux1out [10] $end
$var wire 1 @) mux1out [9] $end
$var wire 1 A) mux1out [8] $end
$var wire 1 B) mux1out [7] $end
$var wire 1 C) mux1out [6] $end
$var wire 1 D) mux1out [5] $end
$var wire 1 E) mux1out [4] $end
$var wire 1 F) mux1out [3] $end
$var wire 1 G) mux1out [2] $end
$var wire 1 H) mux1out [1] $end
$var wire 1 I) mux1out [0] $end
$var wire 1 J) mux2out [15] $end
$var wire 1 K) mux2out [14] $end
$var wire 1 L) mux2out [13] $end
$var wire 1 M) mux2out [12] $end
$var wire 1 N) mux2out [11] $end
$var wire 1 O) mux2out [10] $end
$var wire 1 P) mux2out [9] $end
$var wire 1 Q) mux2out [8] $end
$var wire 1 R) mux2out [7] $end
$var wire 1 S) mux2out [6] $end
$var wire 1 T) mux2out [5] $end
$var wire 1 U) mux2out [4] $end
$var wire 1 V) mux2out [3] $end
$var wire 1 W) mux2out [2] $end
$var wire 1 X) mux2out [1] $end
$var wire 1 Y) mux2out [0] $end

$scope module mux0 $end
$var parameter 32 Z) N $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out [15] $end
$var wire 1 ;) Out [14] $end
$var wire 1 <) Out [13] $end
$var wire 1 =) Out [12] $end
$var wire 1 >) Out [11] $end
$var wire 1 ?) Out [10] $end
$var wire 1 @) Out [9] $end
$var wire 1 A) Out [8] $end
$var wire 1 B) Out [7] $end
$var wire 1 C) Out [6] $end
$var wire 1 D) Out [5] $end
$var wire 1 E) Out [4] $end
$var wire 1 F) Out [3] $end
$var wire 1 G) Out [2] $end
$var wire 1 H) Out [1] $end
$var wire 1 I) Out [0] $end

$scope module mux0 $end
$var parameter 32 [) N $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 F) Out [3] $end
$var wire 1 G) Out [2] $end
$var wire 1 H) Out [1] $end
$var wire 1 I) Out [0] $end

$scope module mux0 $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 =! InC $end
$var wire 1 M! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 I) Out $end
$var wire 1 \) AB $end
$var wire 1 ]) CD $end

$scope module muxAB $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 Q S $end
$var wire 1 \) Out $end
$var wire 1 ^) S_n $end
$var wire 1 _) As $end
$var wire 1 `) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ^) out $end
$upscope $end

$scope module nandA $end
$var wire 1 { in1 $end
$var wire 1 ^) in2 $end
$var wire 1 _) out $end
$upscope $end

$scope module nandB $end
$var wire 1 -! in1 $end
$var wire 1 Q in2 $end
$var wire 1 `) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 _) in1 $end
$var wire 1 `) in2 $end
$var wire 1 \) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 =! InA $end
$var wire 1 M! InB $end
$var wire 1 Q S $end
$var wire 1 ]) Out $end
$var wire 1 a) S_n $end
$var wire 1 b) As $end
$var wire 1 c) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 a) out $end
$upscope $end

$scope module nandA $end
$var wire 1 =! in1 $end
$var wire 1 a) in2 $end
$var wire 1 b) out $end
$upscope $end

$scope module nandB $end
$var wire 1 M! in1 $end
$var wire 1 Q in2 $end
$var wire 1 c) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b) in1 $end
$var wire 1 c) in2 $end
$var wire 1 ]) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 \) InA $end
$var wire 1 ]) InB $end
$var wire 1 P S $end
$var wire 1 I) Out $end
$var wire 1 d) S_n $end
$var wire 1 e) As $end
$var wire 1 f) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 d) out $end
$upscope $end

$scope module nandA $end
$var wire 1 \) in1 $end
$var wire 1 d) in2 $end
$var wire 1 e) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ]) in1 $end
$var wire 1 P in2 $end
$var wire 1 f) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e) in1 $end
$var wire 1 f) in2 $end
$var wire 1 I) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 <! InC $end
$var wire 1 L! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 H) Out $end
$var wire 1 g) AB $end
$var wire 1 h) CD $end

$scope module muxAB $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 Q S $end
$var wire 1 g) Out $end
$var wire 1 i) S_n $end
$var wire 1 j) As $end
$var wire 1 k) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 i) out $end
$upscope $end

$scope module nandA $end
$var wire 1 z in1 $end
$var wire 1 i) in2 $end
$var wire 1 j) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,! in1 $end
$var wire 1 Q in2 $end
$var wire 1 k) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 j) in1 $end
$var wire 1 k) in2 $end
$var wire 1 g) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 <! InA $end
$var wire 1 L! InB $end
$var wire 1 Q S $end
$var wire 1 h) Out $end
$var wire 1 l) S_n $end
$var wire 1 m) As $end
$var wire 1 n) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 l) out $end
$upscope $end

$scope module nandA $end
$var wire 1 <! in1 $end
$var wire 1 l) in2 $end
$var wire 1 m) out $end
$upscope $end

$scope module nandB $end
$var wire 1 L! in1 $end
$var wire 1 Q in2 $end
$var wire 1 n) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m) in1 $end
$var wire 1 n) in2 $end
$var wire 1 h) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 g) InA $end
$var wire 1 h) InB $end
$var wire 1 P S $end
$var wire 1 H) Out $end
$var wire 1 o) S_n $end
$var wire 1 p) As $end
$var wire 1 q) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 o) out $end
$upscope $end

$scope module nandA $end
$var wire 1 g) in1 $end
$var wire 1 o) in2 $end
$var wire 1 p) out $end
$upscope $end

$scope module nandB $end
$var wire 1 h) in1 $end
$var wire 1 P in2 $end
$var wire 1 q) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p) in1 $end
$var wire 1 q) in2 $end
$var wire 1 H) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 ;! InC $end
$var wire 1 K! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 G) Out $end
$var wire 1 r) AB $end
$var wire 1 s) CD $end

$scope module muxAB $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 Q S $end
$var wire 1 r) Out $end
$var wire 1 t) S_n $end
$var wire 1 u) As $end
$var wire 1 v) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 t) out $end
$upscope $end

$scope module nandA $end
$var wire 1 y in1 $end
$var wire 1 t) in2 $end
$var wire 1 u) out $end
$upscope $end

$scope module nandB $end
$var wire 1 +! in1 $end
$var wire 1 Q in2 $end
$var wire 1 v) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u) in1 $end
$var wire 1 v) in2 $end
$var wire 1 r) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 ;! InA $end
$var wire 1 K! InB $end
$var wire 1 Q S $end
$var wire 1 s) Out $end
$var wire 1 w) S_n $end
$var wire 1 x) As $end
$var wire 1 y) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 w) out $end
$upscope $end

$scope module nandA $end
$var wire 1 ;! in1 $end
$var wire 1 w) in2 $end
$var wire 1 x) out $end
$upscope $end

$scope module nandB $end
$var wire 1 K! in1 $end
$var wire 1 Q in2 $end
$var wire 1 y) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x) in1 $end
$var wire 1 y) in2 $end
$var wire 1 s) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r) InA $end
$var wire 1 s) InB $end
$var wire 1 P S $end
$var wire 1 G) Out $end
$var wire 1 z) S_n $end
$var wire 1 {) As $end
$var wire 1 |) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 z) out $end
$upscope $end

$scope module nandA $end
$var wire 1 r) in1 $end
$var wire 1 z) in2 $end
$var wire 1 {) out $end
$upscope $end

$scope module nandB $end
$var wire 1 s) in1 $end
$var wire 1 P in2 $end
$var wire 1 |) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {) in1 $end
$var wire 1 |) in2 $end
$var wire 1 G) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 :! InC $end
$var wire 1 J! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 F) Out $end
$var wire 1 }) AB $end
$var wire 1 ~) CD $end

$scope module muxAB $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 Q S $end
$var wire 1 }) Out $end
$var wire 1 !* S_n $end
$var wire 1 "* As $end
$var wire 1 #* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 !* out $end
$upscope $end

$scope module nandA $end
$var wire 1 x in1 $end
$var wire 1 !* in2 $end
$var wire 1 "* out $end
$upscope $end

$scope module nandB $end
$var wire 1 *! in1 $end
$var wire 1 Q in2 $end
$var wire 1 #* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "* in1 $end
$var wire 1 #* in2 $end
$var wire 1 }) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 :! InA $end
$var wire 1 J! InB $end
$var wire 1 Q S $end
$var wire 1 ~) Out $end
$var wire 1 $* S_n $end
$var wire 1 %* As $end
$var wire 1 &* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 $* out $end
$upscope $end

$scope module nandA $end
$var wire 1 :! in1 $end
$var wire 1 $* in2 $end
$var wire 1 %* out $end
$upscope $end

$scope module nandB $end
$var wire 1 J! in1 $end
$var wire 1 Q in2 $end
$var wire 1 &* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %* in1 $end
$var wire 1 &* in2 $end
$var wire 1 ~) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 }) InA $end
$var wire 1 ~) InB $end
$var wire 1 P S $end
$var wire 1 F) Out $end
$var wire 1 '* S_n $end
$var wire 1 (* As $end
$var wire 1 )* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 '* out $end
$upscope $end

$scope module nandA $end
$var wire 1 }) in1 $end
$var wire 1 '* in2 $end
$var wire 1 (* out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~) in1 $end
$var wire 1 P in2 $end
$var wire 1 )* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 (* in1 $end
$var wire 1 )* in2 $end
$var wire 1 F) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 ** N $end
$var wire 1 t InA [3] $end
$var wire 1 u InA [2] $end
$var wire 1 v InA [1] $end
$var wire 1 w InA [0] $end
$var wire 1 &! InB [3] $end
$var wire 1 '! InB [2] $end
$var wire 1 (! InB [1] $end
$var wire 1 )! InB [0] $end
$var wire 1 6! InC [3] $end
$var wire 1 7! InC [2] $end
$var wire 1 8! InC [1] $end
$var wire 1 9! InC [0] $end
$var wire 1 F! InD [3] $end
$var wire 1 G! InD [2] $end
$var wire 1 H! InD [1] $end
$var wire 1 I! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 B) Out [3] $end
$var wire 1 C) Out [2] $end
$var wire 1 D) Out [1] $end
$var wire 1 E) Out [0] $end

$scope module mux0 $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 9! InC $end
$var wire 1 I! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 E) Out $end
$var wire 1 +* AB $end
$var wire 1 ,* CD $end

$scope module muxAB $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 Q S $end
$var wire 1 +* Out $end
$var wire 1 -* S_n $end
$var wire 1 .* As $end
$var wire 1 /* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 -* out $end
$upscope $end

$scope module nandA $end
$var wire 1 w in1 $end
$var wire 1 -* in2 $end
$var wire 1 .* out $end
$upscope $end

$scope module nandB $end
$var wire 1 )! in1 $end
$var wire 1 Q in2 $end
$var wire 1 /* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 .* in1 $end
$var wire 1 /* in2 $end
$var wire 1 +* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 9! InA $end
$var wire 1 I! InB $end
$var wire 1 Q S $end
$var wire 1 ,* Out $end
$var wire 1 0* S_n $end
$var wire 1 1* As $end
$var wire 1 2* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 0* out $end
$upscope $end

$scope module nandA $end
$var wire 1 9! in1 $end
$var wire 1 0* in2 $end
$var wire 1 1* out $end
$upscope $end

$scope module nandB $end
$var wire 1 I! in1 $end
$var wire 1 Q in2 $end
$var wire 1 2* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1* in1 $end
$var wire 1 2* in2 $end
$var wire 1 ,* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 +* InA $end
$var wire 1 ,* InB $end
$var wire 1 P S $end
$var wire 1 E) Out $end
$var wire 1 3* S_n $end
$var wire 1 4* As $end
$var wire 1 5* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 3* out $end
$upscope $end

$scope module nandA $end
$var wire 1 +* in1 $end
$var wire 1 3* in2 $end
$var wire 1 4* out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,* in1 $end
$var wire 1 P in2 $end
$var wire 1 5* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4* in1 $end
$var wire 1 5* in2 $end
$var wire 1 E) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 8! InC $end
$var wire 1 H! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 D) Out $end
$var wire 1 6* AB $end
$var wire 1 7* CD $end

$scope module muxAB $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 Q S $end
$var wire 1 6* Out $end
$var wire 1 8* S_n $end
$var wire 1 9* As $end
$var wire 1 :* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 8* out $end
$upscope $end

$scope module nandA $end
$var wire 1 v in1 $end
$var wire 1 8* in2 $end
$var wire 1 9* out $end
$upscope $end

$scope module nandB $end
$var wire 1 (! in1 $end
$var wire 1 Q in2 $end
$var wire 1 :* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 9* in1 $end
$var wire 1 :* in2 $end
$var wire 1 6* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 8! InA $end
$var wire 1 H! InB $end
$var wire 1 Q S $end
$var wire 1 7* Out $end
$var wire 1 ;* S_n $end
$var wire 1 <* As $end
$var wire 1 =* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ;* out $end
$upscope $end

$scope module nandA $end
$var wire 1 8! in1 $end
$var wire 1 ;* in2 $end
$var wire 1 <* out $end
$upscope $end

$scope module nandB $end
$var wire 1 H! in1 $end
$var wire 1 Q in2 $end
$var wire 1 =* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <* in1 $end
$var wire 1 =* in2 $end
$var wire 1 7* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 6* InA $end
$var wire 1 7* InB $end
$var wire 1 P S $end
$var wire 1 D) Out $end
$var wire 1 >* S_n $end
$var wire 1 ?* As $end
$var wire 1 @* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 >* out $end
$upscope $end

$scope module nandA $end
$var wire 1 6* in1 $end
$var wire 1 >* in2 $end
$var wire 1 ?* out $end
$upscope $end

$scope module nandB $end
$var wire 1 7* in1 $end
$var wire 1 P in2 $end
$var wire 1 @* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?* in1 $end
$var wire 1 @* in2 $end
$var wire 1 D) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 7! InC $end
$var wire 1 G! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 C) Out $end
$var wire 1 A* AB $end
$var wire 1 B* CD $end

$scope module muxAB $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 Q S $end
$var wire 1 A* Out $end
$var wire 1 C* S_n $end
$var wire 1 D* As $end
$var wire 1 E* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 C* out $end
$upscope $end

$scope module nandA $end
$var wire 1 u in1 $end
$var wire 1 C* in2 $end
$var wire 1 D* out $end
$upscope $end

$scope module nandB $end
$var wire 1 '! in1 $end
$var wire 1 Q in2 $end
$var wire 1 E* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D* in1 $end
$var wire 1 E* in2 $end
$var wire 1 A* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 7! InA $end
$var wire 1 G! InB $end
$var wire 1 Q S $end
$var wire 1 B* Out $end
$var wire 1 F* S_n $end
$var wire 1 G* As $end
$var wire 1 H* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 F* out $end
$upscope $end

$scope module nandA $end
$var wire 1 7! in1 $end
$var wire 1 F* in2 $end
$var wire 1 G* out $end
$upscope $end

$scope module nandB $end
$var wire 1 G! in1 $end
$var wire 1 Q in2 $end
$var wire 1 H* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G* in1 $end
$var wire 1 H* in2 $end
$var wire 1 B* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 A* InA $end
$var wire 1 B* InB $end
$var wire 1 P S $end
$var wire 1 C) Out $end
$var wire 1 I* S_n $end
$var wire 1 J* As $end
$var wire 1 K* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 I* out $end
$upscope $end

$scope module nandA $end
$var wire 1 A* in1 $end
$var wire 1 I* in2 $end
$var wire 1 J* out $end
$upscope $end

$scope module nandB $end
$var wire 1 B* in1 $end
$var wire 1 P in2 $end
$var wire 1 K* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 J* in1 $end
$var wire 1 K* in2 $end
$var wire 1 C) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 6! InC $end
$var wire 1 F! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 B) Out $end
$var wire 1 L* AB $end
$var wire 1 M* CD $end

$scope module muxAB $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 Q S $end
$var wire 1 L* Out $end
$var wire 1 N* S_n $end
$var wire 1 O* As $end
$var wire 1 P* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 N* out $end
$upscope $end

$scope module nandA $end
$var wire 1 t in1 $end
$var wire 1 N* in2 $end
$var wire 1 O* out $end
$upscope $end

$scope module nandB $end
$var wire 1 &! in1 $end
$var wire 1 Q in2 $end
$var wire 1 P* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O* in1 $end
$var wire 1 P* in2 $end
$var wire 1 L* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 6! InA $end
$var wire 1 F! InB $end
$var wire 1 Q S $end
$var wire 1 M* Out $end
$var wire 1 Q* S_n $end
$var wire 1 R* As $end
$var wire 1 S* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Q* out $end
$upscope $end

$scope module nandA $end
$var wire 1 6! in1 $end
$var wire 1 Q* in2 $end
$var wire 1 R* out $end
$upscope $end

$scope module nandB $end
$var wire 1 F! in1 $end
$var wire 1 Q in2 $end
$var wire 1 S* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R* in1 $end
$var wire 1 S* in2 $end
$var wire 1 M* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 L* InA $end
$var wire 1 M* InB $end
$var wire 1 P S $end
$var wire 1 B) Out $end
$var wire 1 T* S_n $end
$var wire 1 U* As $end
$var wire 1 V* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 T* out $end
$upscope $end

$scope module nandA $end
$var wire 1 L* in1 $end
$var wire 1 T* in2 $end
$var wire 1 U* out $end
$upscope $end

$scope module nandB $end
$var wire 1 M* in1 $end
$var wire 1 P in2 $end
$var wire 1 V* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 U* in1 $end
$var wire 1 V* in2 $end
$var wire 1 B) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var parameter 32 W* N $end
$var wire 1 p InA [3] $end
$var wire 1 q InA [2] $end
$var wire 1 r InA [1] $end
$var wire 1 s InA [0] $end
$var wire 1 "! InB [3] $end
$var wire 1 #! InB [2] $end
$var wire 1 $! InB [1] $end
$var wire 1 %! InB [0] $end
$var wire 1 2! InC [3] $end
$var wire 1 3! InC [2] $end
$var wire 1 4! InC [1] $end
$var wire 1 5! InC [0] $end
$var wire 1 B! InD [3] $end
$var wire 1 C! InD [2] $end
$var wire 1 D! InD [1] $end
$var wire 1 E! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 >) Out [3] $end
$var wire 1 ?) Out [2] $end
$var wire 1 @) Out [1] $end
$var wire 1 A) Out [0] $end

$scope module mux0 $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 5! InC $end
$var wire 1 E! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 A) Out $end
$var wire 1 X* AB $end
$var wire 1 Y* CD $end

$scope module muxAB $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 Q S $end
$var wire 1 X* Out $end
$var wire 1 Z* S_n $end
$var wire 1 [* As $end
$var wire 1 \* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Z* out $end
$upscope $end

$scope module nandA $end
$var wire 1 s in1 $end
$var wire 1 Z* in2 $end
$var wire 1 [* out $end
$upscope $end

$scope module nandB $end
$var wire 1 %! in1 $end
$var wire 1 Q in2 $end
$var wire 1 \* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [* in1 $end
$var wire 1 \* in2 $end
$var wire 1 X* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 5! InA $end
$var wire 1 E! InB $end
$var wire 1 Q S $end
$var wire 1 Y* Out $end
$var wire 1 ]* S_n $end
$var wire 1 ^* As $end
$var wire 1 _* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ]* out $end
$upscope $end

$scope module nandA $end
$var wire 1 5! in1 $end
$var wire 1 ]* in2 $end
$var wire 1 ^* out $end
$upscope $end

$scope module nandB $end
$var wire 1 E! in1 $end
$var wire 1 Q in2 $end
$var wire 1 _* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^* in1 $end
$var wire 1 _* in2 $end
$var wire 1 Y* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 X* InA $end
$var wire 1 Y* InB $end
$var wire 1 P S $end
$var wire 1 A) Out $end
$var wire 1 `* S_n $end
$var wire 1 a* As $end
$var wire 1 b* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 `* out $end
$upscope $end

$scope module nandA $end
$var wire 1 X* in1 $end
$var wire 1 `* in2 $end
$var wire 1 a* out $end
$upscope $end

$scope module nandB $end
$var wire 1 Y* in1 $end
$var wire 1 P in2 $end
$var wire 1 b* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a* in1 $end
$var wire 1 b* in2 $end
$var wire 1 A) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 4! InC $end
$var wire 1 D! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 @) Out $end
$var wire 1 c* AB $end
$var wire 1 d* CD $end

$scope module muxAB $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 Q S $end
$var wire 1 c* Out $end
$var wire 1 e* S_n $end
$var wire 1 f* As $end
$var wire 1 g* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 e* out $end
$upscope $end

$scope module nandA $end
$var wire 1 r in1 $end
$var wire 1 e* in2 $end
$var wire 1 f* out $end
$upscope $end

$scope module nandB $end
$var wire 1 $! in1 $end
$var wire 1 Q in2 $end
$var wire 1 g* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f* in1 $end
$var wire 1 g* in2 $end
$var wire 1 c* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 4! InA $end
$var wire 1 D! InB $end
$var wire 1 Q S $end
$var wire 1 d* Out $end
$var wire 1 h* S_n $end
$var wire 1 i* As $end
$var wire 1 j* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 h* out $end
$upscope $end

$scope module nandA $end
$var wire 1 4! in1 $end
$var wire 1 h* in2 $end
$var wire 1 i* out $end
$upscope $end

$scope module nandB $end
$var wire 1 D! in1 $end
$var wire 1 Q in2 $end
$var wire 1 j* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i* in1 $end
$var wire 1 j* in2 $end
$var wire 1 d* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 c* InA $end
$var wire 1 d* InB $end
$var wire 1 P S $end
$var wire 1 @) Out $end
$var wire 1 k* S_n $end
$var wire 1 l* As $end
$var wire 1 m* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 k* out $end
$upscope $end

$scope module nandA $end
$var wire 1 c* in1 $end
$var wire 1 k* in2 $end
$var wire 1 l* out $end
$upscope $end

$scope module nandB $end
$var wire 1 d* in1 $end
$var wire 1 P in2 $end
$var wire 1 m* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l* in1 $end
$var wire 1 m* in2 $end
$var wire 1 @) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 3! InC $end
$var wire 1 C! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 ?) Out $end
$var wire 1 n* AB $end
$var wire 1 o* CD $end

$scope module muxAB $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 Q S $end
$var wire 1 n* Out $end
$var wire 1 p* S_n $end
$var wire 1 q* As $end
$var wire 1 r* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 p* out $end
$upscope $end

$scope module nandA $end
$var wire 1 q in1 $end
$var wire 1 p* in2 $end
$var wire 1 q* out $end
$upscope $end

$scope module nandB $end
$var wire 1 #! in1 $end
$var wire 1 Q in2 $end
$var wire 1 r* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q* in1 $end
$var wire 1 r* in2 $end
$var wire 1 n* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 3! InA $end
$var wire 1 C! InB $end
$var wire 1 Q S $end
$var wire 1 o* Out $end
$var wire 1 s* S_n $end
$var wire 1 t* As $end
$var wire 1 u* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 s* out $end
$upscope $end

$scope module nandA $end
$var wire 1 3! in1 $end
$var wire 1 s* in2 $end
$var wire 1 t* out $end
$upscope $end

$scope module nandB $end
$var wire 1 C! in1 $end
$var wire 1 Q in2 $end
$var wire 1 u* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t* in1 $end
$var wire 1 u* in2 $end
$var wire 1 o* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 n* InA $end
$var wire 1 o* InB $end
$var wire 1 P S $end
$var wire 1 ?) Out $end
$var wire 1 v* S_n $end
$var wire 1 w* As $end
$var wire 1 x* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 v* out $end
$upscope $end

$scope module nandA $end
$var wire 1 n* in1 $end
$var wire 1 v* in2 $end
$var wire 1 w* out $end
$upscope $end

$scope module nandB $end
$var wire 1 o* in1 $end
$var wire 1 P in2 $end
$var wire 1 x* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 w* in1 $end
$var wire 1 x* in2 $end
$var wire 1 ?) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 2! InC $end
$var wire 1 B! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 >) Out $end
$var wire 1 y* AB $end
$var wire 1 z* CD $end

$scope module muxAB $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 Q S $end
$var wire 1 y* Out $end
$var wire 1 {* S_n $end
$var wire 1 |* As $end
$var wire 1 }* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 {* out $end
$upscope $end

$scope module nandA $end
$var wire 1 p in1 $end
$var wire 1 {* in2 $end
$var wire 1 |* out $end
$upscope $end

$scope module nandB $end
$var wire 1 "! in1 $end
$var wire 1 Q in2 $end
$var wire 1 }* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |* in1 $end
$var wire 1 }* in2 $end
$var wire 1 y* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 2! InA $end
$var wire 1 B! InB $end
$var wire 1 Q S $end
$var wire 1 z* Out $end
$var wire 1 ~* S_n $end
$var wire 1 !+ As $end
$var wire 1 "+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ~* out $end
$upscope $end

$scope module nandA $end
$var wire 1 2! in1 $end
$var wire 1 ~* in2 $end
$var wire 1 !+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 B! in1 $end
$var wire 1 Q in2 $end
$var wire 1 "+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !+ in1 $end
$var wire 1 "+ in2 $end
$var wire 1 z* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 y* InA $end
$var wire 1 z* InB $end
$var wire 1 P S $end
$var wire 1 >) Out $end
$var wire 1 #+ S_n $end
$var wire 1 $+ As $end
$var wire 1 %+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 #+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 y* in1 $end
$var wire 1 #+ in2 $end
$var wire 1 $+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 z* in1 $end
$var wire 1 P in2 $end
$var wire 1 %+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 $+ in1 $end
$var wire 1 %+ in2 $end
$var wire 1 >) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var parameter 32 &+ N $end
$var wire 1 l InA [3] $end
$var wire 1 m InA [2] $end
$var wire 1 n InA [1] $end
$var wire 1 o InA [0] $end
$var wire 1 | InB [3] $end
$var wire 1 } InB [2] $end
$var wire 1 ~ InB [1] $end
$var wire 1 !! InB [0] $end
$var wire 1 .! InC [3] $end
$var wire 1 /! InC [2] $end
$var wire 1 0! InC [1] $end
$var wire 1 1! InC [0] $end
$var wire 1 >! InD [3] $end
$var wire 1 ?! InD [2] $end
$var wire 1 @! InD [1] $end
$var wire 1 A! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out [3] $end
$var wire 1 ;) Out [2] $end
$var wire 1 <) Out [1] $end
$var wire 1 =) Out [0] $end

$scope module mux0 $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 1! InC $end
$var wire 1 A! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 =) Out $end
$var wire 1 '+ AB $end
$var wire 1 (+ CD $end

$scope module muxAB $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 Q S $end
$var wire 1 '+ Out $end
$var wire 1 )+ S_n $end
$var wire 1 *+ As $end
$var wire 1 ++ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 )+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 o in1 $end
$var wire 1 )+ in2 $end
$var wire 1 *+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 !! in1 $end
$var wire 1 Q in2 $end
$var wire 1 ++ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *+ in1 $end
$var wire 1 ++ in2 $end
$var wire 1 '+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 1! InA $end
$var wire 1 A! InB $end
$var wire 1 Q S $end
$var wire 1 (+ Out $end
$var wire 1 ,+ S_n $end
$var wire 1 -+ As $end
$var wire 1 .+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ,+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 1! in1 $end
$var wire 1 ,+ in2 $end
$var wire 1 -+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 A! in1 $end
$var wire 1 Q in2 $end
$var wire 1 .+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -+ in1 $end
$var wire 1 .+ in2 $end
$var wire 1 (+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 '+ InA $end
$var wire 1 (+ InB $end
$var wire 1 P S $end
$var wire 1 =) Out $end
$var wire 1 /+ S_n $end
$var wire 1 0+ As $end
$var wire 1 1+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 /+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 '+ in1 $end
$var wire 1 /+ in2 $end
$var wire 1 0+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 (+ in1 $end
$var wire 1 P in2 $end
$var wire 1 1+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0+ in1 $end
$var wire 1 1+ in2 $end
$var wire 1 =) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 0! InC $end
$var wire 1 @! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 <) Out $end
$var wire 1 2+ AB $end
$var wire 1 3+ CD $end

$scope module muxAB $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 Q S $end
$var wire 1 2+ Out $end
$var wire 1 4+ S_n $end
$var wire 1 5+ As $end
$var wire 1 6+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 4+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 n in1 $end
$var wire 1 4+ in2 $end
$var wire 1 5+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~ in1 $end
$var wire 1 Q in2 $end
$var wire 1 6+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5+ in1 $end
$var wire 1 6+ in2 $end
$var wire 1 2+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 0! InA $end
$var wire 1 @! InB $end
$var wire 1 Q S $end
$var wire 1 3+ Out $end
$var wire 1 7+ S_n $end
$var wire 1 8+ As $end
$var wire 1 9+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 7+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 0! in1 $end
$var wire 1 7+ in2 $end
$var wire 1 8+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 @! in1 $end
$var wire 1 Q in2 $end
$var wire 1 9+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8+ in1 $end
$var wire 1 9+ in2 $end
$var wire 1 3+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 2+ InA $end
$var wire 1 3+ InB $end
$var wire 1 P S $end
$var wire 1 <) Out $end
$var wire 1 :+ S_n $end
$var wire 1 ;+ As $end
$var wire 1 <+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 :+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 2+ in1 $end
$var wire 1 :+ in2 $end
$var wire 1 ;+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 3+ in1 $end
$var wire 1 P in2 $end
$var wire 1 <+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;+ in1 $end
$var wire 1 <+ in2 $end
$var wire 1 <) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 /! InC $end
$var wire 1 ?! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 ;) Out $end
$var wire 1 =+ AB $end
$var wire 1 >+ CD $end

$scope module muxAB $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 Q S $end
$var wire 1 =+ Out $end
$var wire 1 ?+ S_n $end
$var wire 1 @+ As $end
$var wire 1 A+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ?+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 m in1 $end
$var wire 1 ?+ in2 $end
$var wire 1 @+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 } in1 $end
$var wire 1 Q in2 $end
$var wire 1 A+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 @+ in1 $end
$var wire 1 A+ in2 $end
$var wire 1 =+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 /! InA $end
$var wire 1 ?! InB $end
$var wire 1 Q S $end
$var wire 1 >+ Out $end
$var wire 1 B+ S_n $end
$var wire 1 C+ As $end
$var wire 1 D+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 B+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 /! in1 $end
$var wire 1 B+ in2 $end
$var wire 1 C+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?! in1 $end
$var wire 1 Q in2 $end
$var wire 1 D+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 C+ in1 $end
$var wire 1 D+ in2 $end
$var wire 1 >+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 =+ InA $end
$var wire 1 >+ InB $end
$var wire 1 P S $end
$var wire 1 ;) Out $end
$var wire 1 E+ S_n $end
$var wire 1 F+ As $end
$var wire 1 G+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 E+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 =+ in1 $end
$var wire 1 E+ in2 $end
$var wire 1 F+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 >+ in1 $end
$var wire 1 P in2 $end
$var wire 1 G+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 F+ in1 $end
$var wire 1 G+ in2 $end
$var wire 1 ;) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 .! InC $end
$var wire 1 >! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out $end
$var wire 1 H+ AB $end
$var wire 1 I+ CD $end

$scope module muxAB $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 Q S $end
$var wire 1 H+ Out $end
$var wire 1 J+ S_n $end
$var wire 1 K+ As $end
$var wire 1 L+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 J+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 l in1 $end
$var wire 1 J+ in2 $end
$var wire 1 K+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 | in1 $end
$var wire 1 Q in2 $end
$var wire 1 L+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K+ in1 $end
$var wire 1 L+ in2 $end
$var wire 1 H+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 .! InA $end
$var wire 1 >! InB $end
$var wire 1 Q S $end
$var wire 1 I+ Out $end
$var wire 1 M+ S_n $end
$var wire 1 N+ As $end
$var wire 1 O+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 M+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 .! in1 $end
$var wire 1 M+ in2 $end
$var wire 1 N+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 >! in1 $end
$var wire 1 Q in2 $end
$var wire 1 O+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N+ in1 $end
$var wire 1 O+ in2 $end
$var wire 1 I+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 H+ InA $end
$var wire 1 I+ InB $end
$var wire 1 P S $end
$var wire 1 :) Out $end
$var wire 1 P+ S_n $end
$var wire 1 Q+ As $end
$var wire 1 R+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 P+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 H+ in1 $end
$var wire 1 P+ in2 $end
$var wire 1 Q+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 I+ in1 $end
$var wire 1 P in2 $end
$var wire 1 R+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Q+ in1 $end
$var wire 1 R+ in2 $end
$var wire 1 :) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 S+ N $end
$var wire 1 N! InA [15] $end
$var wire 1 O! InA [14] $end
$var wire 1 P! InA [13] $end
$var wire 1 Q! InA [12] $end
$var wire 1 R! InA [11] $end
$var wire 1 S! InA [10] $end
$var wire 1 T! InA [9] $end
$var wire 1 U! InA [8] $end
$var wire 1 V! InA [7] $end
$var wire 1 W! InA [6] $end
$var wire 1 X! InA [5] $end
$var wire 1 Y! InA [4] $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 ^! InB [15] $end
$var wire 1 _! InB [14] $end
$var wire 1 `! InB [13] $end
$var wire 1 a! InB [12] $end
$var wire 1 b! InB [11] $end
$var wire 1 c! InB [10] $end
$var wire 1 d! InB [9] $end
$var wire 1 e! InB [8] $end
$var wire 1 f! InB [7] $end
$var wire 1 g! InB [6] $end
$var wire 1 h! InB [5] $end
$var wire 1 i! InB [4] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 n! InC [15] $end
$var wire 1 o! InC [14] $end
$var wire 1 p! InC [13] $end
$var wire 1 q! InC [12] $end
$var wire 1 r! InC [11] $end
$var wire 1 s! InC [10] $end
$var wire 1 t! InC [9] $end
$var wire 1 u! InC [8] $end
$var wire 1 v! InC [7] $end
$var wire 1 w! InC [6] $end
$var wire 1 x! InC [5] $end
$var wire 1 y! InC [4] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ~! InD [15] $end
$var wire 1 !" InD [14] $end
$var wire 1 "" InD [13] $end
$var wire 1 #" InD [12] $end
$var wire 1 $" InD [11] $end
$var wire 1 %" InD [10] $end
$var wire 1 &" InD [9] $end
$var wire 1 '" InD [8] $end
$var wire 1 (" InD [7] $end
$var wire 1 )" InD [6] $end
$var wire 1 *" InD [5] $end
$var wire 1 +" InD [4] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out [15] $end
$var wire 1 K) Out [14] $end
$var wire 1 L) Out [13] $end
$var wire 1 M) Out [12] $end
$var wire 1 N) Out [11] $end
$var wire 1 O) Out [10] $end
$var wire 1 P) Out [9] $end
$var wire 1 Q) Out [8] $end
$var wire 1 R) Out [7] $end
$var wire 1 S) Out [6] $end
$var wire 1 T) Out [5] $end
$var wire 1 U) Out [4] $end
$var wire 1 V) Out [3] $end
$var wire 1 W) Out [2] $end
$var wire 1 X) Out [1] $end
$var wire 1 Y) Out [0] $end

$scope module mux0 $end
$var parameter 32 T+ N $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 V) Out [3] $end
$var wire 1 W) Out [2] $end
$var wire 1 X) Out [1] $end
$var wire 1 Y) Out [0] $end

$scope module mux0 $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 }! InC $end
$var wire 1 /" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 Y) Out $end
$var wire 1 U+ AB $end
$var wire 1 V+ CD $end

$scope module muxAB $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 Q S $end
$var wire 1 U+ Out $end
$var wire 1 W+ S_n $end
$var wire 1 X+ As $end
$var wire 1 Y+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 W+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 ]! in1 $end
$var wire 1 W+ in2 $end
$var wire 1 X+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 m! in1 $end
$var wire 1 Q in2 $end
$var wire 1 Y+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 X+ in1 $end
$var wire 1 Y+ in2 $end
$var wire 1 U+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 }! InA $end
$var wire 1 /" InB $end
$var wire 1 Q S $end
$var wire 1 V+ Out $end
$var wire 1 Z+ S_n $end
$var wire 1 [+ As $end
$var wire 1 \+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Z+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 }! in1 $end
$var wire 1 Z+ in2 $end
$var wire 1 [+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 /" in1 $end
$var wire 1 Q in2 $end
$var wire 1 \+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [+ in1 $end
$var wire 1 \+ in2 $end
$var wire 1 V+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 U+ InA $end
$var wire 1 V+ InB $end
$var wire 1 P S $end
$var wire 1 Y) Out $end
$var wire 1 ]+ S_n $end
$var wire 1 ^+ As $end
$var wire 1 _+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ]+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 U+ in1 $end
$var wire 1 ]+ in2 $end
$var wire 1 ^+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 V+ in1 $end
$var wire 1 P in2 $end
$var wire 1 _+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^+ in1 $end
$var wire 1 _+ in2 $end
$var wire 1 Y) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 |! InC $end
$var wire 1 ." InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 X) Out $end
$var wire 1 `+ AB $end
$var wire 1 a+ CD $end

$scope module muxAB $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 Q S $end
$var wire 1 `+ Out $end
$var wire 1 b+ S_n $end
$var wire 1 c+ As $end
$var wire 1 d+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 b+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 \! in1 $end
$var wire 1 b+ in2 $end
$var wire 1 c+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 l! in1 $end
$var wire 1 Q in2 $end
$var wire 1 d+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 c+ in1 $end
$var wire 1 d+ in2 $end
$var wire 1 `+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 |! InA $end
$var wire 1 ." InB $end
$var wire 1 Q S $end
$var wire 1 a+ Out $end
$var wire 1 e+ S_n $end
$var wire 1 f+ As $end
$var wire 1 g+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 e+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 |! in1 $end
$var wire 1 e+ in2 $end
$var wire 1 f+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ." in1 $end
$var wire 1 Q in2 $end
$var wire 1 g+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f+ in1 $end
$var wire 1 g+ in2 $end
$var wire 1 a+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 `+ InA $end
$var wire 1 a+ InB $end
$var wire 1 P S $end
$var wire 1 X) Out $end
$var wire 1 h+ S_n $end
$var wire 1 i+ As $end
$var wire 1 j+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 h+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 `+ in1 $end
$var wire 1 h+ in2 $end
$var wire 1 i+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 a+ in1 $end
$var wire 1 P in2 $end
$var wire 1 j+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i+ in1 $end
$var wire 1 j+ in2 $end
$var wire 1 X) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 {! InC $end
$var wire 1 -" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 W) Out $end
$var wire 1 k+ AB $end
$var wire 1 l+ CD $end

$scope module muxAB $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 Q S $end
$var wire 1 k+ Out $end
$var wire 1 m+ S_n $end
$var wire 1 n+ As $end
$var wire 1 o+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 m+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 [! in1 $end
$var wire 1 m+ in2 $end
$var wire 1 n+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 k! in1 $end
$var wire 1 Q in2 $end
$var wire 1 o+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 n+ in1 $end
$var wire 1 o+ in2 $end
$var wire 1 k+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 {! InA $end
$var wire 1 -" InB $end
$var wire 1 Q S $end
$var wire 1 l+ Out $end
$var wire 1 p+ S_n $end
$var wire 1 q+ As $end
$var wire 1 r+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 p+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 {! in1 $end
$var wire 1 p+ in2 $end
$var wire 1 q+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 -" in1 $end
$var wire 1 Q in2 $end
$var wire 1 r+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q+ in1 $end
$var wire 1 r+ in2 $end
$var wire 1 l+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 k+ InA $end
$var wire 1 l+ InB $end
$var wire 1 P S $end
$var wire 1 W) Out $end
$var wire 1 s+ S_n $end
$var wire 1 t+ As $end
$var wire 1 u+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 s+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 k+ in1 $end
$var wire 1 s+ in2 $end
$var wire 1 t+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 l+ in1 $end
$var wire 1 P in2 $end
$var wire 1 u+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t+ in1 $end
$var wire 1 u+ in2 $end
$var wire 1 W) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 z! InC $end
$var wire 1 ," InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 V) Out $end
$var wire 1 v+ AB $end
$var wire 1 w+ CD $end

$scope module muxAB $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 Q S $end
$var wire 1 v+ Out $end
$var wire 1 x+ S_n $end
$var wire 1 y+ As $end
$var wire 1 z+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 x+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 Z! in1 $end
$var wire 1 x+ in2 $end
$var wire 1 y+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 j! in1 $end
$var wire 1 Q in2 $end
$var wire 1 z+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y+ in1 $end
$var wire 1 z+ in2 $end
$var wire 1 v+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 z! InA $end
$var wire 1 ," InB $end
$var wire 1 Q S $end
$var wire 1 w+ Out $end
$var wire 1 {+ S_n $end
$var wire 1 |+ As $end
$var wire 1 }+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 {+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 z! in1 $end
$var wire 1 {+ in2 $end
$var wire 1 |+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ," in1 $end
$var wire 1 Q in2 $end
$var wire 1 }+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |+ in1 $end
$var wire 1 }+ in2 $end
$var wire 1 w+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v+ InA $end
$var wire 1 w+ InB $end
$var wire 1 P S $end
$var wire 1 V) Out $end
$var wire 1 ~+ S_n $end
$var wire 1 !, As $end
$var wire 1 ", Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ~+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 v+ in1 $end
$var wire 1 ~+ in2 $end
$var wire 1 !, out $end
$upscope $end

$scope module nandB $end
$var wire 1 w+ in1 $end
$var wire 1 P in2 $end
$var wire 1 ", out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !, in1 $end
$var wire 1 ", in2 $end
$var wire 1 V) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var parameter 32 #, N $end
$var wire 1 V! InA [3] $end
$var wire 1 W! InA [2] $end
$var wire 1 X! InA [1] $end
$var wire 1 Y! InA [0] $end
$var wire 1 f! InB [3] $end
$var wire 1 g! InB [2] $end
$var wire 1 h! InB [1] $end
$var wire 1 i! InB [0] $end
$var wire 1 v! InC [3] $end
$var wire 1 w! InC [2] $end
$var wire 1 x! InC [1] $end
$var wire 1 y! InC [0] $end
$var wire 1 (" InD [3] $end
$var wire 1 )" InD [2] $end
$var wire 1 *" InD [1] $end
$var wire 1 +" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 R) Out [3] $end
$var wire 1 S) Out [2] $end
$var wire 1 T) Out [1] $end
$var wire 1 U) Out [0] $end

$scope module mux0 $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 y! InC $end
$var wire 1 +" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 U) Out $end
$var wire 1 $, AB $end
$var wire 1 %, CD $end

$scope module muxAB $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 Q S $end
$var wire 1 $, Out $end
$var wire 1 &, S_n $end
$var wire 1 ', As $end
$var wire 1 (, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 &, out $end
$upscope $end

$scope module nandA $end
$var wire 1 Y! in1 $end
$var wire 1 &, in2 $end
$var wire 1 ', out $end
$upscope $end

$scope module nandB $end
$var wire 1 i! in1 $end
$var wire 1 Q in2 $end
$var wire 1 (, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ', in1 $end
$var wire 1 (, in2 $end
$var wire 1 $, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 y! InA $end
$var wire 1 +" InB $end
$var wire 1 Q S $end
$var wire 1 %, Out $end
$var wire 1 ), S_n $end
$var wire 1 *, As $end
$var wire 1 +, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ), out $end
$upscope $end

$scope module nandA $end
$var wire 1 y! in1 $end
$var wire 1 ), in2 $end
$var wire 1 *, out $end
$upscope $end

$scope module nandB $end
$var wire 1 +" in1 $end
$var wire 1 Q in2 $end
$var wire 1 +, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *, in1 $end
$var wire 1 +, in2 $end
$var wire 1 %, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 $, InA $end
$var wire 1 %, InB $end
$var wire 1 P S $end
$var wire 1 U) Out $end
$var wire 1 ,, S_n $end
$var wire 1 -, As $end
$var wire 1 ., Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ,, out $end
$upscope $end

$scope module nandA $end
$var wire 1 $, in1 $end
$var wire 1 ,, in2 $end
$var wire 1 -, out $end
$upscope $end

$scope module nandB $end
$var wire 1 %, in1 $end
$var wire 1 P in2 $end
$var wire 1 ., out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -, in1 $end
$var wire 1 ., in2 $end
$var wire 1 U) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 x! InC $end
$var wire 1 *" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 T) Out $end
$var wire 1 /, AB $end
$var wire 1 0, CD $end

$scope module muxAB $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 Q S $end
$var wire 1 /, Out $end
$var wire 1 1, S_n $end
$var wire 1 2, As $end
$var wire 1 3, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 1, out $end
$upscope $end

$scope module nandA $end
$var wire 1 X! in1 $end
$var wire 1 1, in2 $end
$var wire 1 2, out $end
$upscope $end

$scope module nandB $end
$var wire 1 h! in1 $end
$var wire 1 Q in2 $end
$var wire 1 3, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 2, in1 $end
$var wire 1 3, in2 $end
$var wire 1 /, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 x! InA $end
$var wire 1 *" InB $end
$var wire 1 Q S $end
$var wire 1 0, Out $end
$var wire 1 4, S_n $end
$var wire 1 5, As $end
$var wire 1 6, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 4, out $end
$upscope $end

$scope module nandA $end
$var wire 1 x! in1 $end
$var wire 1 4, in2 $end
$var wire 1 5, out $end
$upscope $end

$scope module nandB $end
$var wire 1 *" in1 $end
$var wire 1 Q in2 $end
$var wire 1 6, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5, in1 $end
$var wire 1 6, in2 $end
$var wire 1 0, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 /, InA $end
$var wire 1 0, InB $end
$var wire 1 P S $end
$var wire 1 T) Out $end
$var wire 1 7, S_n $end
$var wire 1 8, As $end
$var wire 1 9, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 7, out $end
$upscope $end

$scope module nandA $end
$var wire 1 /, in1 $end
$var wire 1 7, in2 $end
$var wire 1 8, out $end
$upscope $end

$scope module nandB $end
$var wire 1 0, in1 $end
$var wire 1 P in2 $end
$var wire 1 9, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8, in1 $end
$var wire 1 9, in2 $end
$var wire 1 T) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 w! InC $end
$var wire 1 )" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 S) Out $end
$var wire 1 :, AB $end
$var wire 1 ;, CD $end

$scope module muxAB $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 Q S $end
$var wire 1 :, Out $end
$var wire 1 <, S_n $end
$var wire 1 =, As $end
$var wire 1 >, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 <, out $end
$upscope $end

$scope module nandA $end
$var wire 1 W! in1 $end
$var wire 1 <, in2 $end
$var wire 1 =, out $end
$upscope $end

$scope module nandB $end
$var wire 1 g! in1 $end
$var wire 1 Q in2 $end
$var wire 1 >, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 =, in1 $end
$var wire 1 >, in2 $end
$var wire 1 :, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 w! InA $end
$var wire 1 )" InB $end
$var wire 1 Q S $end
$var wire 1 ;, Out $end
$var wire 1 ?, S_n $end
$var wire 1 @, As $end
$var wire 1 A, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ?, out $end
$upscope $end

$scope module nandA $end
$var wire 1 w! in1 $end
$var wire 1 ?, in2 $end
$var wire 1 @, out $end
$upscope $end

$scope module nandB $end
$var wire 1 )" in1 $end
$var wire 1 Q in2 $end
$var wire 1 A, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 @, in1 $end
$var wire 1 A, in2 $end
$var wire 1 ;, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 :, InA $end
$var wire 1 ;, InB $end
$var wire 1 P S $end
$var wire 1 S) Out $end
$var wire 1 B, S_n $end
$var wire 1 C, As $end
$var wire 1 D, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 B, out $end
$upscope $end

$scope module nandA $end
$var wire 1 :, in1 $end
$var wire 1 B, in2 $end
$var wire 1 C, out $end
$upscope $end

$scope module nandB $end
$var wire 1 ;, in1 $end
$var wire 1 P in2 $end
$var wire 1 D, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 C, in1 $end
$var wire 1 D, in2 $end
$var wire 1 S) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 v! InC $end
$var wire 1 (" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 R) Out $end
$var wire 1 E, AB $end
$var wire 1 F, CD $end

$scope module muxAB $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 Q S $end
$var wire 1 E, Out $end
$var wire 1 G, S_n $end
$var wire 1 H, As $end
$var wire 1 I, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 G, out $end
$upscope $end

$scope module nandA $end
$var wire 1 V! in1 $end
$var wire 1 G, in2 $end
$var wire 1 H, out $end
$upscope $end

$scope module nandB $end
$var wire 1 f! in1 $end
$var wire 1 Q in2 $end
$var wire 1 I, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H, in1 $end
$var wire 1 I, in2 $end
$var wire 1 E, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 v! InA $end
$var wire 1 (" InB $end
$var wire 1 Q S $end
$var wire 1 F, Out $end
$var wire 1 J, S_n $end
$var wire 1 K, As $end
$var wire 1 L, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 J, out $end
$upscope $end

$scope module nandA $end
$var wire 1 v! in1 $end
$var wire 1 J, in2 $end
$var wire 1 K, out $end
$upscope $end

$scope module nandB $end
$var wire 1 (" in1 $end
$var wire 1 Q in2 $end
$var wire 1 L, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K, in1 $end
$var wire 1 L, in2 $end
$var wire 1 F, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 E, InA $end
$var wire 1 F, InB $end
$var wire 1 P S $end
$var wire 1 R) Out $end
$var wire 1 M, S_n $end
$var wire 1 N, As $end
$var wire 1 O, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 M, out $end
$upscope $end

$scope module nandA $end
$var wire 1 E, in1 $end
$var wire 1 M, in2 $end
$var wire 1 N, out $end
$upscope $end

$scope module nandB $end
$var wire 1 F, in1 $end
$var wire 1 P in2 $end
$var wire 1 O, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N, in1 $end
$var wire 1 O, in2 $end
$var wire 1 R) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var parameter 32 P, N $end
$var wire 1 R! InA [3] $end
$var wire 1 S! InA [2] $end
$var wire 1 T! InA [1] $end
$var wire 1 U! InA [0] $end
$var wire 1 b! InB [3] $end
$var wire 1 c! InB [2] $end
$var wire 1 d! InB [1] $end
$var wire 1 e! InB [0] $end
$var wire 1 r! InC [3] $end
$var wire 1 s! InC [2] $end
$var wire 1 t! InC [1] $end
$var wire 1 u! InC [0] $end
$var wire 1 $" InD [3] $end
$var wire 1 %" InD [2] $end
$var wire 1 &" InD [1] $end
$var wire 1 '" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 N) Out [3] $end
$var wire 1 O) Out [2] $end
$var wire 1 P) Out [1] $end
$var wire 1 Q) Out [0] $end

$scope module mux0 $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 u! InC $end
$var wire 1 '" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 Q) Out $end
$var wire 1 Q, AB $end
$var wire 1 R, CD $end

$scope module muxAB $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 Q S $end
$var wire 1 Q, Out $end
$var wire 1 S, S_n $end
$var wire 1 T, As $end
$var wire 1 U, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 S, out $end
$upscope $end

$scope module nandA $end
$var wire 1 U! in1 $end
$var wire 1 S, in2 $end
$var wire 1 T, out $end
$upscope $end

$scope module nandB $end
$var wire 1 e! in1 $end
$var wire 1 Q in2 $end
$var wire 1 U, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 T, in1 $end
$var wire 1 U, in2 $end
$var wire 1 Q, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 u! InA $end
$var wire 1 '" InB $end
$var wire 1 Q S $end
$var wire 1 R, Out $end
$var wire 1 V, S_n $end
$var wire 1 W, As $end
$var wire 1 X, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 V, out $end
$upscope $end

$scope module nandA $end
$var wire 1 u! in1 $end
$var wire 1 V, in2 $end
$var wire 1 W, out $end
$upscope $end

$scope module nandB $end
$var wire 1 '" in1 $end
$var wire 1 Q in2 $end
$var wire 1 X, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W, in1 $end
$var wire 1 X, in2 $end
$var wire 1 R, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 Q, InA $end
$var wire 1 R, InB $end
$var wire 1 P S $end
$var wire 1 Q) Out $end
$var wire 1 Y, S_n $end
$var wire 1 Z, As $end
$var wire 1 [, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 Y, out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q, in1 $end
$var wire 1 Y, in2 $end
$var wire 1 Z, out $end
$upscope $end

$scope module nandB $end
$var wire 1 R, in1 $end
$var wire 1 P in2 $end
$var wire 1 [, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z, in1 $end
$var wire 1 [, in2 $end
$var wire 1 Q) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 t! InC $end
$var wire 1 &" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 P) Out $end
$var wire 1 \, AB $end
$var wire 1 ], CD $end

$scope module muxAB $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 Q S $end
$var wire 1 \, Out $end
$var wire 1 ^, S_n $end
$var wire 1 _, As $end
$var wire 1 `, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ^, out $end
$upscope $end

$scope module nandA $end
$var wire 1 T! in1 $end
$var wire 1 ^, in2 $end
$var wire 1 _, out $end
$upscope $end

$scope module nandB $end
$var wire 1 d! in1 $end
$var wire 1 Q in2 $end
$var wire 1 `, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 _, in1 $end
$var wire 1 `, in2 $end
$var wire 1 \, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 t! InA $end
$var wire 1 &" InB $end
$var wire 1 Q S $end
$var wire 1 ], Out $end
$var wire 1 a, S_n $end
$var wire 1 b, As $end
$var wire 1 c, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 a, out $end
$upscope $end

$scope module nandA $end
$var wire 1 t! in1 $end
$var wire 1 a, in2 $end
$var wire 1 b, out $end
$upscope $end

$scope module nandB $end
$var wire 1 &" in1 $end
$var wire 1 Q in2 $end
$var wire 1 c, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b, in1 $end
$var wire 1 c, in2 $end
$var wire 1 ], out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 \, InA $end
$var wire 1 ], InB $end
$var wire 1 P S $end
$var wire 1 P) Out $end
$var wire 1 d, S_n $end
$var wire 1 e, As $end
$var wire 1 f, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 d, out $end
$upscope $end

$scope module nandA $end
$var wire 1 \, in1 $end
$var wire 1 d, in2 $end
$var wire 1 e, out $end
$upscope $end

$scope module nandB $end
$var wire 1 ], in1 $end
$var wire 1 P in2 $end
$var wire 1 f, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e, in1 $end
$var wire 1 f, in2 $end
$var wire 1 P) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 s! InC $end
$var wire 1 %" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 O) Out $end
$var wire 1 g, AB $end
$var wire 1 h, CD $end

$scope module muxAB $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 Q S $end
$var wire 1 g, Out $end
$var wire 1 i, S_n $end
$var wire 1 j, As $end
$var wire 1 k, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 i, out $end
$upscope $end

$scope module nandA $end
$var wire 1 S! in1 $end
$var wire 1 i, in2 $end
$var wire 1 j, out $end
$upscope $end

$scope module nandB $end
$var wire 1 c! in1 $end
$var wire 1 Q in2 $end
$var wire 1 k, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 j, in1 $end
$var wire 1 k, in2 $end
$var wire 1 g, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 s! InA $end
$var wire 1 %" InB $end
$var wire 1 Q S $end
$var wire 1 h, Out $end
$var wire 1 l, S_n $end
$var wire 1 m, As $end
$var wire 1 n, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 l, out $end
$upscope $end

$scope module nandA $end
$var wire 1 s! in1 $end
$var wire 1 l, in2 $end
$var wire 1 m, out $end
$upscope $end

$scope module nandB $end
$var wire 1 %" in1 $end
$var wire 1 Q in2 $end
$var wire 1 n, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m, in1 $end
$var wire 1 n, in2 $end
$var wire 1 h, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 g, InA $end
$var wire 1 h, InB $end
$var wire 1 P S $end
$var wire 1 O) Out $end
$var wire 1 o, S_n $end
$var wire 1 p, As $end
$var wire 1 q, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 o, out $end
$upscope $end

$scope module nandA $end
$var wire 1 g, in1 $end
$var wire 1 o, in2 $end
$var wire 1 p, out $end
$upscope $end

$scope module nandB $end
$var wire 1 h, in1 $end
$var wire 1 P in2 $end
$var wire 1 q, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p, in1 $end
$var wire 1 q, in2 $end
$var wire 1 O) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 r! InC $end
$var wire 1 $" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 N) Out $end
$var wire 1 r, AB $end
$var wire 1 s, CD $end

$scope module muxAB $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 Q S $end
$var wire 1 r, Out $end
$var wire 1 t, S_n $end
$var wire 1 u, As $end
$var wire 1 v, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 t, out $end
$upscope $end

$scope module nandA $end
$var wire 1 R! in1 $end
$var wire 1 t, in2 $end
$var wire 1 u, out $end
$upscope $end

$scope module nandB $end
$var wire 1 b! in1 $end
$var wire 1 Q in2 $end
$var wire 1 v, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u, in1 $end
$var wire 1 v, in2 $end
$var wire 1 r, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 r! InA $end
$var wire 1 $" InB $end
$var wire 1 Q S $end
$var wire 1 s, Out $end
$var wire 1 w, S_n $end
$var wire 1 x, As $end
$var wire 1 y, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 w, out $end
$upscope $end

$scope module nandA $end
$var wire 1 r! in1 $end
$var wire 1 w, in2 $end
$var wire 1 x, out $end
$upscope $end

$scope module nandB $end
$var wire 1 $" in1 $end
$var wire 1 Q in2 $end
$var wire 1 y, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x, in1 $end
$var wire 1 y, in2 $end
$var wire 1 s, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r, InA $end
$var wire 1 s, InB $end
$var wire 1 P S $end
$var wire 1 N) Out $end
$var wire 1 z, S_n $end
$var wire 1 {, As $end
$var wire 1 |, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 z, out $end
$upscope $end

$scope module nandA $end
$var wire 1 r, in1 $end
$var wire 1 z, in2 $end
$var wire 1 {, out $end
$upscope $end

$scope module nandB $end
$var wire 1 s, in1 $end
$var wire 1 P in2 $end
$var wire 1 |, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {, in1 $end
$var wire 1 |, in2 $end
$var wire 1 N) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var parameter 32 }, N $end
$var wire 1 N! InA [3] $end
$var wire 1 O! InA [2] $end
$var wire 1 P! InA [1] $end
$var wire 1 Q! InA [0] $end
$var wire 1 ^! InB [3] $end
$var wire 1 _! InB [2] $end
$var wire 1 `! InB [1] $end
$var wire 1 a! InB [0] $end
$var wire 1 n! InC [3] $end
$var wire 1 o! InC [2] $end
$var wire 1 p! InC [1] $end
$var wire 1 q! InC [0] $end
$var wire 1 ~! InD [3] $end
$var wire 1 !" InD [2] $end
$var wire 1 "" InD [1] $end
$var wire 1 #" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out [3] $end
$var wire 1 K) Out [2] $end
$var wire 1 L) Out [1] $end
$var wire 1 M) Out [0] $end

$scope module mux0 $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 q! InC $end
$var wire 1 #" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 M) Out $end
$var wire 1 ~, AB $end
$var wire 1 !- CD $end

$scope module muxAB $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 Q S $end
$var wire 1 ~, Out $end
$var wire 1 "- S_n $end
$var wire 1 #- As $end
$var wire 1 $- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 "- out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q! in1 $end
$var wire 1 "- in2 $end
$var wire 1 #- out $end
$upscope $end

$scope module nandB $end
$var wire 1 a! in1 $end
$var wire 1 Q in2 $end
$var wire 1 $- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 #- in1 $end
$var wire 1 $- in2 $end
$var wire 1 ~, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 q! InA $end
$var wire 1 #" InB $end
$var wire 1 Q S $end
$var wire 1 !- Out $end
$var wire 1 %- S_n $end
$var wire 1 &- As $end
$var wire 1 '- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 %- out $end
$upscope $end

$scope module nandA $end
$var wire 1 q! in1 $end
$var wire 1 %- in2 $end
$var wire 1 &- out $end
$upscope $end

$scope module nandB $end
$var wire 1 #" in1 $end
$var wire 1 Q in2 $end
$var wire 1 '- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 &- in1 $end
$var wire 1 '- in2 $end
$var wire 1 !- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 ~, InA $end
$var wire 1 !- InB $end
$var wire 1 P S $end
$var wire 1 M) Out $end
$var wire 1 (- S_n $end
$var wire 1 )- As $end
$var wire 1 *- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 (- out $end
$upscope $end

$scope module nandA $end
$var wire 1 ~, in1 $end
$var wire 1 (- in2 $end
$var wire 1 )- out $end
$upscope $end

$scope module nandB $end
$var wire 1 !- in1 $end
$var wire 1 P in2 $end
$var wire 1 *- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )- in1 $end
$var wire 1 *- in2 $end
$var wire 1 M) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 p! InC $end
$var wire 1 "" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 L) Out $end
$var wire 1 +- AB $end
$var wire 1 ,- CD $end

$scope module muxAB $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 Q S $end
$var wire 1 +- Out $end
$var wire 1 -- S_n $end
$var wire 1 .- As $end
$var wire 1 /- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 -- out $end
$upscope $end

$scope module nandA $end
$var wire 1 P! in1 $end
$var wire 1 -- in2 $end
$var wire 1 .- out $end
$upscope $end

$scope module nandB $end
$var wire 1 `! in1 $end
$var wire 1 Q in2 $end
$var wire 1 /- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 .- in1 $end
$var wire 1 /- in2 $end
$var wire 1 +- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 p! InA $end
$var wire 1 "" InB $end
$var wire 1 Q S $end
$var wire 1 ,- Out $end
$var wire 1 0- S_n $end
$var wire 1 1- As $end
$var wire 1 2- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 0- out $end
$upscope $end

$scope module nandA $end
$var wire 1 p! in1 $end
$var wire 1 0- in2 $end
$var wire 1 1- out $end
$upscope $end

$scope module nandB $end
$var wire 1 "" in1 $end
$var wire 1 Q in2 $end
$var wire 1 2- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1- in1 $end
$var wire 1 2- in2 $end
$var wire 1 ,- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 +- InA $end
$var wire 1 ,- InB $end
$var wire 1 P S $end
$var wire 1 L) Out $end
$var wire 1 3- S_n $end
$var wire 1 4- As $end
$var wire 1 5- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 3- out $end
$upscope $end

$scope module nandA $end
$var wire 1 +- in1 $end
$var wire 1 3- in2 $end
$var wire 1 4- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,- in1 $end
$var wire 1 P in2 $end
$var wire 1 5- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4- in1 $end
$var wire 1 5- in2 $end
$var wire 1 L) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 o! InC $end
$var wire 1 !" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 K) Out $end
$var wire 1 6- AB $end
$var wire 1 7- CD $end

$scope module muxAB $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 Q S $end
$var wire 1 6- Out $end
$var wire 1 8- S_n $end
$var wire 1 9- As $end
$var wire 1 :- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 8- out $end
$upscope $end

$scope module nandA $end
$var wire 1 O! in1 $end
$var wire 1 8- in2 $end
$var wire 1 9- out $end
$upscope $end

$scope module nandB $end
$var wire 1 _! in1 $end
$var wire 1 Q in2 $end
$var wire 1 :- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 9- in1 $end
$var wire 1 :- in2 $end
$var wire 1 6- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 o! InA $end
$var wire 1 !" InB $end
$var wire 1 Q S $end
$var wire 1 7- Out $end
$var wire 1 ;- S_n $end
$var wire 1 <- As $end
$var wire 1 =- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ;- out $end
$upscope $end

$scope module nandA $end
$var wire 1 o! in1 $end
$var wire 1 ;- in2 $end
$var wire 1 <- out $end
$upscope $end

$scope module nandB $end
$var wire 1 !" in1 $end
$var wire 1 Q in2 $end
$var wire 1 =- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <- in1 $end
$var wire 1 =- in2 $end
$var wire 1 7- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 6- InA $end
$var wire 1 7- InB $end
$var wire 1 P S $end
$var wire 1 K) Out $end
$var wire 1 >- S_n $end
$var wire 1 ?- As $end
$var wire 1 @- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 >- out $end
$upscope $end

$scope module nandA $end
$var wire 1 6- in1 $end
$var wire 1 >- in2 $end
$var wire 1 ?- out $end
$upscope $end

$scope module nandB $end
$var wire 1 7- in1 $end
$var wire 1 P in2 $end
$var wire 1 @- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?- in1 $end
$var wire 1 @- in2 $end
$var wire 1 K) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 n! InC $end
$var wire 1 ~! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out $end
$var wire 1 A- AB $end
$var wire 1 B- CD $end

$scope module muxAB $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 Q S $end
$var wire 1 A- Out $end
$var wire 1 C- S_n $end
$var wire 1 D- As $end
$var wire 1 E- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 C- out $end
$upscope $end

$scope module nandA $end
$var wire 1 N! in1 $end
$var wire 1 C- in2 $end
$var wire 1 D- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ^! in1 $end
$var wire 1 Q in2 $end
$var wire 1 E- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D- in1 $end
$var wire 1 E- in2 $end
$var wire 1 A- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 n! InA $end
$var wire 1 ~! InB $end
$var wire 1 Q S $end
$var wire 1 B- Out $end
$var wire 1 F- S_n $end
$var wire 1 G- As $end
$var wire 1 H- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 F- out $end
$upscope $end

$scope module nandA $end
$var wire 1 n! in1 $end
$var wire 1 F- in2 $end
$var wire 1 G- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~! in1 $end
$var wire 1 Q in2 $end
$var wire 1 H- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G- in1 $end
$var wire 1 H- in2 $end
$var wire 1 B- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 A- InA $end
$var wire 1 B- InB $end
$var wire 1 P S $end
$var wire 1 J) Out $end
$var wire 1 I- S_n $end
$var wire 1 J- As $end
$var wire 1 K- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 I- out $end
$upscope $end

$scope module nandA $end
$var wire 1 A- in1 $end
$var wire 1 I- in2 $end
$var wire 1 J- out $end
$upscope $end

$scope module nandB $end
$var wire 1 B- in1 $end
$var wire 1 P in2 $end
$var wire 1 K- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 J- in1 $end
$var wire 1 K- in2 $end
$var wire 1 J) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module decoder $end
$var parameter 32 L- N $end
$var wire 1 R In [2] $end
$var wire 1 S In [1] $end
$var wire 1 T In [0] $end
$var reg 8 M- Out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var wire 1 G clk $end
$var wire 1 H rst $end

$scope module DUT $end
$var wire 1 L readReg1Sel [2] $end
$var wire 1 M readReg1Sel [1] $end
$var wire 1 N readReg1Sel [0] $end
$var wire 1 O readReg2Sel [2] $end
$var wire 1 P readReg2Sel [1] $end
$var wire 1 Q readReg2Sel [0] $end
$var wire 1 R writeRegSel [2] $end
$var wire 1 S writeRegSel [1] $end
$var wire 1 T writeRegSel [0] $end
$var wire 1 U writeData [15] $end
$var wire 1 V writeData [14] $end
$var wire 1 W writeData [13] $end
$var wire 1 X writeData [12] $end
$var wire 1 Y writeData [11] $end
$var wire 1 Z writeData [10] $end
$var wire 1 [ writeData [9] $end
$var wire 1 \ writeData [8] $end
$var wire 1 ] writeData [7] $end
$var wire 1 ^ writeData [6] $end
$var wire 1 _ writeData [5] $end
$var wire 1 ` writeData [4] $end
$var wire 1 a writeData [3] $end
$var wire 1 b writeData [2] $end
$var wire 1 c writeData [1] $end
$var wire 1 d writeData [0] $end
$var wire 1 e writeEn $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 h err $end

$scope module clk_generator $end
$var wire 1 h err $end
$upscope $end

$scope module rf0 $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$var wire 1 L readReg1Sel [2] $end
$var wire 1 M readReg1Sel [1] $end
$var wire 1 N readReg1Sel [0] $end
$var wire 1 O readReg2Sel [2] $end
$var wire 1 P readReg2Sel [1] $end
$var wire 1 Q readReg2Sel [0] $end
$var wire 1 R writeRegSel [2] $end
$var wire 1 S writeRegSel [1] $end
$var wire 1 T writeRegSel [0] $end
$var wire 1 U writeData [15] $end
$var wire 1 V writeData [14] $end
$var wire 1 W writeData [13] $end
$var wire 1 X writeData [12] $end
$var wire 1 Y writeData [11] $end
$var wire 1 Z writeData [10] $end
$var wire 1 [ writeData [9] $end
$var wire 1 \ writeData [8] $end
$var wire 1 ] writeData [7] $end
$var wire 1 ^ writeData [6] $end
$var wire 1 _ writeData [5] $end
$var wire 1 ` writeData [4] $end
$var wire 1 a writeData [3] $end
$var wire 1 b writeData [2] $end
$var wire 1 c writeData [1] $end
$var wire 1 d writeData [0] $end
$var wire 1 e writeEn $end
$var wire 1 ! readData1 [15] $end
$var wire 1 " readData1 [14] $end
$var wire 1 # readData1 [13] $end
$var wire 1 $ readData1 [12] $end
$var wire 1 % readData1 [11] $end
$var wire 1 & readData1 [10] $end
$var wire 1 ' readData1 [9] $end
$var wire 1 ( readData1 [8] $end
$var wire 1 ) readData1 [7] $end
$var wire 1 * readData1 [6] $end
$var wire 1 + readData1 [5] $end
$var wire 1 , readData1 [4] $end
$var wire 1 - readData1 [3] $end
$var wire 1 . readData1 [2] $end
$var wire 1 / readData1 [1] $end
$var wire 1 0 readData1 [0] $end
$var wire 1 1 readData2 [15] $end
$var wire 1 2 readData2 [14] $end
$var wire 1 3 readData2 [13] $end
$var wire 1 4 readData2 [12] $end
$var wire 1 5 readData2 [11] $end
$var wire 1 6 readData2 [10] $end
$var wire 1 7 readData2 [9] $end
$var wire 1 8 readData2 [8] $end
$var wire 1 9 readData2 [7] $end
$var wire 1 : readData2 [6] $end
$var wire 1 ; readData2 [5] $end
$var wire 1 < readData2 [4] $end
$var wire 1 = readData2 [3] $end
$var wire 1 > readData2 [2] $end
$var wire 1 ? readData2 [1] $end
$var wire 1 @ readData2 [0] $end
$var wire 1 h err $end
$var wire 1 l reg0out [15] $end
$var wire 1 m reg0out [14] $end
$var wire 1 n reg0out [13] $end
$var wire 1 o reg0out [12] $end
$var wire 1 p reg0out [11] $end
$var wire 1 q reg0out [10] $end
$var wire 1 r reg0out [9] $end
$var wire 1 s reg0out [8] $end
$var wire 1 t reg0out [7] $end
$var wire 1 u reg0out [6] $end
$var wire 1 v reg0out [5] $end
$var wire 1 w reg0out [4] $end
$var wire 1 x reg0out [3] $end
$var wire 1 y reg0out [2] $end
$var wire 1 z reg0out [1] $end
$var wire 1 { reg0out [0] $end
$var wire 1 | reg1out [15] $end
$var wire 1 } reg1out [14] $end
$var wire 1 ~ reg1out [13] $end
$var wire 1 !! reg1out [12] $end
$var wire 1 "! reg1out [11] $end
$var wire 1 #! reg1out [10] $end
$var wire 1 $! reg1out [9] $end
$var wire 1 %! reg1out [8] $end
$var wire 1 &! reg1out [7] $end
$var wire 1 '! reg1out [6] $end
$var wire 1 (! reg1out [5] $end
$var wire 1 )! reg1out [4] $end
$var wire 1 *! reg1out [3] $end
$var wire 1 +! reg1out [2] $end
$var wire 1 ,! reg1out [1] $end
$var wire 1 -! reg1out [0] $end
$var wire 1 .! reg2out [15] $end
$var wire 1 /! reg2out [14] $end
$var wire 1 0! reg2out [13] $end
$var wire 1 1! reg2out [12] $end
$var wire 1 2! reg2out [11] $end
$var wire 1 3! reg2out [10] $end
$var wire 1 4! reg2out [9] $end
$var wire 1 5! reg2out [8] $end
$var wire 1 6! reg2out [7] $end
$var wire 1 7! reg2out [6] $end
$var wire 1 8! reg2out [5] $end
$var wire 1 9! reg2out [4] $end
$var wire 1 :! reg2out [3] $end
$var wire 1 ;! reg2out [2] $end
$var wire 1 <! reg2out [1] $end
$var wire 1 =! reg2out [0] $end
$var wire 1 >! reg3out [15] $end
$var wire 1 ?! reg3out [14] $end
$var wire 1 @! reg3out [13] $end
$var wire 1 A! reg3out [12] $end
$var wire 1 B! reg3out [11] $end
$var wire 1 C! reg3out [10] $end
$var wire 1 D! reg3out [9] $end
$var wire 1 E! reg3out [8] $end
$var wire 1 F! reg3out [7] $end
$var wire 1 G! reg3out [6] $end
$var wire 1 H! reg3out [5] $end
$var wire 1 I! reg3out [4] $end
$var wire 1 J! reg3out [3] $end
$var wire 1 K! reg3out [2] $end
$var wire 1 L! reg3out [1] $end
$var wire 1 M! reg3out [0] $end
$var wire 1 N! reg4out [15] $end
$var wire 1 O! reg4out [14] $end
$var wire 1 P! reg4out [13] $end
$var wire 1 Q! reg4out [12] $end
$var wire 1 R! reg4out [11] $end
$var wire 1 S! reg4out [10] $end
$var wire 1 T! reg4out [9] $end
$var wire 1 U! reg4out [8] $end
$var wire 1 V! reg4out [7] $end
$var wire 1 W! reg4out [6] $end
$var wire 1 X! reg4out [5] $end
$var wire 1 Y! reg4out [4] $end
$var wire 1 Z! reg4out [3] $end
$var wire 1 [! reg4out [2] $end
$var wire 1 \! reg4out [1] $end
$var wire 1 ]! reg4out [0] $end
$var wire 1 ^! reg5out [15] $end
$var wire 1 _! reg5out [14] $end
$var wire 1 `! reg5out [13] $end
$var wire 1 a! reg5out [12] $end
$var wire 1 b! reg5out [11] $end
$var wire 1 c! reg5out [10] $end
$var wire 1 d! reg5out [9] $end
$var wire 1 e! reg5out [8] $end
$var wire 1 f! reg5out [7] $end
$var wire 1 g! reg5out [6] $end
$var wire 1 h! reg5out [5] $end
$var wire 1 i! reg5out [4] $end
$var wire 1 j! reg5out [3] $end
$var wire 1 k! reg5out [2] $end
$var wire 1 l! reg5out [1] $end
$var wire 1 m! reg5out [0] $end
$var wire 1 n! reg6out [15] $end
$var wire 1 o! reg6out [14] $end
$var wire 1 p! reg6out [13] $end
$var wire 1 q! reg6out [12] $end
$var wire 1 r! reg6out [11] $end
$var wire 1 s! reg6out [10] $end
$var wire 1 t! reg6out [9] $end
$var wire 1 u! reg6out [8] $end
$var wire 1 v! reg6out [7] $end
$var wire 1 w! reg6out [6] $end
$var wire 1 x! reg6out [5] $end
$var wire 1 y! reg6out [4] $end
$var wire 1 z! reg6out [3] $end
$var wire 1 {! reg6out [2] $end
$var wire 1 |! reg6out [1] $end
$var wire 1 }! reg6out [0] $end
$var wire 1 ~! reg7out [15] $end
$var wire 1 !" reg7out [14] $end
$var wire 1 "" reg7out [13] $end
$var wire 1 #" reg7out [12] $end
$var wire 1 $" reg7out [11] $end
$var wire 1 %" reg7out [10] $end
$var wire 1 &" reg7out [9] $end
$var wire 1 '" reg7out [8] $end
$var wire 1 (" reg7out [7] $end
$var wire 1 )" reg7out [6] $end
$var wire 1 *" reg7out [5] $end
$var wire 1 +" reg7out [4] $end
$var wire 1 ," reg7out [3] $end
$var wire 1 -" reg7out [2] $end
$var wire 1 ." reg7out [1] $end
$var wire 1 /" reg7out [0] $end
$var wire 1 0" writeSel [7] $end
$var wire 1 1" writeSel [6] $end
$var wire 1 2" writeSel [5] $end
$var wire 1 3" writeSel [4] $end
$var wire 1 4" writeSel [3] $end
$var wire 1 5" writeSel [2] $end
$var wire 1 6" writeSel [1] $end
$var wire 1 7" writeSel [0] $end
$var wire 1 8" tempSel [7] $end
$var wire 1 9" tempSel [6] $end
$var wire 1 :" tempSel [5] $end
$var wire 1 ;" tempSel [4] $end
$var wire 1 <" tempSel [3] $end
$var wire 1 =" tempSel [2] $end
$var wire 1 >" tempSel [1] $end
$var wire 1 ?" tempSel [0] $end

$scope module reg0 $end
$var wire 1 l q [15] $end
$var wire 1 m q [14] $end
$var wire 1 n q [13] $end
$var wire 1 o q [12] $end
$var wire 1 p q [11] $end
$var wire 1 q q [10] $end
$var wire 1 r q [9] $end
$var wire 1 s q [8] $end
$var wire 1 t q [7] $end
$var wire 1 u q [6] $end
$var wire 1 v q [5] $end
$var wire 1 w q [4] $end
$var wire 1 x q [3] $end
$var wire 1 y q [2] $end
$var wire 1 z q [1] $end
$var wire 1 { q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 7" writeNew $end
$var wire 1 g rst $end
$var wire 1 @" newVal [15] $end
$var wire 1 A" newVal [14] $end
$var wire 1 B" newVal [13] $end
$var wire 1 C" newVal [12] $end
$var wire 1 D" newVal [11] $end
$var wire 1 E" newVal [10] $end
$var wire 1 F" newVal [9] $end
$var wire 1 G" newVal [8] $end
$var wire 1 H" newVal [7] $end
$var wire 1 I" newVal [6] $end
$var wire 1 J" newVal [5] $end
$var wire 1 K" newVal [4] $end
$var wire 1 L" newVal [3] $end
$var wire 1 M" newVal [2] $end
$var wire 1 N" newVal [1] $end
$var wire 1 O" newVal [0] $end

$scope module dff1 $end
$var wire 1 { q $end
$var wire 1 O" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 z q $end
$var wire 1 N" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 y q $end
$var wire 1 M" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 x q $end
$var wire 1 L" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 w q $end
$var wire 1 K" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 v q $end
$var wire 1 J" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 u q $end
$var wire 1 I" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 t q $end
$var wire 1 H" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 s q $end
$var wire 1 G" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 r q $end
$var wire 1 F" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 q q $end
$var wire 1 E" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 p q $end
$var wire 1 D" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 o q $end
$var wire 1 C" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 n q $end
$var wire 1 B" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 m q $end
$var wire 1 A" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 l q $end
$var wire 1 @" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg1 $end
$var wire 1 | q [15] $end
$var wire 1 } q [14] $end
$var wire 1 ~ q [13] $end
$var wire 1 !! q [12] $end
$var wire 1 "! q [11] $end
$var wire 1 #! q [10] $end
$var wire 1 $! q [9] $end
$var wire 1 %! q [8] $end
$var wire 1 &! q [7] $end
$var wire 1 '! q [6] $end
$var wire 1 (! q [5] $end
$var wire 1 )! q [4] $end
$var wire 1 *! q [3] $end
$var wire 1 +! q [2] $end
$var wire 1 ,! q [1] $end
$var wire 1 -! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 6" writeNew $end
$var wire 1 g rst $end
$var wire 1 `" newVal [15] $end
$var wire 1 a" newVal [14] $end
$var wire 1 b" newVal [13] $end
$var wire 1 c" newVal [12] $end
$var wire 1 d" newVal [11] $end
$var wire 1 e" newVal [10] $end
$var wire 1 f" newVal [9] $end
$var wire 1 g" newVal [8] $end
$var wire 1 h" newVal [7] $end
$var wire 1 i" newVal [6] $end
$var wire 1 j" newVal [5] $end
$var wire 1 k" newVal [4] $end
$var wire 1 l" newVal [3] $end
$var wire 1 m" newVal [2] $end
$var wire 1 n" newVal [1] $end
$var wire 1 o" newVal [0] $end

$scope module dff1 $end
$var wire 1 -! q $end
$var wire 1 o" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 ,! q $end
$var wire 1 n" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 +! q $end
$var wire 1 m" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 *! q $end
$var wire 1 l" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 )! q $end
$var wire 1 k" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 (! q $end
$var wire 1 j" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 '! q $end
$var wire 1 i" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 &! q $end
$var wire 1 h" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 %! q $end
$var wire 1 g" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 $! q $end
$var wire 1 f" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 #! q $end
$var wire 1 e" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 "! q $end
$var wire 1 d" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 !! q $end
$var wire 1 c" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 ~ q $end
$var wire 1 b" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 } q $end
$var wire 1 a" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 | q $end
$var wire 1 `" d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg2 $end
$var wire 1 .! q [15] $end
$var wire 1 /! q [14] $end
$var wire 1 0! q [13] $end
$var wire 1 1! q [12] $end
$var wire 1 2! q [11] $end
$var wire 1 3! q [10] $end
$var wire 1 4! q [9] $end
$var wire 1 5! q [8] $end
$var wire 1 6! q [7] $end
$var wire 1 7! q [6] $end
$var wire 1 8! q [5] $end
$var wire 1 9! q [4] $end
$var wire 1 :! q [3] $end
$var wire 1 ;! q [2] $end
$var wire 1 <! q [1] $end
$var wire 1 =! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 5" writeNew $end
$var wire 1 g rst $end
$var wire 1 "# newVal [15] $end
$var wire 1 ## newVal [14] $end
$var wire 1 $# newVal [13] $end
$var wire 1 %# newVal [12] $end
$var wire 1 &# newVal [11] $end
$var wire 1 '# newVal [10] $end
$var wire 1 (# newVal [9] $end
$var wire 1 )# newVal [8] $end
$var wire 1 *# newVal [7] $end
$var wire 1 +# newVal [6] $end
$var wire 1 ,# newVal [5] $end
$var wire 1 -# newVal [4] $end
$var wire 1 .# newVal [3] $end
$var wire 1 /# newVal [2] $end
$var wire 1 0# newVal [1] $end
$var wire 1 1# newVal [0] $end

$scope module dff1 $end
$var wire 1 =! q $end
$var wire 1 1# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 <! q $end
$var wire 1 0# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 ;! q $end
$var wire 1 /# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 :! q $end
$var wire 1 .# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 9! q $end
$var wire 1 -# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 8! q $end
$var wire 1 ,# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 7! q $end
$var wire 1 +# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 6! q $end
$var wire 1 *# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 5! q $end
$var wire 1 )# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 4! q $end
$var wire 1 (# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 3! q $end
$var wire 1 '# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 2! q $end
$var wire 1 &# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 1! q $end
$var wire 1 %# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 0! q $end
$var wire 1 $# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 /! q $end
$var wire 1 ## d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 .! q $end
$var wire 1 "# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg3 $end
$var wire 1 >! q [15] $end
$var wire 1 ?! q [14] $end
$var wire 1 @! q [13] $end
$var wire 1 A! q [12] $end
$var wire 1 B! q [11] $end
$var wire 1 C! q [10] $end
$var wire 1 D! q [9] $end
$var wire 1 E! q [8] $end
$var wire 1 F! q [7] $end
$var wire 1 G! q [6] $end
$var wire 1 H! q [5] $end
$var wire 1 I! q [4] $end
$var wire 1 J! q [3] $end
$var wire 1 K! q [2] $end
$var wire 1 L! q [1] $end
$var wire 1 M! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 4" writeNew $end
$var wire 1 g rst $end
$var wire 1 B# newVal [15] $end
$var wire 1 C# newVal [14] $end
$var wire 1 D# newVal [13] $end
$var wire 1 E# newVal [12] $end
$var wire 1 F# newVal [11] $end
$var wire 1 G# newVal [10] $end
$var wire 1 H# newVal [9] $end
$var wire 1 I# newVal [8] $end
$var wire 1 J# newVal [7] $end
$var wire 1 K# newVal [6] $end
$var wire 1 L# newVal [5] $end
$var wire 1 M# newVal [4] $end
$var wire 1 N# newVal [3] $end
$var wire 1 O# newVal [2] $end
$var wire 1 P# newVal [1] $end
$var wire 1 Q# newVal [0] $end

$scope module dff1 $end
$var wire 1 M! q $end
$var wire 1 Q# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 L! q $end
$var wire 1 P# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 K! q $end
$var wire 1 O# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 J! q $end
$var wire 1 N# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 I! q $end
$var wire 1 M# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 H! q $end
$var wire 1 L# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 G! q $end
$var wire 1 K# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 F! q $end
$var wire 1 J# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 E! q $end
$var wire 1 I# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 D! q $end
$var wire 1 H# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 C! q $end
$var wire 1 G# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 B! q $end
$var wire 1 F# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 A! q $end
$var wire 1 E# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 @! q $end
$var wire 1 D# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 ?! q $end
$var wire 1 C# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 >! q $end
$var wire 1 B# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg4 $end
$var wire 1 N! q [15] $end
$var wire 1 O! q [14] $end
$var wire 1 P! q [13] $end
$var wire 1 Q! q [12] $end
$var wire 1 R! q [11] $end
$var wire 1 S! q [10] $end
$var wire 1 T! q [9] $end
$var wire 1 U! q [8] $end
$var wire 1 V! q [7] $end
$var wire 1 W! q [6] $end
$var wire 1 X! q [5] $end
$var wire 1 Y! q [4] $end
$var wire 1 Z! q [3] $end
$var wire 1 [! q [2] $end
$var wire 1 \! q [1] $end
$var wire 1 ]! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 3" writeNew $end
$var wire 1 g rst $end
$var wire 1 b# newVal [15] $end
$var wire 1 c# newVal [14] $end
$var wire 1 d# newVal [13] $end
$var wire 1 e# newVal [12] $end
$var wire 1 f# newVal [11] $end
$var wire 1 g# newVal [10] $end
$var wire 1 h# newVal [9] $end
$var wire 1 i# newVal [8] $end
$var wire 1 j# newVal [7] $end
$var wire 1 k# newVal [6] $end
$var wire 1 l# newVal [5] $end
$var wire 1 m# newVal [4] $end
$var wire 1 n# newVal [3] $end
$var wire 1 o# newVal [2] $end
$var wire 1 p# newVal [1] $end
$var wire 1 q# newVal [0] $end

$scope module dff1 $end
$var wire 1 ]! q $end
$var wire 1 q# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 \! q $end
$var wire 1 p# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 [! q $end
$var wire 1 o# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 Z! q $end
$var wire 1 n# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 Y! q $end
$var wire 1 m# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 X! q $end
$var wire 1 l# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 W! q $end
$var wire 1 k# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 V! q $end
$var wire 1 j# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 U! q $end
$var wire 1 i# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 T! q $end
$var wire 1 h# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 S! q $end
$var wire 1 g# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 R! q $end
$var wire 1 f# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 Q! q $end
$var wire 1 e# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 P! q $end
$var wire 1 d# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 O! q $end
$var wire 1 c# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 N! q $end
$var wire 1 b# d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg5 $end
$var wire 1 ^! q [15] $end
$var wire 1 _! q [14] $end
$var wire 1 `! q [13] $end
$var wire 1 a! q [12] $end
$var wire 1 b! q [11] $end
$var wire 1 c! q [10] $end
$var wire 1 d! q [9] $end
$var wire 1 e! q [8] $end
$var wire 1 f! q [7] $end
$var wire 1 g! q [6] $end
$var wire 1 h! q [5] $end
$var wire 1 i! q [4] $end
$var wire 1 j! q [3] $end
$var wire 1 k! q [2] $end
$var wire 1 l! q [1] $end
$var wire 1 m! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 2" writeNew $end
$var wire 1 g rst $end
$var wire 1 $$ newVal [15] $end
$var wire 1 %$ newVal [14] $end
$var wire 1 &$ newVal [13] $end
$var wire 1 '$ newVal [12] $end
$var wire 1 ($ newVal [11] $end
$var wire 1 )$ newVal [10] $end
$var wire 1 *$ newVal [9] $end
$var wire 1 +$ newVal [8] $end
$var wire 1 ,$ newVal [7] $end
$var wire 1 -$ newVal [6] $end
$var wire 1 .$ newVal [5] $end
$var wire 1 /$ newVal [4] $end
$var wire 1 0$ newVal [3] $end
$var wire 1 1$ newVal [2] $end
$var wire 1 2$ newVal [1] $end
$var wire 1 3$ newVal [0] $end

$scope module dff1 $end
$var wire 1 m! q $end
$var wire 1 3$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 l! q $end
$var wire 1 2$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 k! q $end
$var wire 1 1$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 j! q $end
$var wire 1 0$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 i! q $end
$var wire 1 /$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 h! q $end
$var wire 1 .$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 g! q $end
$var wire 1 -$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 f! q $end
$var wire 1 ,$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 e! q $end
$var wire 1 +$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 d! q $end
$var wire 1 *$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 c! q $end
$var wire 1 )$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 b! q $end
$var wire 1 ($ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 a! q $end
$var wire 1 '$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 `! q $end
$var wire 1 &$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 _! q $end
$var wire 1 %$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 ^! q $end
$var wire 1 $$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg6 $end
$var wire 1 n! q [15] $end
$var wire 1 o! q [14] $end
$var wire 1 p! q [13] $end
$var wire 1 q! q [12] $end
$var wire 1 r! q [11] $end
$var wire 1 s! q [10] $end
$var wire 1 t! q [9] $end
$var wire 1 u! q [8] $end
$var wire 1 v! q [7] $end
$var wire 1 w! q [6] $end
$var wire 1 x! q [5] $end
$var wire 1 y! q [4] $end
$var wire 1 z! q [3] $end
$var wire 1 {! q [2] $end
$var wire 1 |! q [1] $end
$var wire 1 }! q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 1" writeNew $end
$var wire 1 g rst $end
$var wire 1 D$ newVal [15] $end
$var wire 1 E$ newVal [14] $end
$var wire 1 F$ newVal [13] $end
$var wire 1 G$ newVal [12] $end
$var wire 1 H$ newVal [11] $end
$var wire 1 I$ newVal [10] $end
$var wire 1 J$ newVal [9] $end
$var wire 1 K$ newVal [8] $end
$var wire 1 L$ newVal [7] $end
$var wire 1 M$ newVal [6] $end
$var wire 1 N$ newVal [5] $end
$var wire 1 O$ newVal [4] $end
$var wire 1 P$ newVal [3] $end
$var wire 1 Q$ newVal [2] $end
$var wire 1 R$ newVal [1] $end
$var wire 1 S$ newVal [0] $end

$scope module dff1 $end
$var wire 1 }! q $end
$var wire 1 S$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 |! q $end
$var wire 1 R$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 {! q $end
$var wire 1 Q$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 z! q $end
$var wire 1 P$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 y! q $end
$var wire 1 O$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 x! q $end
$var wire 1 N$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 w! q $end
$var wire 1 M$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 v! q $end
$var wire 1 L$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 u! q $end
$var wire 1 K$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 t! q $end
$var wire 1 J$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 s! q $end
$var wire 1 I$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 r! q $end
$var wire 1 H$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 q! q $end
$var wire 1 G$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 p! q $end
$var wire 1 F$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 o! q $end
$var wire 1 E$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 n! q $end
$var wire 1 D$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module reg7 $end
$var wire 1 ~! q [15] $end
$var wire 1 !" q [14] $end
$var wire 1 "" q [13] $end
$var wire 1 #" q [12] $end
$var wire 1 $" q [11] $end
$var wire 1 %" q [10] $end
$var wire 1 &" q [9] $end
$var wire 1 '" q [8] $end
$var wire 1 (" q [7] $end
$var wire 1 )" q [6] $end
$var wire 1 *" q [5] $end
$var wire 1 +" q [4] $end
$var wire 1 ," q [3] $end
$var wire 1 -" q [2] $end
$var wire 1 ." q [1] $end
$var wire 1 /" q [0] $end
$var wire 1 U d [15] $end
$var wire 1 V d [14] $end
$var wire 1 W d [13] $end
$var wire 1 X d [12] $end
$var wire 1 Y d [11] $end
$var wire 1 Z d [10] $end
$var wire 1 [ d [9] $end
$var wire 1 \ d [8] $end
$var wire 1 ] d [7] $end
$var wire 1 ^ d [6] $end
$var wire 1 _ d [5] $end
$var wire 1 ` d [4] $end
$var wire 1 a d [3] $end
$var wire 1 b d [2] $end
$var wire 1 c d [1] $end
$var wire 1 d d [0] $end
$var wire 1 f clk $end
$var wire 1 0" writeNew $end
$var wire 1 g rst $end
$var wire 1 d$ newVal [15] $end
$var wire 1 e$ newVal [14] $end
$var wire 1 f$ newVal [13] $end
$var wire 1 g$ newVal [12] $end
$var wire 1 h$ newVal [11] $end
$var wire 1 i$ newVal [10] $end
$var wire 1 j$ newVal [9] $end
$var wire 1 k$ newVal [8] $end
$var wire 1 l$ newVal [7] $end
$var wire 1 m$ newVal [6] $end
$var wire 1 n$ newVal [5] $end
$var wire 1 o$ newVal [4] $end
$var wire 1 p$ newVal [3] $end
$var wire 1 q$ newVal [2] $end
$var wire 1 r$ newVal [1] $end
$var wire 1 s$ newVal [0] $end

$scope module dff1 $end
$var wire 1 /" q $end
$var wire 1 s$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff2 $end
$var wire 1 ." q $end
$var wire 1 r$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff3 $end
$var wire 1 -" q $end
$var wire 1 q$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff4 $end
$var wire 1 ," q $end
$var wire 1 p$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff5 $end
$var wire 1 +" q $end
$var wire 1 o$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff6 $end
$var wire 1 *" q $end
$var wire 1 n$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff7 $end
$var wire 1 )" q $end
$var wire 1 m$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff8 $end
$var wire 1 (" q $end
$var wire 1 l$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff9 $end
$var wire 1 '" q $end
$var wire 1 k$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff10 $end
$var wire 1 &" q $end
$var wire 1 j$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff11 $end
$var wire 1 %" q $end
$var wire 1 i$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff12 $end
$var wire 1 $" q $end
$var wire 1 h$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff13 $end
$var wire 1 #" q $end
$var wire 1 g$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff14 $end
$var wire 1 "" q $end
$var wire 1 f$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff15 $end
$var wire 1 !" q $end
$var wire 1 e$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end

$scope module dff16 $end
$var wire 1 ~! q $end
$var wire 1 d$ d $end
$var wire 1 f clk $end
$var wire 1 g rst $end
$upscope $end
$upscope $end

$scope module read1Sel $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 N! InE [15] $end
$var wire 1 O! InE [14] $end
$var wire 1 P! InE [13] $end
$var wire 1 Q! InE [12] $end
$var wire 1 R! InE [11] $end
$var wire 1 S! InE [10] $end
$var wire 1 T! InE [9] $end
$var wire 1 U! InE [8] $end
$var wire 1 V! InE [7] $end
$var wire 1 W! InE [6] $end
$var wire 1 X! InE [5] $end
$var wire 1 Y! InE [4] $end
$var wire 1 Z! InE [3] $end
$var wire 1 [! InE [2] $end
$var wire 1 \! InE [1] $end
$var wire 1 ]! InE [0] $end
$var wire 1 ^! InF [15] $end
$var wire 1 _! InF [14] $end
$var wire 1 `! InF [13] $end
$var wire 1 a! InF [12] $end
$var wire 1 b! InF [11] $end
$var wire 1 c! InF [10] $end
$var wire 1 d! InF [9] $end
$var wire 1 e! InF [8] $end
$var wire 1 f! InF [7] $end
$var wire 1 g! InF [6] $end
$var wire 1 h! InF [5] $end
$var wire 1 i! InF [4] $end
$var wire 1 j! InF [3] $end
$var wire 1 k! InF [2] $end
$var wire 1 l! InF [1] $end
$var wire 1 m! InF [0] $end
$var wire 1 n! InG [15] $end
$var wire 1 o! InG [14] $end
$var wire 1 p! InG [13] $end
$var wire 1 q! InG [12] $end
$var wire 1 r! InG [11] $end
$var wire 1 s! InG [10] $end
$var wire 1 t! InG [9] $end
$var wire 1 u! InG [8] $end
$var wire 1 v! InG [7] $end
$var wire 1 w! InG [6] $end
$var wire 1 x! InG [5] $end
$var wire 1 y! InG [4] $end
$var wire 1 z! InG [3] $end
$var wire 1 {! InG [2] $end
$var wire 1 |! InG [1] $end
$var wire 1 }! InG [0] $end
$var wire 1 ~! InH [15] $end
$var wire 1 !" InH [14] $end
$var wire 1 "" InH [13] $end
$var wire 1 #" InH [12] $end
$var wire 1 $" InH [11] $end
$var wire 1 %" InH [10] $end
$var wire 1 &" InH [9] $end
$var wire 1 '" InH [8] $end
$var wire 1 (" InH [7] $end
$var wire 1 )" InH [6] $end
$var wire 1 *" InH [5] $end
$var wire 1 +" InH [4] $end
$var wire 1 ," InH [3] $end
$var wire 1 -" InH [2] $end
$var wire 1 ." InH [1] $end
$var wire 1 /" InH [0] $end
$var wire 1 L S [2] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ! Out [15] $end
$var wire 1 " Out [14] $end
$var wire 1 # Out [13] $end
$var wire 1 $ Out [12] $end
$var wire 1 % Out [11] $end
$var wire 1 & Out [10] $end
$var wire 1 ' Out [9] $end
$var wire 1 ( Out [8] $end
$var wire 1 ) Out [7] $end
$var wire 1 * Out [6] $end
$var wire 1 + Out [5] $end
$var wire 1 , Out [4] $end
$var wire 1 - Out [3] $end
$var wire 1 . Out [2] $end
$var wire 1 / Out [1] $end
$var wire 1 0 Out [0] $end
$var wire 1 '% mux1out [15] $end
$var wire 1 (% mux1out [14] $end
$var wire 1 )% mux1out [13] $end
$var wire 1 *% mux1out [12] $end
$var wire 1 +% mux1out [11] $end
$var wire 1 ,% mux1out [10] $end
$var wire 1 -% mux1out [9] $end
$var wire 1 .% mux1out [8] $end
$var wire 1 /% mux1out [7] $end
$var wire 1 0% mux1out [6] $end
$var wire 1 1% mux1out [5] $end
$var wire 1 2% mux1out [4] $end
$var wire 1 3% mux1out [3] $end
$var wire 1 4% mux1out [2] $end
$var wire 1 5% mux1out [1] $end
$var wire 1 6% mux1out [0] $end
$var wire 1 7% mux2out [15] $end
$var wire 1 8% mux2out [14] $end
$var wire 1 9% mux2out [13] $end
$var wire 1 :% mux2out [12] $end
$var wire 1 ;% mux2out [11] $end
$var wire 1 <% mux2out [10] $end
$var wire 1 =% mux2out [9] $end
$var wire 1 >% mux2out [8] $end
$var wire 1 ?% mux2out [7] $end
$var wire 1 @% mux2out [6] $end
$var wire 1 A% mux2out [5] $end
$var wire 1 B% mux2out [4] $end
$var wire 1 C% mux2out [3] $end
$var wire 1 D% mux2out [2] $end
$var wire 1 E% mux2out [1] $end
$var wire 1 F% mux2out [0] $end

$scope module mux0 $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out [15] $end
$var wire 1 (% Out [14] $end
$var wire 1 )% Out [13] $end
$var wire 1 *% Out [12] $end
$var wire 1 +% Out [11] $end
$var wire 1 ,% Out [10] $end
$var wire 1 -% Out [9] $end
$var wire 1 .% Out [8] $end
$var wire 1 /% Out [7] $end
$var wire 1 0% Out [6] $end
$var wire 1 1% Out [5] $end
$var wire 1 2% Out [4] $end
$var wire 1 3% Out [3] $end
$var wire 1 4% Out [2] $end
$var wire 1 5% Out [1] $end
$var wire 1 6% Out [0] $end

$scope module mux0 $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 3% Out [3] $end
$var wire 1 4% Out [2] $end
$var wire 1 5% Out [1] $end
$var wire 1 6% Out [0] $end

$scope module mux0 $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 =! InC $end
$var wire 1 M! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 6% Out $end
$var wire 1 I% AB $end
$var wire 1 J% CD $end

$scope module muxAB $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 N S $end
$var wire 1 I% Out $end
$var wire 1 K% S_n $end
$var wire 1 L% As $end
$var wire 1 M% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 K% out $end
$upscope $end

$scope module nandA $end
$var wire 1 { in1 $end
$var wire 1 K% in2 $end
$var wire 1 L% out $end
$upscope $end

$scope module nandB $end
$var wire 1 -! in1 $end
$var wire 1 N in2 $end
$var wire 1 M% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 L% in1 $end
$var wire 1 M% in2 $end
$var wire 1 I% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 =! InA $end
$var wire 1 M! InB $end
$var wire 1 N S $end
$var wire 1 J% Out $end
$var wire 1 N% S_n $end
$var wire 1 O% As $end
$var wire 1 P% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 N% out $end
$upscope $end

$scope module nandA $end
$var wire 1 =! in1 $end
$var wire 1 N% in2 $end
$var wire 1 O% out $end
$upscope $end

$scope module nandB $end
$var wire 1 M! in1 $end
$var wire 1 N in2 $end
$var wire 1 P% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O% in1 $end
$var wire 1 P% in2 $end
$var wire 1 J% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 I% InA $end
$var wire 1 J% InB $end
$var wire 1 M S $end
$var wire 1 6% Out $end
$var wire 1 Q% S_n $end
$var wire 1 R% As $end
$var wire 1 S% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 Q% out $end
$upscope $end

$scope module nandA $end
$var wire 1 I% in1 $end
$var wire 1 Q% in2 $end
$var wire 1 R% out $end
$upscope $end

$scope module nandB $end
$var wire 1 J% in1 $end
$var wire 1 M in2 $end
$var wire 1 S% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R% in1 $end
$var wire 1 S% in2 $end
$var wire 1 6% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 <! InC $end
$var wire 1 L! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 5% Out $end
$var wire 1 T% AB $end
$var wire 1 U% CD $end

$scope module muxAB $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 N S $end
$var wire 1 T% Out $end
$var wire 1 V% S_n $end
$var wire 1 W% As $end
$var wire 1 X% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 V% out $end
$upscope $end

$scope module nandA $end
$var wire 1 z in1 $end
$var wire 1 V% in2 $end
$var wire 1 W% out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,! in1 $end
$var wire 1 N in2 $end
$var wire 1 X% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W% in1 $end
$var wire 1 X% in2 $end
$var wire 1 T% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 <! InA $end
$var wire 1 L! InB $end
$var wire 1 N S $end
$var wire 1 U% Out $end
$var wire 1 Y% S_n $end
$var wire 1 Z% As $end
$var wire 1 [% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Y% out $end
$upscope $end

$scope module nandA $end
$var wire 1 <! in1 $end
$var wire 1 Y% in2 $end
$var wire 1 Z% out $end
$upscope $end

$scope module nandB $end
$var wire 1 L! in1 $end
$var wire 1 N in2 $end
$var wire 1 [% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z% in1 $end
$var wire 1 [% in2 $end
$var wire 1 U% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 T% InA $end
$var wire 1 U% InB $end
$var wire 1 M S $end
$var wire 1 5% Out $end
$var wire 1 \% S_n $end
$var wire 1 ]% As $end
$var wire 1 ^% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 \% out $end
$upscope $end

$scope module nandA $end
$var wire 1 T% in1 $end
$var wire 1 \% in2 $end
$var wire 1 ]% out $end
$upscope $end

$scope module nandB $end
$var wire 1 U% in1 $end
$var wire 1 M in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ]% in1 $end
$var wire 1 ^% in2 $end
$var wire 1 5% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 ;! InC $end
$var wire 1 K! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 4% Out $end
$var wire 1 _% AB $end
$var wire 1 `% CD $end

$scope module muxAB $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 N S $end
$var wire 1 _% Out $end
$var wire 1 a% S_n $end
$var wire 1 b% As $end
$var wire 1 c% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 a% out $end
$upscope $end

$scope module nandA $end
$var wire 1 y in1 $end
$var wire 1 a% in2 $end
$var wire 1 b% out $end
$upscope $end

$scope module nandB $end
$var wire 1 +! in1 $end
$var wire 1 N in2 $end
$var wire 1 c% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b% in1 $end
$var wire 1 c% in2 $end
$var wire 1 _% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 ;! InA $end
$var wire 1 K! InB $end
$var wire 1 N S $end
$var wire 1 `% Out $end
$var wire 1 d% S_n $end
$var wire 1 e% As $end
$var wire 1 f% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 d% out $end
$upscope $end

$scope module nandA $end
$var wire 1 ;! in1 $end
$var wire 1 d% in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module nandB $end
$var wire 1 K! in1 $end
$var wire 1 N in2 $end
$var wire 1 f% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e% in1 $end
$var wire 1 f% in2 $end
$var wire 1 `% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 _% InA $end
$var wire 1 `% InB $end
$var wire 1 M S $end
$var wire 1 4% Out $end
$var wire 1 g% S_n $end
$var wire 1 h% As $end
$var wire 1 i% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 g% out $end
$upscope $end

$scope module nandA $end
$var wire 1 _% in1 $end
$var wire 1 g% in2 $end
$var wire 1 h% out $end
$upscope $end

$scope module nandB $end
$var wire 1 `% in1 $end
$var wire 1 M in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 h% in1 $end
$var wire 1 i% in2 $end
$var wire 1 4% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 :! InC $end
$var wire 1 J! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 3% Out $end
$var wire 1 j% AB $end
$var wire 1 k% CD $end

$scope module muxAB $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 N S $end
$var wire 1 j% Out $end
$var wire 1 l% S_n $end
$var wire 1 m% As $end
$var wire 1 n% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 l% out $end
$upscope $end

$scope module nandA $end
$var wire 1 x in1 $end
$var wire 1 l% in2 $end
$var wire 1 m% out $end
$upscope $end

$scope module nandB $end
$var wire 1 *! in1 $end
$var wire 1 N in2 $end
$var wire 1 n% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m% in1 $end
$var wire 1 n% in2 $end
$var wire 1 j% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 :! InA $end
$var wire 1 J! InB $end
$var wire 1 N S $end
$var wire 1 k% Out $end
$var wire 1 o% S_n $end
$var wire 1 p% As $end
$var wire 1 q% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 o% out $end
$upscope $end

$scope module nandA $end
$var wire 1 :! in1 $end
$var wire 1 o% in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module nandB $end
$var wire 1 J! in1 $end
$var wire 1 N in2 $end
$var wire 1 q% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p% in1 $end
$var wire 1 q% in2 $end
$var wire 1 k% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 j% InA $end
$var wire 1 k% InB $end
$var wire 1 M S $end
$var wire 1 3% Out $end
$var wire 1 r% S_n $end
$var wire 1 s% As $end
$var wire 1 t% Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 r% out $end
$upscope $end

$scope module nandA $end
$var wire 1 j% in1 $end
$var wire 1 r% in2 $end
$var wire 1 s% out $end
$upscope $end

$scope module nandB $end
$var wire 1 k% in1 $end
$var wire 1 M in2 $end
$var wire 1 t% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 s% in1 $end
$var wire 1 t% in2 $end
$var wire 1 3% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 t InA [3] $end
$var wire 1 u InA [2] $end
$var wire 1 v InA [1] $end
$var wire 1 w InA [0] $end
$var wire 1 &! InB [3] $end
$var wire 1 '! InB [2] $end
$var wire 1 (! InB [1] $end
$var wire 1 )! InB [0] $end
$var wire 1 6! InC [3] $end
$var wire 1 7! InC [2] $end
$var wire 1 8! InC [1] $end
$var wire 1 9! InC [0] $end
$var wire 1 F! InD [3] $end
$var wire 1 G! InD [2] $end
$var wire 1 H! InD [1] $end
$var wire 1 I! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 /% Out [3] $end
$var wire 1 0% Out [2] $end
$var wire 1 1% Out [1] $end
$var wire 1 2% Out [0] $end

$scope module mux0 $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 9! InC $end
$var wire 1 I! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 2% Out $end
$var wire 1 v% AB $end
$var wire 1 w% CD $end

$scope module muxAB $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 N S $end
$var wire 1 v% Out $end
$var wire 1 x% S_n $end
$var wire 1 y% As $end
$var wire 1 z% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 x% out $end
$upscope $end

$scope module nandA $end
$var wire 1 w in1 $end
$var wire 1 x% in2 $end
$var wire 1 y% out $end
$upscope $end

$scope module nandB $end
$var wire 1 )! in1 $end
$var wire 1 N in2 $end
$var wire 1 z% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y% in1 $end
$var wire 1 z% in2 $end
$var wire 1 v% out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 9! InA $end
$var wire 1 I! InB $end
$var wire 1 N S $end
$var wire 1 w% Out $end
$var wire 1 {% S_n $end
$var wire 1 |% As $end
$var wire 1 }% Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 {% out $end
$upscope $end

$scope module nandA $end
$var wire 1 9! in1 $end
$var wire 1 {% in2 $end
$var wire 1 |% out $end
$upscope $end

$scope module nandB $end
$var wire 1 I! in1 $end
$var wire 1 N in2 $end
$var wire 1 }% out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |% in1 $end
$var wire 1 }% in2 $end
$var wire 1 w% out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v% InA $end
$var wire 1 w% InB $end
$var wire 1 M S $end
$var wire 1 2% Out $end
$var wire 1 ~% S_n $end
$var wire 1 !& As $end
$var wire 1 "& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 ~% out $end
$upscope $end

$scope module nandA $end
$var wire 1 v% in1 $end
$var wire 1 ~% in2 $end
$var wire 1 !& out $end
$upscope $end

$scope module nandB $end
$var wire 1 w% in1 $end
$var wire 1 M in2 $end
$var wire 1 "& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !& in1 $end
$var wire 1 "& in2 $end
$var wire 1 2% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 8! InC $end
$var wire 1 H! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 1% Out $end
$var wire 1 #& AB $end
$var wire 1 $& CD $end

$scope module muxAB $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 N S $end
$var wire 1 #& Out $end
$var wire 1 %& S_n $end
$var wire 1 && As $end
$var wire 1 '& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 %& out $end
$upscope $end

$scope module nandA $end
$var wire 1 v in1 $end
$var wire 1 %& in2 $end
$var wire 1 && out $end
$upscope $end

$scope module nandB $end
$var wire 1 (! in1 $end
$var wire 1 N in2 $end
$var wire 1 '& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 && in1 $end
$var wire 1 '& in2 $end
$var wire 1 #& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 8! InA $end
$var wire 1 H! InB $end
$var wire 1 N S $end
$var wire 1 $& Out $end
$var wire 1 (& S_n $end
$var wire 1 )& As $end
$var wire 1 *& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 (& out $end
$upscope $end

$scope module nandA $end
$var wire 1 8! in1 $end
$var wire 1 (& in2 $end
$var wire 1 )& out $end
$upscope $end

$scope module nandB $end
$var wire 1 H! in1 $end
$var wire 1 N in2 $end
$var wire 1 *& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )& in1 $end
$var wire 1 *& in2 $end
$var wire 1 $& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 #& InA $end
$var wire 1 $& InB $end
$var wire 1 M S $end
$var wire 1 1% Out $end
$var wire 1 +& S_n $end
$var wire 1 ,& As $end
$var wire 1 -& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 +& out $end
$upscope $end

$scope module nandA $end
$var wire 1 #& in1 $end
$var wire 1 +& in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module nandB $end
$var wire 1 $& in1 $end
$var wire 1 M in2 $end
$var wire 1 -& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ,& in1 $end
$var wire 1 -& in2 $end
$var wire 1 1% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 7! InC $end
$var wire 1 G! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 0% Out $end
$var wire 1 .& AB $end
$var wire 1 /& CD $end

$scope module muxAB $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 N S $end
$var wire 1 .& Out $end
$var wire 1 0& S_n $end
$var wire 1 1& As $end
$var wire 1 2& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 0& out $end
$upscope $end

$scope module nandA $end
$var wire 1 u in1 $end
$var wire 1 0& in2 $end
$var wire 1 1& out $end
$upscope $end

$scope module nandB $end
$var wire 1 '! in1 $end
$var wire 1 N in2 $end
$var wire 1 2& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1& in1 $end
$var wire 1 2& in2 $end
$var wire 1 .& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 7! InA $end
$var wire 1 G! InB $end
$var wire 1 N S $end
$var wire 1 /& Out $end
$var wire 1 3& S_n $end
$var wire 1 4& As $end
$var wire 1 5& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 3& out $end
$upscope $end

$scope module nandA $end
$var wire 1 7! in1 $end
$var wire 1 3& in2 $end
$var wire 1 4& out $end
$upscope $end

$scope module nandB $end
$var wire 1 G! in1 $end
$var wire 1 N in2 $end
$var wire 1 5& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4& in1 $end
$var wire 1 5& in2 $end
$var wire 1 /& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 .& InA $end
$var wire 1 /& InB $end
$var wire 1 M S $end
$var wire 1 0% Out $end
$var wire 1 6& S_n $end
$var wire 1 7& As $end
$var wire 1 8& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 6& out $end
$upscope $end

$scope module nandA $end
$var wire 1 .& in1 $end
$var wire 1 6& in2 $end
$var wire 1 7& out $end
$upscope $end

$scope module nandB $end
$var wire 1 /& in1 $end
$var wire 1 M in2 $end
$var wire 1 8& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 7& in1 $end
$var wire 1 8& in2 $end
$var wire 1 0% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 6! InC $end
$var wire 1 F! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 /% Out $end
$var wire 1 9& AB $end
$var wire 1 :& CD $end

$scope module muxAB $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 N S $end
$var wire 1 9& Out $end
$var wire 1 ;& S_n $end
$var wire 1 <& As $end
$var wire 1 =& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ;& out $end
$upscope $end

$scope module nandA $end
$var wire 1 t in1 $end
$var wire 1 ;& in2 $end
$var wire 1 <& out $end
$upscope $end

$scope module nandB $end
$var wire 1 &! in1 $end
$var wire 1 N in2 $end
$var wire 1 =& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <& in1 $end
$var wire 1 =& in2 $end
$var wire 1 9& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 6! InA $end
$var wire 1 F! InB $end
$var wire 1 N S $end
$var wire 1 :& Out $end
$var wire 1 >& S_n $end
$var wire 1 ?& As $end
$var wire 1 @& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 >& out $end
$upscope $end

$scope module nandA $end
$var wire 1 6! in1 $end
$var wire 1 >& in2 $end
$var wire 1 ?& out $end
$upscope $end

$scope module nandB $end
$var wire 1 F! in1 $end
$var wire 1 N in2 $end
$var wire 1 @& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?& in1 $end
$var wire 1 @& in2 $end
$var wire 1 :& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 9& InA $end
$var wire 1 :& InB $end
$var wire 1 M S $end
$var wire 1 /% Out $end
$var wire 1 A& S_n $end
$var wire 1 B& As $end
$var wire 1 C& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 A& out $end
$upscope $end

$scope module nandA $end
$var wire 1 9& in1 $end
$var wire 1 A& in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module nandB $end
$var wire 1 :& in1 $end
$var wire 1 M in2 $end
$var wire 1 C& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 B& in1 $end
$var wire 1 C& in2 $end
$var wire 1 /% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 p InA [3] $end
$var wire 1 q InA [2] $end
$var wire 1 r InA [1] $end
$var wire 1 s InA [0] $end
$var wire 1 "! InB [3] $end
$var wire 1 #! InB [2] $end
$var wire 1 $! InB [1] $end
$var wire 1 %! InB [0] $end
$var wire 1 2! InC [3] $end
$var wire 1 3! InC [2] $end
$var wire 1 4! InC [1] $end
$var wire 1 5! InC [0] $end
$var wire 1 B! InD [3] $end
$var wire 1 C! InD [2] $end
$var wire 1 D! InD [1] $end
$var wire 1 E! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 +% Out [3] $end
$var wire 1 ,% Out [2] $end
$var wire 1 -% Out [1] $end
$var wire 1 .% Out [0] $end

$scope module mux0 $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 5! InC $end
$var wire 1 E! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 .% Out $end
$var wire 1 E& AB $end
$var wire 1 F& CD $end

$scope module muxAB $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 N S $end
$var wire 1 E& Out $end
$var wire 1 G& S_n $end
$var wire 1 H& As $end
$var wire 1 I& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 G& out $end
$upscope $end

$scope module nandA $end
$var wire 1 s in1 $end
$var wire 1 G& in2 $end
$var wire 1 H& out $end
$upscope $end

$scope module nandB $end
$var wire 1 %! in1 $end
$var wire 1 N in2 $end
$var wire 1 I& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H& in1 $end
$var wire 1 I& in2 $end
$var wire 1 E& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 5! InA $end
$var wire 1 E! InB $end
$var wire 1 N S $end
$var wire 1 F& Out $end
$var wire 1 J& S_n $end
$var wire 1 K& As $end
$var wire 1 L& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 J& out $end
$upscope $end

$scope module nandA $end
$var wire 1 5! in1 $end
$var wire 1 J& in2 $end
$var wire 1 K& out $end
$upscope $end

$scope module nandB $end
$var wire 1 E! in1 $end
$var wire 1 N in2 $end
$var wire 1 L& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K& in1 $end
$var wire 1 L& in2 $end
$var wire 1 F& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 E& InA $end
$var wire 1 F& InB $end
$var wire 1 M S $end
$var wire 1 .% Out $end
$var wire 1 M& S_n $end
$var wire 1 N& As $end
$var wire 1 O& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 M& out $end
$upscope $end

$scope module nandA $end
$var wire 1 E& in1 $end
$var wire 1 M& in2 $end
$var wire 1 N& out $end
$upscope $end

$scope module nandB $end
$var wire 1 F& in1 $end
$var wire 1 M in2 $end
$var wire 1 O& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N& in1 $end
$var wire 1 O& in2 $end
$var wire 1 .% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 4! InC $end
$var wire 1 D! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 -% Out $end
$var wire 1 P& AB $end
$var wire 1 Q& CD $end

$scope module muxAB $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 N S $end
$var wire 1 P& Out $end
$var wire 1 R& S_n $end
$var wire 1 S& As $end
$var wire 1 T& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 R& out $end
$upscope $end

$scope module nandA $end
$var wire 1 r in1 $end
$var wire 1 R& in2 $end
$var wire 1 S& out $end
$upscope $end

$scope module nandB $end
$var wire 1 $! in1 $end
$var wire 1 N in2 $end
$var wire 1 T& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 S& in1 $end
$var wire 1 T& in2 $end
$var wire 1 P& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 4! InA $end
$var wire 1 D! InB $end
$var wire 1 N S $end
$var wire 1 Q& Out $end
$var wire 1 U& S_n $end
$var wire 1 V& As $end
$var wire 1 W& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 U& out $end
$upscope $end

$scope module nandA $end
$var wire 1 4! in1 $end
$var wire 1 U& in2 $end
$var wire 1 V& out $end
$upscope $end

$scope module nandB $end
$var wire 1 D! in1 $end
$var wire 1 N in2 $end
$var wire 1 W& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 V& in1 $end
$var wire 1 W& in2 $end
$var wire 1 Q& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 P& InA $end
$var wire 1 Q& InB $end
$var wire 1 M S $end
$var wire 1 -% Out $end
$var wire 1 X& S_n $end
$var wire 1 Y& As $end
$var wire 1 Z& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 X& out $end
$upscope $end

$scope module nandA $end
$var wire 1 P& in1 $end
$var wire 1 X& in2 $end
$var wire 1 Y& out $end
$upscope $end

$scope module nandB $end
$var wire 1 Q& in1 $end
$var wire 1 M in2 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Y& in1 $end
$var wire 1 Z& in2 $end
$var wire 1 -% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 3! InC $end
$var wire 1 C! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ,% Out $end
$var wire 1 [& AB $end
$var wire 1 \& CD $end

$scope module muxAB $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 N S $end
$var wire 1 [& Out $end
$var wire 1 ]& S_n $end
$var wire 1 ^& As $end
$var wire 1 _& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ]& out $end
$upscope $end

$scope module nandA $end
$var wire 1 q in1 $end
$var wire 1 ]& in2 $end
$var wire 1 ^& out $end
$upscope $end

$scope module nandB $end
$var wire 1 #! in1 $end
$var wire 1 N in2 $end
$var wire 1 _& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^& in1 $end
$var wire 1 _& in2 $end
$var wire 1 [& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 3! InA $end
$var wire 1 C! InB $end
$var wire 1 N S $end
$var wire 1 \& Out $end
$var wire 1 `& S_n $end
$var wire 1 a& As $end
$var wire 1 b& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 `& out $end
$upscope $end

$scope module nandA $end
$var wire 1 3! in1 $end
$var wire 1 `& in2 $end
$var wire 1 a& out $end
$upscope $end

$scope module nandB $end
$var wire 1 C! in1 $end
$var wire 1 N in2 $end
$var wire 1 b& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a& in1 $end
$var wire 1 b& in2 $end
$var wire 1 \& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 [& InA $end
$var wire 1 \& InB $end
$var wire 1 M S $end
$var wire 1 ,% Out $end
$var wire 1 c& S_n $end
$var wire 1 d& As $end
$var wire 1 e& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 c& out $end
$upscope $end

$scope module nandA $end
$var wire 1 [& in1 $end
$var wire 1 c& in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module nandB $end
$var wire 1 \& in1 $end
$var wire 1 M in2 $end
$var wire 1 e& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 d& in1 $end
$var wire 1 e& in2 $end
$var wire 1 ,% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 2! InC $end
$var wire 1 B! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 +% Out $end
$var wire 1 f& AB $end
$var wire 1 g& CD $end

$scope module muxAB $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 N S $end
$var wire 1 f& Out $end
$var wire 1 h& S_n $end
$var wire 1 i& As $end
$var wire 1 j& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 h& out $end
$upscope $end

$scope module nandA $end
$var wire 1 p in1 $end
$var wire 1 h& in2 $end
$var wire 1 i& out $end
$upscope $end

$scope module nandB $end
$var wire 1 "! in1 $end
$var wire 1 N in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i& in1 $end
$var wire 1 j& in2 $end
$var wire 1 f& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 2! InA $end
$var wire 1 B! InB $end
$var wire 1 N S $end
$var wire 1 g& Out $end
$var wire 1 k& S_n $end
$var wire 1 l& As $end
$var wire 1 m& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 k& out $end
$upscope $end

$scope module nandA $end
$var wire 1 2! in1 $end
$var wire 1 k& in2 $end
$var wire 1 l& out $end
$upscope $end

$scope module nandB $end
$var wire 1 B! in1 $end
$var wire 1 N in2 $end
$var wire 1 m& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l& in1 $end
$var wire 1 m& in2 $end
$var wire 1 g& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 f& InA $end
$var wire 1 g& InB $end
$var wire 1 M S $end
$var wire 1 +% Out $end
$var wire 1 n& S_n $end
$var wire 1 o& As $end
$var wire 1 p& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 n& out $end
$upscope $end

$scope module nandA $end
$var wire 1 f& in1 $end
$var wire 1 n& in2 $end
$var wire 1 o& out $end
$upscope $end

$scope module nandB $end
$var wire 1 g& in1 $end
$var wire 1 M in2 $end
$var wire 1 p& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 o& in1 $end
$var wire 1 p& in2 $end
$var wire 1 +% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA [3] $end
$var wire 1 m InA [2] $end
$var wire 1 n InA [1] $end
$var wire 1 o InA [0] $end
$var wire 1 | InB [3] $end
$var wire 1 } InB [2] $end
$var wire 1 ~ InB [1] $end
$var wire 1 !! InB [0] $end
$var wire 1 .! InC [3] $end
$var wire 1 /! InC [2] $end
$var wire 1 0! InC [1] $end
$var wire 1 1! InC [0] $end
$var wire 1 >! InD [3] $end
$var wire 1 ?! InD [2] $end
$var wire 1 @! InD [1] $end
$var wire 1 A! InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out [3] $end
$var wire 1 (% Out [2] $end
$var wire 1 )% Out [1] $end
$var wire 1 *% Out [0] $end

$scope module mux0 $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 1! InC $end
$var wire 1 A! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 *% Out $end
$var wire 1 r& AB $end
$var wire 1 s& CD $end

$scope module muxAB $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 N S $end
$var wire 1 r& Out $end
$var wire 1 t& S_n $end
$var wire 1 u& As $end
$var wire 1 v& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 t& out $end
$upscope $end

$scope module nandA $end
$var wire 1 o in1 $end
$var wire 1 t& in2 $end
$var wire 1 u& out $end
$upscope $end

$scope module nandB $end
$var wire 1 !! in1 $end
$var wire 1 N in2 $end
$var wire 1 v& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u& in1 $end
$var wire 1 v& in2 $end
$var wire 1 r& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 1! InA $end
$var wire 1 A! InB $end
$var wire 1 N S $end
$var wire 1 s& Out $end
$var wire 1 w& S_n $end
$var wire 1 x& As $end
$var wire 1 y& Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 w& out $end
$upscope $end

$scope module nandA $end
$var wire 1 1! in1 $end
$var wire 1 w& in2 $end
$var wire 1 x& out $end
$upscope $end

$scope module nandB $end
$var wire 1 A! in1 $end
$var wire 1 N in2 $end
$var wire 1 y& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x& in1 $end
$var wire 1 y& in2 $end
$var wire 1 s& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r& InA $end
$var wire 1 s& InB $end
$var wire 1 M S $end
$var wire 1 *% Out $end
$var wire 1 z& S_n $end
$var wire 1 {& As $end
$var wire 1 |& Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 z& out $end
$upscope $end

$scope module nandA $end
$var wire 1 r& in1 $end
$var wire 1 z& in2 $end
$var wire 1 {& out $end
$upscope $end

$scope module nandB $end
$var wire 1 s& in1 $end
$var wire 1 M in2 $end
$var wire 1 |& out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {& in1 $end
$var wire 1 |& in2 $end
$var wire 1 *% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 0! InC $end
$var wire 1 @! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 )% Out $end
$var wire 1 }& AB $end
$var wire 1 ~& CD $end

$scope module muxAB $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 N S $end
$var wire 1 }& Out $end
$var wire 1 !' S_n $end
$var wire 1 "' As $end
$var wire 1 #' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 !' out $end
$upscope $end

$scope module nandA $end
$var wire 1 n in1 $end
$var wire 1 !' in2 $end
$var wire 1 "' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~ in1 $end
$var wire 1 N in2 $end
$var wire 1 #' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "' in1 $end
$var wire 1 #' in2 $end
$var wire 1 }& out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 0! InA $end
$var wire 1 @! InB $end
$var wire 1 N S $end
$var wire 1 ~& Out $end
$var wire 1 $' S_n $end
$var wire 1 %' As $end
$var wire 1 &' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 $' out $end
$upscope $end

$scope module nandA $end
$var wire 1 0! in1 $end
$var wire 1 $' in2 $end
$var wire 1 %' out $end
$upscope $end

$scope module nandB $end
$var wire 1 @! in1 $end
$var wire 1 N in2 $end
$var wire 1 &' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %' in1 $end
$var wire 1 &' in2 $end
$var wire 1 ~& out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 }& InA $end
$var wire 1 ~& InB $end
$var wire 1 M S $end
$var wire 1 )% Out $end
$var wire 1 '' S_n $end
$var wire 1 (' As $end
$var wire 1 )' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 '' out $end
$upscope $end

$scope module nandA $end
$var wire 1 }& in1 $end
$var wire 1 '' in2 $end
$var wire 1 (' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~& in1 $end
$var wire 1 M in2 $end
$var wire 1 )' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 (' in1 $end
$var wire 1 )' in2 $end
$var wire 1 )% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 /! InC $end
$var wire 1 ?! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 (% Out $end
$var wire 1 *' AB $end
$var wire 1 +' CD $end

$scope module muxAB $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 N S $end
$var wire 1 *' Out $end
$var wire 1 ,' S_n $end
$var wire 1 -' As $end
$var wire 1 .' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nandA $end
$var wire 1 m in1 $end
$var wire 1 ,' in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nandB $end
$var wire 1 } in1 $end
$var wire 1 N in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -' in1 $end
$var wire 1 .' in2 $end
$var wire 1 *' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 /! InA $end
$var wire 1 ?! InB $end
$var wire 1 N S $end
$var wire 1 +' Out $end
$var wire 1 /' S_n $end
$var wire 1 0' As $end
$var wire 1 1' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 /' out $end
$upscope $end

$scope module nandA $end
$var wire 1 /! in1 $end
$var wire 1 /' in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?! in1 $end
$var wire 1 N in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0' in1 $end
$var wire 1 1' in2 $end
$var wire 1 +' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 *' InA $end
$var wire 1 +' InB $end
$var wire 1 M S $end
$var wire 1 (% Out $end
$var wire 1 2' S_n $end
$var wire 1 3' As $end
$var wire 1 4' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 2' out $end
$upscope $end

$scope module nandA $end
$var wire 1 *' in1 $end
$var wire 1 2' in2 $end
$var wire 1 3' out $end
$upscope $end

$scope module nandB $end
$var wire 1 +' in1 $end
$var wire 1 M in2 $end
$var wire 1 4' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 3' in1 $end
$var wire 1 4' in2 $end
$var wire 1 (% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 .! InC $end
$var wire 1 >! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 '% Out $end
$var wire 1 5' AB $end
$var wire 1 6' CD $end

$scope module muxAB $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 N S $end
$var wire 1 5' Out $end
$var wire 1 7' S_n $end
$var wire 1 8' As $end
$var wire 1 9' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 7' out $end
$upscope $end

$scope module nandA $end
$var wire 1 l in1 $end
$var wire 1 7' in2 $end
$var wire 1 8' out $end
$upscope $end

$scope module nandB $end
$var wire 1 | in1 $end
$var wire 1 N in2 $end
$var wire 1 9' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8' in1 $end
$var wire 1 9' in2 $end
$var wire 1 5' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 .! InA $end
$var wire 1 >! InB $end
$var wire 1 N S $end
$var wire 1 6' Out $end
$var wire 1 :' S_n $end
$var wire 1 ;' As $end
$var wire 1 <' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 :' out $end
$upscope $end

$scope module nandA $end
$var wire 1 .! in1 $end
$var wire 1 :' in2 $end
$var wire 1 ;' out $end
$upscope $end

$scope module nandB $end
$var wire 1 >! in1 $end
$var wire 1 N in2 $end
$var wire 1 <' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;' in1 $end
$var wire 1 <' in2 $end
$var wire 1 6' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 5' InA $end
$var wire 1 6' InB $end
$var wire 1 M S $end
$var wire 1 '% Out $end
$var wire 1 =' S_n $end
$var wire 1 >' As $end
$var wire 1 ?' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 =' out $end
$upscope $end

$scope module nandA $end
$var wire 1 5' in1 $end
$var wire 1 =' in2 $end
$var wire 1 >' out $end
$upscope $end

$scope module nandB $end
$var wire 1 6' in1 $end
$var wire 1 M in2 $end
$var wire 1 ?' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 >' in1 $end
$var wire 1 ?' in2 $end
$var wire 1 '% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 N! InA [15] $end
$var wire 1 O! InA [14] $end
$var wire 1 P! InA [13] $end
$var wire 1 Q! InA [12] $end
$var wire 1 R! InA [11] $end
$var wire 1 S! InA [10] $end
$var wire 1 T! InA [9] $end
$var wire 1 U! InA [8] $end
$var wire 1 V! InA [7] $end
$var wire 1 W! InA [6] $end
$var wire 1 X! InA [5] $end
$var wire 1 Y! InA [4] $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 ^! InB [15] $end
$var wire 1 _! InB [14] $end
$var wire 1 `! InB [13] $end
$var wire 1 a! InB [12] $end
$var wire 1 b! InB [11] $end
$var wire 1 c! InB [10] $end
$var wire 1 d! InB [9] $end
$var wire 1 e! InB [8] $end
$var wire 1 f! InB [7] $end
$var wire 1 g! InB [6] $end
$var wire 1 h! InB [5] $end
$var wire 1 i! InB [4] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 n! InC [15] $end
$var wire 1 o! InC [14] $end
$var wire 1 p! InC [13] $end
$var wire 1 q! InC [12] $end
$var wire 1 r! InC [11] $end
$var wire 1 s! InC [10] $end
$var wire 1 t! InC [9] $end
$var wire 1 u! InC [8] $end
$var wire 1 v! InC [7] $end
$var wire 1 w! InC [6] $end
$var wire 1 x! InC [5] $end
$var wire 1 y! InC [4] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ~! InD [15] $end
$var wire 1 !" InD [14] $end
$var wire 1 "" InD [13] $end
$var wire 1 #" InD [12] $end
$var wire 1 $" InD [11] $end
$var wire 1 %" InD [10] $end
$var wire 1 &" InD [9] $end
$var wire 1 '" InD [8] $end
$var wire 1 (" InD [7] $end
$var wire 1 )" InD [6] $end
$var wire 1 *" InD [5] $end
$var wire 1 +" InD [4] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out [15] $end
$var wire 1 8% Out [14] $end
$var wire 1 9% Out [13] $end
$var wire 1 :% Out [12] $end
$var wire 1 ;% Out [11] $end
$var wire 1 <% Out [10] $end
$var wire 1 =% Out [9] $end
$var wire 1 >% Out [8] $end
$var wire 1 ?% Out [7] $end
$var wire 1 @% Out [6] $end
$var wire 1 A% Out [5] $end
$var wire 1 B% Out [4] $end
$var wire 1 C% Out [3] $end
$var wire 1 D% Out [2] $end
$var wire 1 E% Out [1] $end
$var wire 1 F% Out [0] $end

$scope module mux0 $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 C% Out [3] $end
$var wire 1 D% Out [2] $end
$var wire 1 E% Out [1] $end
$var wire 1 F% Out [0] $end

$scope module mux0 $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 }! InC $end
$var wire 1 /" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 F% Out $end
$var wire 1 B' AB $end
$var wire 1 C' CD $end

$scope module muxAB $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 N S $end
$var wire 1 B' Out $end
$var wire 1 D' S_n $end
$var wire 1 E' As $end
$var wire 1 F' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 D' out $end
$upscope $end

$scope module nandA $end
$var wire 1 ]! in1 $end
$var wire 1 D' in2 $end
$var wire 1 E' out $end
$upscope $end

$scope module nandB $end
$var wire 1 m! in1 $end
$var wire 1 N in2 $end
$var wire 1 F' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 E' in1 $end
$var wire 1 F' in2 $end
$var wire 1 B' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 }! InA $end
$var wire 1 /" InB $end
$var wire 1 N S $end
$var wire 1 C' Out $end
$var wire 1 G' S_n $end
$var wire 1 H' As $end
$var wire 1 I' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 G' out $end
$upscope $end

$scope module nandA $end
$var wire 1 }! in1 $end
$var wire 1 G' in2 $end
$var wire 1 H' out $end
$upscope $end

$scope module nandB $end
$var wire 1 /" in1 $end
$var wire 1 N in2 $end
$var wire 1 I' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H' in1 $end
$var wire 1 I' in2 $end
$var wire 1 C' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 B' InA $end
$var wire 1 C' InB $end
$var wire 1 M S $end
$var wire 1 F% Out $end
$var wire 1 J' S_n $end
$var wire 1 K' As $end
$var wire 1 L' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 J' out $end
$upscope $end

$scope module nandA $end
$var wire 1 B' in1 $end
$var wire 1 J' in2 $end
$var wire 1 K' out $end
$upscope $end

$scope module nandB $end
$var wire 1 C' in1 $end
$var wire 1 M in2 $end
$var wire 1 L' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K' in1 $end
$var wire 1 L' in2 $end
$var wire 1 F% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 |! InC $end
$var wire 1 ." InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 E% Out $end
$var wire 1 M' AB $end
$var wire 1 N' CD $end

$scope module muxAB $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 N S $end
$var wire 1 M' Out $end
$var wire 1 O' S_n $end
$var wire 1 P' As $end
$var wire 1 Q' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 O' out $end
$upscope $end

$scope module nandA $end
$var wire 1 \! in1 $end
$var wire 1 O' in2 $end
$var wire 1 P' out $end
$upscope $end

$scope module nandB $end
$var wire 1 l! in1 $end
$var wire 1 N in2 $end
$var wire 1 Q' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 P' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 M' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 |! InA $end
$var wire 1 ." InB $end
$var wire 1 N S $end
$var wire 1 N' Out $end
$var wire 1 R' S_n $end
$var wire 1 S' As $end
$var wire 1 T' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 R' out $end
$upscope $end

$scope module nandA $end
$var wire 1 |! in1 $end
$var wire 1 R' in2 $end
$var wire 1 S' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ." in1 $end
$var wire 1 N in2 $end
$var wire 1 T' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 S' in1 $end
$var wire 1 T' in2 $end
$var wire 1 N' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 M' InA $end
$var wire 1 N' InB $end
$var wire 1 M S $end
$var wire 1 E% Out $end
$var wire 1 U' S_n $end
$var wire 1 V' As $end
$var wire 1 W' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 U' out $end
$upscope $end

$scope module nandA $end
$var wire 1 M' in1 $end
$var wire 1 U' in2 $end
$var wire 1 V' out $end
$upscope $end

$scope module nandB $end
$var wire 1 N' in1 $end
$var wire 1 M in2 $end
$var wire 1 W' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 V' in1 $end
$var wire 1 W' in2 $end
$var wire 1 E% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 {! InC $end
$var wire 1 -" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 D% Out $end
$var wire 1 X' AB $end
$var wire 1 Y' CD $end

$scope module muxAB $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 N S $end
$var wire 1 X' Out $end
$var wire 1 Z' S_n $end
$var wire 1 [' As $end
$var wire 1 \' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Z' out $end
$upscope $end

$scope module nandA $end
$var wire 1 [! in1 $end
$var wire 1 Z' in2 $end
$var wire 1 [' out $end
$upscope $end

$scope module nandB $end
$var wire 1 k! in1 $end
$var wire 1 N in2 $end
$var wire 1 \' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [' in1 $end
$var wire 1 \' in2 $end
$var wire 1 X' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 {! InA $end
$var wire 1 -" InB $end
$var wire 1 N S $end
$var wire 1 Y' Out $end
$var wire 1 ]' S_n $end
$var wire 1 ^' As $end
$var wire 1 _' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ]' out $end
$upscope $end

$scope module nandA $end
$var wire 1 {! in1 $end
$var wire 1 ]' in2 $end
$var wire 1 ^' out $end
$upscope $end

$scope module nandB $end
$var wire 1 -" in1 $end
$var wire 1 N in2 $end
$var wire 1 _' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^' in1 $end
$var wire 1 _' in2 $end
$var wire 1 Y' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 X' InA $end
$var wire 1 Y' InB $end
$var wire 1 M S $end
$var wire 1 D% Out $end
$var wire 1 `' S_n $end
$var wire 1 a' As $end
$var wire 1 b' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 `' out $end
$upscope $end

$scope module nandA $end
$var wire 1 X' in1 $end
$var wire 1 `' in2 $end
$var wire 1 a' out $end
$upscope $end

$scope module nandB $end
$var wire 1 Y' in1 $end
$var wire 1 M in2 $end
$var wire 1 b' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a' in1 $end
$var wire 1 b' in2 $end
$var wire 1 D% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 z! InC $end
$var wire 1 ," InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 C% Out $end
$var wire 1 c' AB $end
$var wire 1 d' CD $end

$scope module muxAB $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 N S $end
$var wire 1 c' Out $end
$var wire 1 e' S_n $end
$var wire 1 f' As $end
$var wire 1 g' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 e' out $end
$upscope $end

$scope module nandA $end
$var wire 1 Z! in1 $end
$var wire 1 e' in2 $end
$var wire 1 f' out $end
$upscope $end

$scope module nandB $end
$var wire 1 j! in1 $end
$var wire 1 N in2 $end
$var wire 1 g' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f' in1 $end
$var wire 1 g' in2 $end
$var wire 1 c' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 z! InA $end
$var wire 1 ," InB $end
$var wire 1 N S $end
$var wire 1 d' Out $end
$var wire 1 h' S_n $end
$var wire 1 i' As $end
$var wire 1 j' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 h' out $end
$upscope $end

$scope module nandA $end
$var wire 1 z! in1 $end
$var wire 1 h' in2 $end
$var wire 1 i' out $end
$upscope $end

$scope module nandB $end
$var wire 1 ," in1 $end
$var wire 1 N in2 $end
$var wire 1 j' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i' in1 $end
$var wire 1 j' in2 $end
$var wire 1 d' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 c' InA $end
$var wire 1 d' InB $end
$var wire 1 M S $end
$var wire 1 C% Out $end
$var wire 1 k' S_n $end
$var wire 1 l' As $end
$var wire 1 m' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 k' out $end
$upscope $end

$scope module nandA $end
$var wire 1 c' in1 $end
$var wire 1 k' in2 $end
$var wire 1 l' out $end
$upscope $end

$scope module nandB $end
$var wire 1 d' in1 $end
$var wire 1 M in2 $end
$var wire 1 m' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l' in1 $end
$var wire 1 m' in2 $end
$var wire 1 C% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 V! InA [3] $end
$var wire 1 W! InA [2] $end
$var wire 1 X! InA [1] $end
$var wire 1 Y! InA [0] $end
$var wire 1 f! InB [3] $end
$var wire 1 g! InB [2] $end
$var wire 1 h! InB [1] $end
$var wire 1 i! InB [0] $end
$var wire 1 v! InC [3] $end
$var wire 1 w! InC [2] $end
$var wire 1 x! InC [1] $end
$var wire 1 y! InC [0] $end
$var wire 1 (" InD [3] $end
$var wire 1 )" InD [2] $end
$var wire 1 *" InD [1] $end
$var wire 1 +" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ?% Out [3] $end
$var wire 1 @% Out [2] $end
$var wire 1 A% Out [1] $end
$var wire 1 B% Out [0] $end

$scope module mux0 $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 y! InC $end
$var wire 1 +" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 B% Out $end
$var wire 1 o' AB $end
$var wire 1 p' CD $end

$scope module muxAB $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 N S $end
$var wire 1 o' Out $end
$var wire 1 q' S_n $end
$var wire 1 r' As $end
$var wire 1 s' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 q' out $end
$upscope $end

$scope module nandA $end
$var wire 1 Y! in1 $end
$var wire 1 q' in2 $end
$var wire 1 r' out $end
$upscope $end

$scope module nandB $end
$var wire 1 i! in1 $end
$var wire 1 N in2 $end
$var wire 1 s' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 r' in1 $end
$var wire 1 s' in2 $end
$var wire 1 o' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 y! InA $end
$var wire 1 +" InB $end
$var wire 1 N S $end
$var wire 1 p' Out $end
$var wire 1 t' S_n $end
$var wire 1 u' As $end
$var wire 1 v' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 t' out $end
$upscope $end

$scope module nandA $end
$var wire 1 y! in1 $end
$var wire 1 t' in2 $end
$var wire 1 u' out $end
$upscope $end

$scope module nandB $end
$var wire 1 +" in1 $end
$var wire 1 N in2 $end
$var wire 1 v' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u' in1 $end
$var wire 1 v' in2 $end
$var wire 1 p' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 o' InA $end
$var wire 1 p' InB $end
$var wire 1 M S $end
$var wire 1 B% Out $end
$var wire 1 w' S_n $end
$var wire 1 x' As $end
$var wire 1 y' Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 w' out $end
$upscope $end

$scope module nandA $end
$var wire 1 o' in1 $end
$var wire 1 w' in2 $end
$var wire 1 x' out $end
$upscope $end

$scope module nandB $end
$var wire 1 p' in1 $end
$var wire 1 M in2 $end
$var wire 1 y' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x' in1 $end
$var wire 1 y' in2 $end
$var wire 1 B% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 x! InC $end
$var wire 1 *" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 A% Out $end
$var wire 1 z' AB $end
$var wire 1 {' CD $end

$scope module muxAB $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 N S $end
$var wire 1 z' Out $end
$var wire 1 |' S_n $end
$var wire 1 }' As $end
$var wire 1 ~' Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 |' out $end
$upscope $end

$scope module nandA $end
$var wire 1 X! in1 $end
$var wire 1 |' in2 $end
$var wire 1 }' out $end
$upscope $end

$scope module nandB $end
$var wire 1 h! in1 $end
$var wire 1 N in2 $end
$var wire 1 ~' out $end
$upscope $end

$scope module nandOut $end
$var wire 1 }' in1 $end
$var wire 1 ~' in2 $end
$var wire 1 z' out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 x! InA $end
$var wire 1 *" InB $end
$var wire 1 N S $end
$var wire 1 {' Out $end
$var wire 1 !( S_n $end
$var wire 1 "( As $end
$var wire 1 #( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 !( out $end
$upscope $end

$scope module nandA $end
$var wire 1 x! in1 $end
$var wire 1 !( in2 $end
$var wire 1 "( out $end
$upscope $end

$scope module nandB $end
$var wire 1 *" in1 $end
$var wire 1 N in2 $end
$var wire 1 #( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "( in1 $end
$var wire 1 #( in2 $end
$var wire 1 {' out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 z' InA $end
$var wire 1 {' InB $end
$var wire 1 M S $end
$var wire 1 A% Out $end
$var wire 1 $( S_n $end
$var wire 1 %( As $end
$var wire 1 &( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 $( out $end
$upscope $end

$scope module nandA $end
$var wire 1 z' in1 $end
$var wire 1 $( in2 $end
$var wire 1 %( out $end
$upscope $end

$scope module nandB $end
$var wire 1 {' in1 $end
$var wire 1 M in2 $end
$var wire 1 &( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %( in1 $end
$var wire 1 &( in2 $end
$var wire 1 A% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 w! InC $end
$var wire 1 )" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 @% Out $end
$var wire 1 '( AB $end
$var wire 1 (( CD $end

$scope module muxAB $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 N S $end
$var wire 1 '( Out $end
$var wire 1 )( S_n $end
$var wire 1 *( As $end
$var wire 1 +( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 )( out $end
$upscope $end

$scope module nandA $end
$var wire 1 W! in1 $end
$var wire 1 )( in2 $end
$var wire 1 *( out $end
$upscope $end

$scope module nandB $end
$var wire 1 g! in1 $end
$var wire 1 N in2 $end
$var wire 1 +( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *( in1 $end
$var wire 1 +( in2 $end
$var wire 1 '( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 w! InA $end
$var wire 1 )" InB $end
$var wire 1 N S $end
$var wire 1 (( Out $end
$var wire 1 ,( S_n $end
$var wire 1 -( As $end
$var wire 1 .( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 ,( out $end
$upscope $end

$scope module nandA $end
$var wire 1 w! in1 $end
$var wire 1 ,( in2 $end
$var wire 1 -( out $end
$upscope $end

$scope module nandB $end
$var wire 1 )" in1 $end
$var wire 1 N in2 $end
$var wire 1 .( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -( in1 $end
$var wire 1 .( in2 $end
$var wire 1 (( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 '( InA $end
$var wire 1 (( InB $end
$var wire 1 M S $end
$var wire 1 @% Out $end
$var wire 1 /( S_n $end
$var wire 1 0( As $end
$var wire 1 1( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 /( out $end
$upscope $end

$scope module nandA $end
$var wire 1 '( in1 $end
$var wire 1 /( in2 $end
$var wire 1 0( out $end
$upscope $end

$scope module nandB $end
$var wire 1 (( in1 $end
$var wire 1 M in2 $end
$var wire 1 1( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0( in1 $end
$var wire 1 1( in2 $end
$var wire 1 @% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 v! InC $end
$var wire 1 (" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ?% Out $end
$var wire 1 2( AB $end
$var wire 1 3( CD $end

$scope module muxAB $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 N S $end
$var wire 1 2( Out $end
$var wire 1 4( S_n $end
$var wire 1 5( As $end
$var wire 1 6( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 4( out $end
$upscope $end

$scope module nandA $end
$var wire 1 V! in1 $end
$var wire 1 4( in2 $end
$var wire 1 5( out $end
$upscope $end

$scope module nandB $end
$var wire 1 f! in1 $end
$var wire 1 N in2 $end
$var wire 1 6( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5( in1 $end
$var wire 1 6( in2 $end
$var wire 1 2( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 v! InA $end
$var wire 1 (" InB $end
$var wire 1 N S $end
$var wire 1 3( Out $end
$var wire 1 7( S_n $end
$var wire 1 8( As $end
$var wire 1 9( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 7( out $end
$upscope $end

$scope module nandA $end
$var wire 1 v! in1 $end
$var wire 1 7( in2 $end
$var wire 1 8( out $end
$upscope $end

$scope module nandB $end
$var wire 1 (" in1 $end
$var wire 1 N in2 $end
$var wire 1 9( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8( in1 $end
$var wire 1 9( in2 $end
$var wire 1 3( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 2( InA $end
$var wire 1 3( InB $end
$var wire 1 M S $end
$var wire 1 ?% Out $end
$var wire 1 :( S_n $end
$var wire 1 ;( As $end
$var wire 1 <( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 :( out $end
$upscope $end

$scope module nandA $end
$var wire 1 2( in1 $end
$var wire 1 :( in2 $end
$var wire 1 ;( out $end
$upscope $end

$scope module nandB $end
$var wire 1 3( in1 $end
$var wire 1 M in2 $end
$var wire 1 <( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;( in1 $end
$var wire 1 <( in2 $end
$var wire 1 ?% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 R! InA [3] $end
$var wire 1 S! InA [2] $end
$var wire 1 T! InA [1] $end
$var wire 1 U! InA [0] $end
$var wire 1 b! InB [3] $end
$var wire 1 c! InB [2] $end
$var wire 1 d! InB [1] $end
$var wire 1 e! InB [0] $end
$var wire 1 r! InC [3] $end
$var wire 1 s! InC [2] $end
$var wire 1 t! InC [1] $end
$var wire 1 u! InC [0] $end
$var wire 1 $" InD [3] $end
$var wire 1 %" InD [2] $end
$var wire 1 &" InD [1] $end
$var wire 1 '" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ;% Out [3] $end
$var wire 1 <% Out [2] $end
$var wire 1 =% Out [1] $end
$var wire 1 >% Out [0] $end

$scope module mux0 $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 u! InC $end
$var wire 1 '" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 >% Out $end
$var wire 1 >( AB $end
$var wire 1 ?( CD $end

$scope module muxAB $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 N S $end
$var wire 1 >( Out $end
$var wire 1 @( S_n $end
$var wire 1 A( As $end
$var wire 1 B( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 @( out $end
$upscope $end

$scope module nandA $end
$var wire 1 U! in1 $end
$var wire 1 @( in2 $end
$var wire 1 A( out $end
$upscope $end

$scope module nandB $end
$var wire 1 e! in1 $end
$var wire 1 N in2 $end
$var wire 1 B( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 A( in1 $end
$var wire 1 B( in2 $end
$var wire 1 >( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 u! InA $end
$var wire 1 '" InB $end
$var wire 1 N S $end
$var wire 1 ?( Out $end
$var wire 1 C( S_n $end
$var wire 1 D( As $end
$var wire 1 E( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 C( out $end
$upscope $end

$scope module nandA $end
$var wire 1 u! in1 $end
$var wire 1 C( in2 $end
$var wire 1 D( out $end
$upscope $end

$scope module nandB $end
$var wire 1 '" in1 $end
$var wire 1 N in2 $end
$var wire 1 E( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D( in1 $end
$var wire 1 E( in2 $end
$var wire 1 ?( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 >( InA $end
$var wire 1 ?( InB $end
$var wire 1 M S $end
$var wire 1 >% Out $end
$var wire 1 F( S_n $end
$var wire 1 G( As $end
$var wire 1 H( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 F( out $end
$upscope $end

$scope module nandA $end
$var wire 1 >( in1 $end
$var wire 1 F( in2 $end
$var wire 1 G( out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?( in1 $end
$var wire 1 M in2 $end
$var wire 1 H( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G( in1 $end
$var wire 1 H( in2 $end
$var wire 1 >% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 t! InC $end
$var wire 1 &" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 =% Out $end
$var wire 1 I( AB $end
$var wire 1 J( CD $end

$scope module muxAB $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 N S $end
$var wire 1 I( Out $end
$var wire 1 K( S_n $end
$var wire 1 L( As $end
$var wire 1 M( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 K( out $end
$upscope $end

$scope module nandA $end
$var wire 1 T! in1 $end
$var wire 1 K( in2 $end
$var wire 1 L( out $end
$upscope $end

$scope module nandB $end
$var wire 1 d! in1 $end
$var wire 1 N in2 $end
$var wire 1 M( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 L( in1 $end
$var wire 1 M( in2 $end
$var wire 1 I( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 t! InA $end
$var wire 1 &" InB $end
$var wire 1 N S $end
$var wire 1 J( Out $end
$var wire 1 N( S_n $end
$var wire 1 O( As $end
$var wire 1 P( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 N( out $end
$upscope $end

$scope module nandA $end
$var wire 1 t! in1 $end
$var wire 1 N( in2 $end
$var wire 1 O( out $end
$upscope $end

$scope module nandB $end
$var wire 1 &" in1 $end
$var wire 1 N in2 $end
$var wire 1 P( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O( in1 $end
$var wire 1 P( in2 $end
$var wire 1 J( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 I( InA $end
$var wire 1 J( InB $end
$var wire 1 M S $end
$var wire 1 =% Out $end
$var wire 1 Q( S_n $end
$var wire 1 R( As $end
$var wire 1 S( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 Q( out $end
$upscope $end

$scope module nandA $end
$var wire 1 I( in1 $end
$var wire 1 Q( in2 $end
$var wire 1 R( out $end
$upscope $end

$scope module nandB $end
$var wire 1 J( in1 $end
$var wire 1 M in2 $end
$var wire 1 S( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R( in1 $end
$var wire 1 S( in2 $end
$var wire 1 =% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 s! InC $end
$var wire 1 %" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 <% Out $end
$var wire 1 T( AB $end
$var wire 1 U( CD $end

$scope module muxAB $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 N S $end
$var wire 1 T( Out $end
$var wire 1 V( S_n $end
$var wire 1 W( As $end
$var wire 1 X( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 V( out $end
$upscope $end

$scope module nandA $end
$var wire 1 S! in1 $end
$var wire 1 V( in2 $end
$var wire 1 W( out $end
$upscope $end

$scope module nandB $end
$var wire 1 c! in1 $end
$var wire 1 N in2 $end
$var wire 1 X( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W( in1 $end
$var wire 1 X( in2 $end
$var wire 1 T( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 s! InA $end
$var wire 1 %" InB $end
$var wire 1 N S $end
$var wire 1 U( Out $end
$var wire 1 Y( S_n $end
$var wire 1 Z( As $end
$var wire 1 [( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 Y( out $end
$upscope $end

$scope module nandA $end
$var wire 1 s! in1 $end
$var wire 1 Y( in2 $end
$var wire 1 Z( out $end
$upscope $end

$scope module nandB $end
$var wire 1 %" in1 $end
$var wire 1 N in2 $end
$var wire 1 [( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z( in1 $end
$var wire 1 [( in2 $end
$var wire 1 U( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 T( InA $end
$var wire 1 U( InB $end
$var wire 1 M S $end
$var wire 1 <% Out $end
$var wire 1 \( S_n $end
$var wire 1 ]( As $end
$var wire 1 ^( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 \( out $end
$upscope $end

$scope module nandA $end
$var wire 1 T( in1 $end
$var wire 1 \( in2 $end
$var wire 1 ]( out $end
$upscope $end

$scope module nandB $end
$var wire 1 U( in1 $end
$var wire 1 M in2 $end
$var wire 1 ^( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ]( in1 $end
$var wire 1 ^( in2 $end
$var wire 1 <% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 r! InC $end
$var wire 1 $" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 ;% Out $end
$var wire 1 _( AB $end
$var wire 1 `( CD $end

$scope module muxAB $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 N S $end
$var wire 1 _( Out $end
$var wire 1 a( S_n $end
$var wire 1 b( As $end
$var wire 1 c( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 a( out $end
$upscope $end

$scope module nandA $end
$var wire 1 R! in1 $end
$var wire 1 a( in2 $end
$var wire 1 b( out $end
$upscope $end

$scope module nandB $end
$var wire 1 b! in1 $end
$var wire 1 N in2 $end
$var wire 1 c( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b( in1 $end
$var wire 1 c( in2 $end
$var wire 1 _( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 r! InA $end
$var wire 1 $" InB $end
$var wire 1 N S $end
$var wire 1 `( Out $end
$var wire 1 d( S_n $end
$var wire 1 e( As $end
$var wire 1 f( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 d( out $end
$upscope $end

$scope module nandA $end
$var wire 1 r! in1 $end
$var wire 1 d( in2 $end
$var wire 1 e( out $end
$upscope $end

$scope module nandB $end
$var wire 1 $" in1 $end
$var wire 1 N in2 $end
$var wire 1 f( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e( in1 $end
$var wire 1 f( in2 $end
$var wire 1 `( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 _( InA $end
$var wire 1 `( InB $end
$var wire 1 M S $end
$var wire 1 ;% Out $end
$var wire 1 g( S_n $end
$var wire 1 h( As $end
$var wire 1 i( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 g( out $end
$upscope $end

$scope module nandA $end
$var wire 1 _( in1 $end
$var wire 1 g( in2 $end
$var wire 1 h( out $end
$upscope $end

$scope module nandB $end
$var wire 1 `( in1 $end
$var wire 1 M in2 $end
$var wire 1 i( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 h( in1 $end
$var wire 1 i( in2 $end
$var wire 1 ;% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA [3] $end
$var wire 1 O! InA [2] $end
$var wire 1 P! InA [1] $end
$var wire 1 Q! InA [0] $end
$var wire 1 ^! InB [3] $end
$var wire 1 _! InB [2] $end
$var wire 1 `! InB [1] $end
$var wire 1 a! InB [0] $end
$var wire 1 n! InC [3] $end
$var wire 1 o! InC [2] $end
$var wire 1 p! InC [1] $end
$var wire 1 q! InC [0] $end
$var wire 1 ~! InD [3] $end
$var wire 1 !" InD [2] $end
$var wire 1 "" InD [1] $end
$var wire 1 #" InD [0] $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out [3] $end
$var wire 1 8% Out [2] $end
$var wire 1 9% Out [1] $end
$var wire 1 :% Out [0] $end

$scope module mux0 $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 q! InC $end
$var wire 1 #" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 :% Out $end
$var wire 1 k( AB $end
$var wire 1 l( CD $end

$scope module muxAB $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 N S $end
$var wire 1 k( Out $end
$var wire 1 m( S_n $end
$var wire 1 n( As $end
$var wire 1 o( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 m( out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q! in1 $end
$var wire 1 m( in2 $end
$var wire 1 n( out $end
$upscope $end

$scope module nandB $end
$var wire 1 a! in1 $end
$var wire 1 N in2 $end
$var wire 1 o( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 n( in1 $end
$var wire 1 o( in2 $end
$var wire 1 k( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 q! InA $end
$var wire 1 #" InB $end
$var wire 1 N S $end
$var wire 1 l( Out $end
$var wire 1 p( S_n $end
$var wire 1 q( As $end
$var wire 1 r( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 p( out $end
$upscope $end

$scope module nandA $end
$var wire 1 q! in1 $end
$var wire 1 p( in2 $end
$var wire 1 q( out $end
$upscope $end

$scope module nandB $end
$var wire 1 #" in1 $end
$var wire 1 N in2 $end
$var wire 1 r( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q( in1 $end
$var wire 1 r( in2 $end
$var wire 1 l( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 k( InA $end
$var wire 1 l( InB $end
$var wire 1 M S $end
$var wire 1 :% Out $end
$var wire 1 s( S_n $end
$var wire 1 t( As $end
$var wire 1 u( Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 s( out $end
$upscope $end

$scope module nandA $end
$var wire 1 k( in1 $end
$var wire 1 s( in2 $end
$var wire 1 t( out $end
$upscope $end

$scope module nandB $end
$var wire 1 l( in1 $end
$var wire 1 M in2 $end
$var wire 1 u( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t( in1 $end
$var wire 1 u( in2 $end
$var wire 1 :% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 p! InC $end
$var wire 1 "" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 9% Out $end
$var wire 1 v( AB $end
$var wire 1 w( CD $end

$scope module muxAB $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 N S $end
$var wire 1 v( Out $end
$var wire 1 x( S_n $end
$var wire 1 y( As $end
$var wire 1 z( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 x( out $end
$upscope $end

$scope module nandA $end
$var wire 1 P! in1 $end
$var wire 1 x( in2 $end
$var wire 1 y( out $end
$upscope $end

$scope module nandB $end
$var wire 1 `! in1 $end
$var wire 1 N in2 $end
$var wire 1 z( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y( in1 $end
$var wire 1 z( in2 $end
$var wire 1 v( out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 p! InA $end
$var wire 1 "" InB $end
$var wire 1 N S $end
$var wire 1 w( Out $end
$var wire 1 {( S_n $end
$var wire 1 |( As $end
$var wire 1 }( Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 {( out $end
$upscope $end

$scope module nandA $end
$var wire 1 p! in1 $end
$var wire 1 {( in2 $end
$var wire 1 |( out $end
$upscope $end

$scope module nandB $end
$var wire 1 "" in1 $end
$var wire 1 N in2 $end
$var wire 1 }( out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |( in1 $end
$var wire 1 }( in2 $end
$var wire 1 w( out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v( InA $end
$var wire 1 w( InB $end
$var wire 1 M S $end
$var wire 1 9% Out $end
$var wire 1 ~( S_n $end
$var wire 1 !) As $end
$var wire 1 ") Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 ~( out $end
$upscope $end

$scope module nandA $end
$var wire 1 v( in1 $end
$var wire 1 ~( in2 $end
$var wire 1 !) out $end
$upscope $end

$scope module nandB $end
$var wire 1 w( in1 $end
$var wire 1 M in2 $end
$var wire 1 ") out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !) in1 $end
$var wire 1 ") in2 $end
$var wire 1 9% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 o! InC $end
$var wire 1 !" InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 8% Out $end
$var wire 1 #) AB $end
$var wire 1 $) CD $end

$scope module muxAB $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 N S $end
$var wire 1 #) Out $end
$var wire 1 %) S_n $end
$var wire 1 &) As $end
$var wire 1 ') Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 %) out $end
$upscope $end

$scope module nandA $end
$var wire 1 O! in1 $end
$var wire 1 %) in2 $end
$var wire 1 &) out $end
$upscope $end

$scope module nandB $end
$var wire 1 _! in1 $end
$var wire 1 N in2 $end
$var wire 1 ') out $end
$upscope $end

$scope module nandOut $end
$var wire 1 &) in1 $end
$var wire 1 ') in2 $end
$var wire 1 #) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 o! InA $end
$var wire 1 !" InB $end
$var wire 1 N S $end
$var wire 1 $) Out $end
$var wire 1 () S_n $end
$var wire 1 )) As $end
$var wire 1 *) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 () out $end
$upscope $end

$scope module nandA $end
$var wire 1 o! in1 $end
$var wire 1 () in2 $end
$var wire 1 )) out $end
$upscope $end

$scope module nandB $end
$var wire 1 !" in1 $end
$var wire 1 N in2 $end
$var wire 1 *) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )) in1 $end
$var wire 1 *) in2 $end
$var wire 1 $) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 #) InA $end
$var wire 1 $) InB $end
$var wire 1 M S $end
$var wire 1 8% Out $end
$var wire 1 +) S_n $end
$var wire 1 ,) As $end
$var wire 1 -) Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 +) out $end
$upscope $end

$scope module nandA $end
$var wire 1 #) in1 $end
$var wire 1 +) in2 $end
$var wire 1 ,) out $end
$upscope $end

$scope module nandB $end
$var wire 1 $) in1 $end
$var wire 1 M in2 $end
$var wire 1 -) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ,) in1 $end
$var wire 1 -) in2 $end
$var wire 1 8% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 n! InC $end
$var wire 1 ~! InD $end
$var wire 1 M S [1] $end
$var wire 1 N S [0] $end
$var wire 1 7% Out $end
$var wire 1 .) AB $end
$var wire 1 /) CD $end

$scope module muxAB $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 N S $end
$var wire 1 .) Out $end
$var wire 1 0) S_n $end
$var wire 1 1) As $end
$var wire 1 2) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 0) out $end
$upscope $end

$scope module nandA $end
$var wire 1 N! in1 $end
$var wire 1 0) in2 $end
$var wire 1 1) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ^! in1 $end
$var wire 1 N in2 $end
$var wire 1 2) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1) in1 $end
$var wire 1 2) in2 $end
$var wire 1 .) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 n! InA $end
$var wire 1 ~! InB $end
$var wire 1 N S $end
$var wire 1 /) Out $end
$var wire 1 3) S_n $end
$var wire 1 4) As $end
$var wire 1 5) Bs $end

$scope module notSelect $end
$var wire 1 N in1 $end
$var wire 1 3) out $end
$upscope $end

$scope module nandA $end
$var wire 1 n! in1 $end
$var wire 1 3) in2 $end
$var wire 1 4) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~! in1 $end
$var wire 1 N in2 $end
$var wire 1 5) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4) in1 $end
$var wire 1 5) in2 $end
$var wire 1 /) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 .) InA $end
$var wire 1 /) InB $end
$var wire 1 M S $end
$var wire 1 7% Out $end
$var wire 1 6) S_n $end
$var wire 1 7) As $end
$var wire 1 8) Bs $end

$scope module notSelect $end
$var wire 1 M in1 $end
$var wire 1 6) out $end
$upscope $end

$scope module nandA $end
$var wire 1 .) in1 $end
$var wire 1 6) in2 $end
$var wire 1 7) out $end
$upscope $end

$scope module nandB $end
$var wire 1 /) in1 $end
$var wire 1 M in2 $end
$var wire 1 8) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 7) in1 $end
$var wire 1 8) in2 $end
$var wire 1 7% out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module read2Sel $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 N! InE [15] $end
$var wire 1 O! InE [14] $end
$var wire 1 P! InE [13] $end
$var wire 1 Q! InE [12] $end
$var wire 1 R! InE [11] $end
$var wire 1 S! InE [10] $end
$var wire 1 T! InE [9] $end
$var wire 1 U! InE [8] $end
$var wire 1 V! InE [7] $end
$var wire 1 W! InE [6] $end
$var wire 1 X! InE [5] $end
$var wire 1 Y! InE [4] $end
$var wire 1 Z! InE [3] $end
$var wire 1 [! InE [2] $end
$var wire 1 \! InE [1] $end
$var wire 1 ]! InE [0] $end
$var wire 1 ^! InF [15] $end
$var wire 1 _! InF [14] $end
$var wire 1 `! InF [13] $end
$var wire 1 a! InF [12] $end
$var wire 1 b! InF [11] $end
$var wire 1 c! InF [10] $end
$var wire 1 d! InF [9] $end
$var wire 1 e! InF [8] $end
$var wire 1 f! InF [7] $end
$var wire 1 g! InF [6] $end
$var wire 1 h! InF [5] $end
$var wire 1 i! InF [4] $end
$var wire 1 j! InF [3] $end
$var wire 1 k! InF [2] $end
$var wire 1 l! InF [1] $end
$var wire 1 m! InF [0] $end
$var wire 1 n! InG [15] $end
$var wire 1 o! InG [14] $end
$var wire 1 p! InG [13] $end
$var wire 1 q! InG [12] $end
$var wire 1 r! InG [11] $end
$var wire 1 s! InG [10] $end
$var wire 1 t! InG [9] $end
$var wire 1 u! InG [8] $end
$var wire 1 v! InG [7] $end
$var wire 1 w! InG [6] $end
$var wire 1 x! InG [5] $end
$var wire 1 y! InG [4] $end
$var wire 1 z! InG [3] $end
$var wire 1 {! InG [2] $end
$var wire 1 |! InG [1] $end
$var wire 1 }! InG [0] $end
$var wire 1 ~! InH [15] $end
$var wire 1 !" InH [14] $end
$var wire 1 "" InH [13] $end
$var wire 1 #" InH [12] $end
$var wire 1 $" InH [11] $end
$var wire 1 %" InH [10] $end
$var wire 1 &" InH [9] $end
$var wire 1 '" InH [8] $end
$var wire 1 (" InH [7] $end
$var wire 1 )" InH [6] $end
$var wire 1 *" InH [5] $end
$var wire 1 +" InH [4] $end
$var wire 1 ," InH [3] $end
$var wire 1 -" InH [2] $end
$var wire 1 ." InH [1] $end
$var wire 1 /" InH [0] $end
$var wire 1 O S [2] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 1 Out [15] $end
$var wire 1 2 Out [14] $end
$var wire 1 3 Out [13] $end
$var wire 1 4 Out [12] $end
$var wire 1 5 Out [11] $end
$var wire 1 6 Out [10] $end
$var wire 1 7 Out [9] $end
$var wire 1 8 Out [8] $end
$var wire 1 9 Out [7] $end
$var wire 1 : Out [6] $end
$var wire 1 ; Out [5] $end
$var wire 1 < Out [4] $end
$var wire 1 = Out [3] $end
$var wire 1 > Out [2] $end
$var wire 1 ? Out [1] $end
$var wire 1 @ Out [0] $end
$var wire 1 :) mux1out [15] $end
$var wire 1 ;) mux1out [14] $end
$var wire 1 <) mux1out [13] $end
$var wire 1 =) mux1out [12] $end
$var wire 1 >) mux1out [11] $end
$var wire 1 ?) mux1out [10] $end
$var wire 1 @) mux1out [9] $end
$var wire 1 A) mux1out [8] $end
$var wire 1 B) mux1out [7] $end
$var wire 1 C) mux1out [6] $end
$var wire 1 D) mux1out [5] $end
$var wire 1 E) mux1out [4] $end
$var wire 1 F) mux1out [3] $end
$var wire 1 G) mux1out [2] $end
$var wire 1 H) mux1out [1] $end
$var wire 1 I) mux1out [0] $end
$var wire 1 J) mux2out [15] $end
$var wire 1 K) mux2out [14] $end
$var wire 1 L) mux2out [13] $end
$var wire 1 M) mux2out [12] $end
$var wire 1 N) mux2out [11] $end
$var wire 1 O) mux2out [10] $end
$var wire 1 P) mux2out [9] $end
$var wire 1 Q) mux2out [8] $end
$var wire 1 R) mux2out [7] $end
$var wire 1 S) mux2out [6] $end
$var wire 1 T) mux2out [5] $end
$var wire 1 U) mux2out [4] $end
$var wire 1 V) mux2out [3] $end
$var wire 1 W) mux2out [2] $end
$var wire 1 X) mux2out [1] $end
$var wire 1 Y) mux2out [0] $end

$scope module mux0 $end
$var wire 1 l InA [15] $end
$var wire 1 m InA [14] $end
$var wire 1 n InA [13] $end
$var wire 1 o InA [12] $end
$var wire 1 p InA [11] $end
$var wire 1 q InA [10] $end
$var wire 1 r InA [9] $end
$var wire 1 s InA [8] $end
$var wire 1 t InA [7] $end
$var wire 1 u InA [6] $end
$var wire 1 v InA [5] $end
$var wire 1 w InA [4] $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 | InB [15] $end
$var wire 1 } InB [14] $end
$var wire 1 ~ InB [13] $end
$var wire 1 !! InB [12] $end
$var wire 1 "! InB [11] $end
$var wire 1 #! InB [10] $end
$var wire 1 $! InB [9] $end
$var wire 1 %! InB [8] $end
$var wire 1 &! InB [7] $end
$var wire 1 '! InB [6] $end
$var wire 1 (! InB [5] $end
$var wire 1 )! InB [4] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 .! InC [15] $end
$var wire 1 /! InC [14] $end
$var wire 1 0! InC [13] $end
$var wire 1 1! InC [12] $end
$var wire 1 2! InC [11] $end
$var wire 1 3! InC [10] $end
$var wire 1 4! InC [9] $end
$var wire 1 5! InC [8] $end
$var wire 1 6! InC [7] $end
$var wire 1 7! InC [6] $end
$var wire 1 8! InC [5] $end
$var wire 1 9! InC [4] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 >! InD [15] $end
$var wire 1 ?! InD [14] $end
$var wire 1 @! InD [13] $end
$var wire 1 A! InD [12] $end
$var wire 1 B! InD [11] $end
$var wire 1 C! InD [10] $end
$var wire 1 D! InD [9] $end
$var wire 1 E! InD [8] $end
$var wire 1 F! InD [7] $end
$var wire 1 G! InD [6] $end
$var wire 1 H! InD [5] $end
$var wire 1 I! InD [4] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out [15] $end
$var wire 1 ;) Out [14] $end
$var wire 1 <) Out [13] $end
$var wire 1 =) Out [12] $end
$var wire 1 >) Out [11] $end
$var wire 1 ?) Out [10] $end
$var wire 1 @) Out [9] $end
$var wire 1 A) Out [8] $end
$var wire 1 B) Out [7] $end
$var wire 1 C) Out [6] $end
$var wire 1 D) Out [5] $end
$var wire 1 E) Out [4] $end
$var wire 1 F) Out [3] $end
$var wire 1 G) Out [2] $end
$var wire 1 H) Out [1] $end
$var wire 1 I) Out [0] $end

$scope module mux0 $end
$var wire 1 x InA [3] $end
$var wire 1 y InA [2] $end
$var wire 1 z InA [1] $end
$var wire 1 { InA [0] $end
$var wire 1 *! InB [3] $end
$var wire 1 +! InB [2] $end
$var wire 1 ,! InB [1] $end
$var wire 1 -! InB [0] $end
$var wire 1 :! InC [3] $end
$var wire 1 ;! InC [2] $end
$var wire 1 <! InC [1] $end
$var wire 1 =! InC [0] $end
$var wire 1 J! InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 F) Out [3] $end
$var wire 1 G) Out [2] $end
$var wire 1 H) Out [1] $end
$var wire 1 I) Out [0] $end

$scope module mux0 $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 =! InC $end
$var wire 1 M! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 I) Out $end
$var wire 1 \) AB $end
$var wire 1 ]) CD $end

$scope module muxAB $end
$var wire 1 { InA $end
$var wire 1 -! InB $end
$var wire 1 Q S $end
$var wire 1 \) Out $end
$var wire 1 ^) S_n $end
$var wire 1 _) As $end
$var wire 1 `) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ^) out $end
$upscope $end

$scope module nandA $end
$var wire 1 { in1 $end
$var wire 1 ^) in2 $end
$var wire 1 _) out $end
$upscope $end

$scope module nandB $end
$var wire 1 -! in1 $end
$var wire 1 Q in2 $end
$var wire 1 `) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 _) in1 $end
$var wire 1 `) in2 $end
$var wire 1 \) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 =! InA $end
$var wire 1 M! InB $end
$var wire 1 Q S $end
$var wire 1 ]) Out $end
$var wire 1 a) S_n $end
$var wire 1 b) As $end
$var wire 1 c) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 a) out $end
$upscope $end

$scope module nandA $end
$var wire 1 =! in1 $end
$var wire 1 a) in2 $end
$var wire 1 b) out $end
$upscope $end

$scope module nandB $end
$var wire 1 M! in1 $end
$var wire 1 Q in2 $end
$var wire 1 c) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b) in1 $end
$var wire 1 c) in2 $end
$var wire 1 ]) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 \) InA $end
$var wire 1 ]) InB $end
$var wire 1 P S $end
$var wire 1 I) Out $end
$var wire 1 d) S_n $end
$var wire 1 e) As $end
$var wire 1 f) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 d) out $end
$upscope $end

$scope module nandA $end
$var wire 1 \) in1 $end
$var wire 1 d) in2 $end
$var wire 1 e) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ]) in1 $end
$var wire 1 P in2 $end
$var wire 1 f) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e) in1 $end
$var wire 1 f) in2 $end
$var wire 1 I) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 <! InC $end
$var wire 1 L! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 H) Out $end
$var wire 1 g) AB $end
$var wire 1 h) CD $end

$scope module muxAB $end
$var wire 1 z InA $end
$var wire 1 ,! InB $end
$var wire 1 Q S $end
$var wire 1 g) Out $end
$var wire 1 i) S_n $end
$var wire 1 j) As $end
$var wire 1 k) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 i) out $end
$upscope $end

$scope module nandA $end
$var wire 1 z in1 $end
$var wire 1 i) in2 $end
$var wire 1 j) out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,! in1 $end
$var wire 1 Q in2 $end
$var wire 1 k) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 j) in1 $end
$var wire 1 k) in2 $end
$var wire 1 g) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 <! InA $end
$var wire 1 L! InB $end
$var wire 1 Q S $end
$var wire 1 h) Out $end
$var wire 1 l) S_n $end
$var wire 1 m) As $end
$var wire 1 n) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 l) out $end
$upscope $end

$scope module nandA $end
$var wire 1 <! in1 $end
$var wire 1 l) in2 $end
$var wire 1 m) out $end
$upscope $end

$scope module nandB $end
$var wire 1 L! in1 $end
$var wire 1 Q in2 $end
$var wire 1 n) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m) in1 $end
$var wire 1 n) in2 $end
$var wire 1 h) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 g) InA $end
$var wire 1 h) InB $end
$var wire 1 P S $end
$var wire 1 H) Out $end
$var wire 1 o) S_n $end
$var wire 1 p) As $end
$var wire 1 q) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 o) out $end
$upscope $end

$scope module nandA $end
$var wire 1 g) in1 $end
$var wire 1 o) in2 $end
$var wire 1 p) out $end
$upscope $end

$scope module nandB $end
$var wire 1 h) in1 $end
$var wire 1 P in2 $end
$var wire 1 q) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p) in1 $end
$var wire 1 q) in2 $end
$var wire 1 H) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 ;! InC $end
$var wire 1 K! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 G) Out $end
$var wire 1 r) AB $end
$var wire 1 s) CD $end

$scope module muxAB $end
$var wire 1 y InA $end
$var wire 1 +! InB $end
$var wire 1 Q S $end
$var wire 1 r) Out $end
$var wire 1 t) S_n $end
$var wire 1 u) As $end
$var wire 1 v) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 t) out $end
$upscope $end

$scope module nandA $end
$var wire 1 y in1 $end
$var wire 1 t) in2 $end
$var wire 1 u) out $end
$upscope $end

$scope module nandB $end
$var wire 1 +! in1 $end
$var wire 1 Q in2 $end
$var wire 1 v) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u) in1 $end
$var wire 1 v) in2 $end
$var wire 1 r) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 ;! InA $end
$var wire 1 K! InB $end
$var wire 1 Q S $end
$var wire 1 s) Out $end
$var wire 1 w) S_n $end
$var wire 1 x) As $end
$var wire 1 y) Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 w) out $end
$upscope $end

$scope module nandA $end
$var wire 1 ;! in1 $end
$var wire 1 w) in2 $end
$var wire 1 x) out $end
$upscope $end

$scope module nandB $end
$var wire 1 K! in1 $end
$var wire 1 Q in2 $end
$var wire 1 y) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x) in1 $end
$var wire 1 y) in2 $end
$var wire 1 s) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r) InA $end
$var wire 1 s) InB $end
$var wire 1 P S $end
$var wire 1 G) Out $end
$var wire 1 z) S_n $end
$var wire 1 {) As $end
$var wire 1 |) Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 z) out $end
$upscope $end

$scope module nandA $end
$var wire 1 r) in1 $end
$var wire 1 z) in2 $end
$var wire 1 {) out $end
$upscope $end

$scope module nandB $end
$var wire 1 s) in1 $end
$var wire 1 P in2 $end
$var wire 1 |) out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {) in1 $end
$var wire 1 |) in2 $end
$var wire 1 G) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 :! InC $end
$var wire 1 J! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 F) Out $end
$var wire 1 }) AB $end
$var wire 1 ~) CD $end

$scope module muxAB $end
$var wire 1 x InA $end
$var wire 1 *! InB $end
$var wire 1 Q S $end
$var wire 1 }) Out $end
$var wire 1 !* S_n $end
$var wire 1 "* As $end
$var wire 1 #* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 !* out $end
$upscope $end

$scope module nandA $end
$var wire 1 x in1 $end
$var wire 1 !* in2 $end
$var wire 1 "* out $end
$upscope $end

$scope module nandB $end
$var wire 1 *! in1 $end
$var wire 1 Q in2 $end
$var wire 1 #* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 "* in1 $end
$var wire 1 #* in2 $end
$var wire 1 }) out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 :! InA $end
$var wire 1 J! InB $end
$var wire 1 Q S $end
$var wire 1 ~) Out $end
$var wire 1 $* S_n $end
$var wire 1 %* As $end
$var wire 1 &* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 $* out $end
$upscope $end

$scope module nandA $end
$var wire 1 :! in1 $end
$var wire 1 $* in2 $end
$var wire 1 %* out $end
$upscope $end

$scope module nandB $end
$var wire 1 J! in1 $end
$var wire 1 Q in2 $end
$var wire 1 &* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 %* in1 $end
$var wire 1 &* in2 $end
$var wire 1 ~) out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 }) InA $end
$var wire 1 ~) InB $end
$var wire 1 P S $end
$var wire 1 F) Out $end
$var wire 1 '* S_n $end
$var wire 1 (* As $end
$var wire 1 )* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 '* out $end
$upscope $end

$scope module nandA $end
$var wire 1 }) in1 $end
$var wire 1 '* in2 $end
$var wire 1 (* out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~) in1 $end
$var wire 1 P in2 $end
$var wire 1 )* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 (* in1 $end
$var wire 1 )* in2 $end
$var wire 1 F) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 t InA [3] $end
$var wire 1 u InA [2] $end
$var wire 1 v InA [1] $end
$var wire 1 w InA [0] $end
$var wire 1 &! InB [3] $end
$var wire 1 '! InB [2] $end
$var wire 1 (! InB [1] $end
$var wire 1 )! InB [0] $end
$var wire 1 6! InC [3] $end
$var wire 1 7! InC [2] $end
$var wire 1 8! InC [1] $end
$var wire 1 9! InC [0] $end
$var wire 1 F! InD [3] $end
$var wire 1 G! InD [2] $end
$var wire 1 H! InD [1] $end
$var wire 1 I! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 B) Out [3] $end
$var wire 1 C) Out [2] $end
$var wire 1 D) Out [1] $end
$var wire 1 E) Out [0] $end

$scope module mux0 $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 9! InC $end
$var wire 1 I! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 E) Out $end
$var wire 1 +* AB $end
$var wire 1 ,* CD $end

$scope module muxAB $end
$var wire 1 w InA $end
$var wire 1 )! InB $end
$var wire 1 Q S $end
$var wire 1 +* Out $end
$var wire 1 -* S_n $end
$var wire 1 .* As $end
$var wire 1 /* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 -* out $end
$upscope $end

$scope module nandA $end
$var wire 1 w in1 $end
$var wire 1 -* in2 $end
$var wire 1 .* out $end
$upscope $end

$scope module nandB $end
$var wire 1 )! in1 $end
$var wire 1 Q in2 $end
$var wire 1 /* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 .* in1 $end
$var wire 1 /* in2 $end
$var wire 1 +* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 9! InA $end
$var wire 1 I! InB $end
$var wire 1 Q S $end
$var wire 1 ,* Out $end
$var wire 1 0* S_n $end
$var wire 1 1* As $end
$var wire 1 2* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 0* out $end
$upscope $end

$scope module nandA $end
$var wire 1 9! in1 $end
$var wire 1 0* in2 $end
$var wire 1 1* out $end
$upscope $end

$scope module nandB $end
$var wire 1 I! in1 $end
$var wire 1 Q in2 $end
$var wire 1 2* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1* in1 $end
$var wire 1 2* in2 $end
$var wire 1 ,* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 +* InA $end
$var wire 1 ,* InB $end
$var wire 1 P S $end
$var wire 1 E) Out $end
$var wire 1 3* S_n $end
$var wire 1 4* As $end
$var wire 1 5* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 3* out $end
$upscope $end

$scope module nandA $end
$var wire 1 +* in1 $end
$var wire 1 3* in2 $end
$var wire 1 4* out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,* in1 $end
$var wire 1 P in2 $end
$var wire 1 5* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4* in1 $end
$var wire 1 5* in2 $end
$var wire 1 E) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 8! InC $end
$var wire 1 H! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 D) Out $end
$var wire 1 6* AB $end
$var wire 1 7* CD $end

$scope module muxAB $end
$var wire 1 v InA $end
$var wire 1 (! InB $end
$var wire 1 Q S $end
$var wire 1 6* Out $end
$var wire 1 8* S_n $end
$var wire 1 9* As $end
$var wire 1 :* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 8* out $end
$upscope $end

$scope module nandA $end
$var wire 1 v in1 $end
$var wire 1 8* in2 $end
$var wire 1 9* out $end
$upscope $end

$scope module nandB $end
$var wire 1 (! in1 $end
$var wire 1 Q in2 $end
$var wire 1 :* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 9* in1 $end
$var wire 1 :* in2 $end
$var wire 1 6* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 8! InA $end
$var wire 1 H! InB $end
$var wire 1 Q S $end
$var wire 1 7* Out $end
$var wire 1 ;* S_n $end
$var wire 1 <* As $end
$var wire 1 =* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ;* out $end
$upscope $end

$scope module nandA $end
$var wire 1 8! in1 $end
$var wire 1 ;* in2 $end
$var wire 1 <* out $end
$upscope $end

$scope module nandB $end
$var wire 1 H! in1 $end
$var wire 1 Q in2 $end
$var wire 1 =* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <* in1 $end
$var wire 1 =* in2 $end
$var wire 1 7* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 6* InA $end
$var wire 1 7* InB $end
$var wire 1 P S $end
$var wire 1 D) Out $end
$var wire 1 >* S_n $end
$var wire 1 ?* As $end
$var wire 1 @* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 >* out $end
$upscope $end

$scope module nandA $end
$var wire 1 6* in1 $end
$var wire 1 >* in2 $end
$var wire 1 ?* out $end
$upscope $end

$scope module nandB $end
$var wire 1 7* in1 $end
$var wire 1 P in2 $end
$var wire 1 @* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?* in1 $end
$var wire 1 @* in2 $end
$var wire 1 D) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 7! InC $end
$var wire 1 G! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 C) Out $end
$var wire 1 A* AB $end
$var wire 1 B* CD $end

$scope module muxAB $end
$var wire 1 u InA $end
$var wire 1 '! InB $end
$var wire 1 Q S $end
$var wire 1 A* Out $end
$var wire 1 C* S_n $end
$var wire 1 D* As $end
$var wire 1 E* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 C* out $end
$upscope $end

$scope module nandA $end
$var wire 1 u in1 $end
$var wire 1 C* in2 $end
$var wire 1 D* out $end
$upscope $end

$scope module nandB $end
$var wire 1 '! in1 $end
$var wire 1 Q in2 $end
$var wire 1 E* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D* in1 $end
$var wire 1 E* in2 $end
$var wire 1 A* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 7! InA $end
$var wire 1 G! InB $end
$var wire 1 Q S $end
$var wire 1 B* Out $end
$var wire 1 F* S_n $end
$var wire 1 G* As $end
$var wire 1 H* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 F* out $end
$upscope $end

$scope module nandA $end
$var wire 1 7! in1 $end
$var wire 1 F* in2 $end
$var wire 1 G* out $end
$upscope $end

$scope module nandB $end
$var wire 1 G! in1 $end
$var wire 1 Q in2 $end
$var wire 1 H* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G* in1 $end
$var wire 1 H* in2 $end
$var wire 1 B* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 A* InA $end
$var wire 1 B* InB $end
$var wire 1 P S $end
$var wire 1 C) Out $end
$var wire 1 I* S_n $end
$var wire 1 J* As $end
$var wire 1 K* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 I* out $end
$upscope $end

$scope module nandA $end
$var wire 1 A* in1 $end
$var wire 1 I* in2 $end
$var wire 1 J* out $end
$upscope $end

$scope module nandB $end
$var wire 1 B* in1 $end
$var wire 1 P in2 $end
$var wire 1 K* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 J* in1 $end
$var wire 1 K* in2 $end
$var wire 1 C) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 6! InC $end
$var wire 1 F! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 B) Out $end
$var wire 1 L* AB $end
$var wire 1 M* CD $end

$scope module muxAB $end
$var wire 1 t InA $end
$var wire 1 &! InB $end
$var wire 1 Q S $end
$var wire 1 L* Out $end
$var wire 1 N* S_n $end
$var wire 1 O* As $end
$var wire 1 P* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 N* out $end
$upscope $end

$scope module nandA $end
$var wire 1 t in1 $end
$var wire 1 N* in2 $end
$var wire 1 O* out $end
$upscope $end

$scope module nandB $end
$var wire 1 &! in1 $end
$var wire 1 Q in2 $end
$var wire 1 P* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 O* in1 $end
$var wire 1 P* in2 $end
$var wire 1 L* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 6! InA $end
$var wire 1 F! InB $end
$var wire 1 Q S $end
$var wire 1 M* Out $end
$var wire 1 Q* S_n $end
$var wire 1 R* As $end
$var wire 1 S* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Q* out $end
$upscope $end

$scope module nandA $end
$var wire 1 6! in1 $end
$var wire 1 Q* in2 $end
$var wire 1 R* out $end
$upscope $end

$scope module nandB $end
$var wire 1 F! in1 $end
$var wire 1 Q in2 $end
$var wire 1 S* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 R* in1 $end
$var wire 1 S* in2 $end
$var wire 1 M* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 L* InA $end
$var wire 1 M* InB $end
$var wire 1 P S $end
$var wire 1 B) Out $end
$var wire 1 T* S_n $end
$var wire 1 U* As $end
$var wire 1 V* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 T* out $end
$upscope $end

$scope module nandA $end
$var wire 1 L* in1 $end
$var wire 1 T* in2 $end
$var wire 1 U* out $end
$upscope $end

$scope module nandB $end
$var wire 1 M* in1 $end
$var wire 1 P in2 $end
$var wire 1 V* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 U* in1 $end
$var wire 1 V* in2 $end
$var wire 1 B) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 p InA [3] $end
$var wire 1 q InA [2] $end
$var wire 1 r InA [1] $end
$var wire 1 s InA [0] $end
$var wire 1 "! InB [3] $end
$var wire 1 #! InB [2] $end
$var wire 1 $! InB [1] $end
$var wire 1 %! InB [0] $end
$var wire 1 2! InC [3] $end
$var wire 1 3! InC [2] $end
$var wire 1 4! InC [1] $end
$var wire 1 5! InC [0] $end
$var wire 1 B! InD [3] $end
$var wire 1 C! InD [2] $end
$var wire 1 D! InD [1] $end
$var wire 1 E! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 >) Out [3] $end
$var wire 1 ?) Out [2] $end
$var wire 1 @) Out [1] $end
$var wire 1 A) Out [0] $end

$scope module mux0 $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 5! InC $end
$var wire 1 E! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 A) Out $end
$var wire 1 X* AB $end
$var wire 1 Y* CD $end

$scope module muxAB $end
$var wire 1 s InA $end
$var wire 1 %! InB $end
$var wire 1 Q S $end
$var wire 1 X* Out $end
$var wire 1 Z* S_n $end
$var wire 1 [* As $end
$var wire 1 \* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Z* out $end
$upscope $end

$scope module nandA $end
$var wire 1 s in1 $end
$var wire 1 Z* in2 $end
$var wire 1 [* out $end
$upscope $end

$scope module nandB $end
$var wire 1 %! in1 $end
$var wire 1 Q in2 $end
$var wire 1 \* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [* in1 $end
$var wire 1 \* in2 $end
$var wire 1 X* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 5! InA $end
$var wire 1 E! InB $end
$var wire 1 Q S $end
$var wire 1 Y* Out $end
$var wire 1 ]* S_n $end
$var wire 1 ^* As $end
$var wire 1 _* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ]* out $end
$upscope $end

$scope module nandA $end
$var wire 1 5! in1 $end
$var wire 1 ]* in2 $end
$var wire 1 ^* out $end
$upscope $end

$scope module nandB $end
$var wire 1 E! in1 $end
$var wire 1 Q in2 $end
$var wire 1 _* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^* in1 $end
$var wire 1 _* in2 $end
$var wire 1 Y* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 X* InA $end
$var wire 1 Y* InB $end
$var wire 1 P S $end
$var wire 1 A) Out $end
$var wire 1 `* S_n $end
$var wire 1 a* As $end
$var wire 1 b* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 `* out $end
$upscope $end

$scope module nandA $end
$var wire 1 X* in1 $end
$var wire 1 `* in2 $end
$var wire 1 a* out $end
$upscope $end

$scope module nandB $end
$var wire 1 Y* in1 $end
$var wire 1 P in2 $end
$var wire 1 b* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 a* in1 $end
$var wire 1 b* in2 $end
$var wire 1 A) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 4! InC $end
$var wire 1 D! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 @) Out $end
$var wire 1 c* AB $end
$var wire 1 d* CD $end

$scope module muxAB $end
$var wire 1 r InA $end
$var wire 1 $! InB $end
$var wire 1 Q S $end
$var wire 1 c* Out $end
$var wire 1 e* S_n $end
$var wire 1 f* As $end
$var wire 1 g* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 e* out $end
$upscope $end

$scope module nandA $end
$var wire 1 r in1 $end
$var wire 1 e* in2 $end
$var wire 1 f* out $end
$upscope $end

$scope module nandB $end
$var wire 1 $! in1 $end
$var wire 1 Q in2 $end
$var wire 1 g* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f* in1 $end
$var wire 1 g* in2 $end
$var wire 1 c* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 4! InA $end
$var wire 1 D! InB $end
$var wire 1 Q S $end
$var wire 1 d* Out $end
$var wire 1 h* S_n $end
$var wire 1 i* As $end
$var wire 1 j* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 h* out $end
$upscope $end

$scope module nandA $end
$var wire 1 4! in1 $end
$var wire 1 h* in2 $end
$var wire 1 i* out $end
$upscope $end

$scope module nandB $end
$var wire 1 D! in1 $end
$var wire 1 Q in2 $end
$var wire 1 j* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i* in1 $end
$var wire 1 j* in2 $end
$var wire 1 d* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 c* InA $end
$var wire 1 d* InB $end
$var wire 1 P S $end
$var wire 1 @) Out $end
$var wire 1 k* S_n $end
$var wire 1 l* As $end
$var wire 1 m* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 k* out $end
$upscope $end

$scope module nandA $end
$var wire 1 c* in1 $end
$var wire 1 k* in2 $end
$var wire 1 l* out $end
$upscope $end

$scope module nandB $end
$var wire 1 d* in1 $end
$var wire 1 P in2 $end
$var wire 1 m* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 l* in1 $end
$var wire 1 m* in2 $end
$var wire 1 @) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 3! InC $end
$var wire 1 C! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 ?) Out $end
$var wire 1 n* AB $end
$var wire 1 o* CD $end

$scope module muxAB $end
$var wire 1 q InA $end
$var wire 1 #! InB $end
$var wire 1 Q S $end
$var wire 1 n* Out $end
$var wire 1 p* S_n $end
$var wire 1 q* As $end
$var wire 1 r* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 p* out $end
$upscope $end

$scope module nandA $end
$var wire 1 q in1 $end
$var wire 1 p* in2 $end
$var wire 1 q* out $end
$upscope $end

$scope module nandB $end
$var wire 1 #! in1 $end
$var wire 1 Q in2 $end
$var wire 1 r* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q* in1 $end
$var wire 1 r* in2 $end
$var wire 1 n* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 3! InA $end
$var wire 1 C! InB $end
$var wire 1 Q S $end
$var wire 1 o* Out $end
$var wire 1 s* S_n $end
$var wire 1 t* As $end
$var wire 1 u* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 s* out $end
$upscope $end

$scope module nandA $end
$var wire 1 3! in1 $end
$var wire 1 s* in2 $end
$var wire 1 t* out $end
$upscope $end

$scope module nandB $end
$var wire 1 C! in1 $end
$var wire 1 Q in2 $end
$var wire 1 u* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t* in1 $end
$var wire 1 u* in2 $end
$var wire 1 o* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 n* InA $end
$var wire 1 o* InB $end
$var wire 1 P S $end
$var wire 1 ?) Out $end
$var wire 1 v* S_n $end
$var wire 1 w* As $end
$var wire 1 x* Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 v* out $end
$upscope $end

$scope module nandA $end
$var wire 1 n* in1 $end
$var wire 1 v* in2 $end
$var wire 1 w* out $end
$upscope $end

$scope module nandB $end
$var wire 1 o* in1 $end
$var wire 1 P in2 $end
$var wire 1 x* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 w* in1 $end
$var wire 1 x* in2 $end
$var wire 1 ?) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 2! InC $end
$var wire 1 B! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 >) Out $end
$var wire 1 y* AB $end
$var wire 1 z* CD $end

$scope module muxAB $end
$var wire 1 p InA $end
$var wire 1 "! InB $end
$var wire 1 Q S $end
$var wire 1 y* Out $end
$var wire 1 {* S_n $end
$var wire 1 |* As $end
$var wire 1 }* Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 {* out $end
$upscope $end

$scope module nandA $end
$var wire 1 p in1 $end
$var wire 1 {* in2 $end
$var wire 1 |* out $end
$upscope $end

$scope module nandB $end
$var wire 1 "! in1 $end
$var wire 1 Q in2 $end
$var wire 1 }* out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |* in1 $end
$var wire 1 }* in2 $end
$var wire 1 y* out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 2! InA $end
$var wire 1 B! InB $end
$var wire 1 Q S $end
$var wire 1 z* Out $end
$var wire 1 ~* S_n $end
$var wire 1 !+ As $end
$var wire 1 "+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ~* out $end
$upscope $end

$scope module nandA $end
$var wire 1 2! in1 $end
$var wire 1 ~* in2 $end
$var wire 1 !+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 B! in1 $end
$var wire 1 Q in2 $end
$var wire 1 "+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !+ in1 $end
$var wire 1 "+ in2 $end
$var wire 1 z* out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 y* InA $end
$var wire 1 z* InB $end
$var wire 1 P S $end
$var wire 1 >) Out $end
$var wire 1 #+ S_n $end
$var wire 1 $+ As $end
$var wire 1 %+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 #+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 y* in1 $end
$var wire 1 #+ in2 $end
$var wire 1 $+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 z* in1 $end
$var wire 1 P in2 $end
$var wire 1 %+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 $+ in1 $end
$var wire 1 %+ in2 $end
$var wire 1 >) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA [3] $end
$var wire 1 m InA [2] $end
$var wire 1 n InA [1] $end
$var wire 1 o InA [0] $end
$var wire 1 | InB [3] $end
$var wire 1 } InB [2] $end
$var wire 1 ~ InB [1] $end
$var wire 1 !! InB [0] $end
$var wire 1 .! InC [3] $end
$var wire 1 /! InC [2] $end
$var wire 1 0! InC [1] $end
$var wire 1 1! InC [0] $end
$var wire 1 >! InD [3] $end
$var wire 1 ?! InD [2] $end
$var wire 1 @! InD [1] $end
$var wire 1 A! InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out [3] $end
$var wire 1 ;) Out [2] $end
$var wire 1 <) Out [1] $end
$var wire 1 =) Out [0] $end

$scope module mux0 $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 1! InC $end
$var wire 1 A! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 =) Out $end
$var wire 1 '+ AB $end
$var wire 1 (+ CD $end

$scope module muxAB $end
$var wire 1 o InA $end
$var wire 1 !! InB $end
$var wire 1 Q S $end
$var wire 1 '+ Out $end
$var wire 1 )+ S_n $end
$var wire 1 *+ As $end
$var wire 1 ++ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 )+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 o in1 $end
$var wire 1 )+ in2 $end
$var wire 1 *+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 !! in1 $end
$var wire 1 Q in2 $end
$var wire 1 ++ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *+ in1 $end
$var wire 1 ++ in2 $end
$var wire 1 '+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 1! InA $end
$var wire 1 A! InB $end
$var wire 1 Q S $end
$var wire 1 (+ Out $end
$var wire 1 ,+ S_n $end
$var wire 1 -+ As $end
$var wire 1 .+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ,+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 1! in1 $end
$var wire 1 ,+ in2 $end
$var wire 1 -+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 A! in1 $end
$var wire 1 Q in2 $end
$var wire 1 .+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -+ in1 $end
$var wire 1 .+ in2 $end
$var wire 1 (+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 '+ InA $end
$var wire 1 (+ InB $end
$var wire 1 P S $end
$var wire 1 =) Out $end
$var wire 1 /+ S_n $end
$var wire 1 0+ As $end
$var wire 1 1+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 /+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 '+ in1 $end
$var wire 1 /+ in2 $end
$var wire 1 0+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 (+ in1 $end
$var wire 1 P in2 $end
$var wire 1 1+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 0+ in1 $end
$var wire 1 1+ in2 $end
$var wire 1 =) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 0! InC $end
$var wire 1 @! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 <) Out $end
$var wire 1 2+ AB $end
$var wire 1 3+ CD $end

$scope module muxAB $end
$var wire 1 n InA $end
$var wire 1 ~ InB $end
$var wire 1 Q S $end
$var wire 1 2+ Out $end
$var wire 1 4+ S_n $end
$var wire 1 5+ As $end
$var wire 1 6+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 4+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 n in1 $end
$var wire 1 4+ in2 $end
$var wire 1 5+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~ in1 $end
$var wire 1 Q in2 $end
$var wire 1 6+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5+ in1 $end
$var wire 1 6+ in2 $end
$var wire 1 2+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 0! InA $end
$var wire 1 @! InB $end
$var wire 1 Q S $end
$var wire 1 3+ Out $end
$var wire 1 7+ S_n $end
$var wire 1 8+ As $end
$var wire 1 9+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 7+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 0! in1 $end
$var wire 1 7+ in2 $end
$var wire 1 8+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 @! in1 $end
$var wire 1 Q in2 $end
$var wire 1 9+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8+ in1 $end
$var wire 1 9+ in2 $end
$var wire 1 3+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 2+ InA $end
$var wire 1 3+ InB $end
$var wire 1 P S $end
$var wire 1 <) Out $end
$var wire 1 :+ S_n $end
$var wire 1 ;+ As $end
$var wire 1 <+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 :+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 2+ in1 $end
$var wire 1 :+ in2 $end
$var wire 1 ;+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 3+ in1 $end
$var wire 1 P in2 $end
$var wire 1 <+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ;+ in1 $end
$var wire 1 <+ in2 $end
$var wire 1 <) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 /! InC $end
$var wire 1 ?! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 ;) Out $end
$var wire 1 =+ AB $end
$var wire 1 >+ CD $end

$scope module muxAB $end
$var wire 1 m InA $end
$var wire 1 } InB $end
$var wire 1 Q S $end
$var wire 1 =+ Out $end
$var wire 1 ?+ S_n $end
$var wire 1 @+ As $end
$var wire 1 A+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ?+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 m in1 $end
$var wire 1 ?+ in2 $end
$var wire 1 @+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 } in1 $end
$var wire 1 Q in2 $end
$var wire 1 A+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 @+ in1 $end
$var wire 1 A+ in2 $end
$var wire 1 =+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 /! InA $end
$var wire 1 ?! InB $end
$var wire 1 Q S $end
$var wire 1 >+ Out $end
$var wire 1 B+ S_n $end
$var wire 1 C+ As $end
$var wire 1 D+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 B+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 /! in1 $end
$var wire 1 B+ in2 $end
$var wire 1 C+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ?! in1 $end
$var wire 1 Q in2 $end
$var wire 1 D+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 C+ in1 $end
$var wire 1 D+ in2 $end
$var wire 1 >+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 =+ InA $end
$var wire 1 >+ InB $end
$var wire 1 P S $end
$var wire 1 ;) Out $end
$var wire 1 E+ S_n $end
$var wire 1 F+ As $end
$var wire 1 G+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 E+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 =+ in1 $end
$var wire 1 E+ in2 $end
$var wire 1 F+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 >+ in1 $end
$var wire 1 P in2 $end
$var wire 1 G+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 F+ in1 $end
$var wire 1 G+ in2 $end
$var wire 1 ;) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 .! InC $end
$var wire 1 >! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 :) Out $end
$var wire 1 H+ AB $end
$var wire 1 I+ CD $end

$scope module muxAB $end
$var wire 1 l InA $end
$var wire 1 | InB $end
$var wire 1 Q S $end
$var wire 1 H+ Out $end
$var wire 1 J+ S_n $end
$var wire 1 K+ As $end
$var wire 1 L+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 J+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 l in1 $end
$var wire 1 J+ in2 $end
$var wire 1 K+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 | in1 $end
$var wire 1 Q in2 $end
$var wire 1 L+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K+ in1 $end
$var wire 1 L+ in2 $end
$var wire 1 H+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 .! InA $end
$var wire 1 >! InB $end
$var wire 1 Q S $end
$var wire 1 I+ Out $end
$var wire 1 M+ S_n $end
$var wire 1 N+ As $end
$var wire 1 O+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 M+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 .! in1 $end
$var wire 1 M+ in2 $end
$var wire 1 N+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 >! in1 $end
$var wire 1 Q in2 $end
$var wire 1 O+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N+ in1 $end
$var wire 1 O+ in2 $end
$var wire 1 I+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 H+ InA $end
$var wire 1 I+ InB $end
$var wire 1 P S $end
$var wire 1 :) Out $end
$var wire 1 P+ S_n $end
$var wire 1 Q+ As $end
$var wire 1 R+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 P+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 H+ in1 $end
$var wire 1 P+ in2 $end
$var wire 1 Q+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 I+ in1 $end
$var wire 1 P in2 $end
$var wire 1 R+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Q+ in1 $end
$var wire 1 R+ in2 $end
$var wire 1 :) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 N! InA [15] $end
$var wire 1 O! InA [14] $end
$var wire 1 P! InA [13] $end
$var wire 1 Q! InA [12] $end
$var wire 1 R! InA [11] $end
$var wire 1 S! InA [10] $end
$var wire 1 T! InA [9] $end
$var wire 1 U! InA [8] $end
$var wire 1 V! InA [7] $end
$var wire 1 W! InA [6] $end
$var wire 1 X! InA [5] $end
$var wire 1 Y! InA [4] $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 ^! InB [15] $end
$var wire 1 _! InB [14] $end
$var wire 1 `! InB [13] $end
$var wire 1 a! InB [12] $end
$var wire 1 b! InB [11] $end
$var wire 1 c! InB [10] $end
$var wire 1 d! InB [9] $end
$var wire 1 e! InB [8] $end
$var wire 1 f! InB [7] $end
$var wire 1 g! InB [6] $end
$var wire 1 h! InB [5] $end
$var wire 1 i! InB [4] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 n! InC [15] $end
$var wire 1 o! InC [14] $end
$var wire 1 p! InC [13] $end
$var wire 1 q! InC [12] $end
$var wire 1 r! InC [11] $end
$var wire 1 s! InC [10] $end
$var wire 1 t! InC [9] $end
$var wire 1 u! InC [8] $end
$var wire 1 v! InC [7] $end
$var wire 1 w! InC [6] $end
$var wire 1 x! InC [5] $end
$var wire 1 y! InC [4] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ~! InD [15] $end
$var wire 1 !" InD [14] $end
$var wire 1 "" InD [13] $end
$var wire 1 #" InD [12] $end
$var wire 1 $" InD [11] $end
$var wire 1 %" InD [10] $end
$var wire 1 &" InD [9] $end
$var wire 1 '" InD [8] $end
$var wire 1 (" InD [7] $end
$var wire 1 )" InD [6] $end
$var wire 1 *" InD [5] $end
$var wire 1 +" InD [4] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out [15] $end
$var wire 1 K) Out [14] $end
$var wire 1 L) Out [13] $end
$var wire 1 M) Out [12] $end
$var wire 1 N) Out [11] $end
$var wire 1 O) Out [10] $end
$var wire 1 P) Out [9] $end
$var wire 1 Q) Out [8] $end
$var wire 1 R) Out [7] $end
$var wire 1 S) Out [6] $end
$var wire 1 T) Out [5] $end
$var wire 1 U) Out [4] $end
$var wire 1 V) Out [3] $end
$var wire 1 W) Out [2] $end
$var wire 1 X) Out [1] $end
$var wire 1 Y) Out [0] $end

$scope module mux0 $end
$var wire 1 Z! InA [3] $end
$var wire 1 [! InA [2] $end
$var wire 1 \! InA [1] $end
$var wire 1 ]! InA [0] $end
$var wire 1 j! InB [3] $end
$var wire 1 k! InB [2] $end
$var wire 1 l! InB [1] $end
$var wire 1 m! InB [0] $end
$var wire 1 z! InC [3] $end
$var wire 1 {! InC [2] $end
$var wire 1 |! InC [1] $end
$var wire 1 }! InC [0] $end
$var wire 1 ," InD [3] $end
$var wire 1 -" InD [2] $end
$var wire 1 ." InD [1] $end
$var wire 1 /" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 V) Out [3] $end
$var wire 1 W) Out [2] $end
$var wire 1 X) Out [1] $end
$var wire 1 Y) Out [0] $end

$scope module mux0 $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 }! InC $end
$var wire 1 /" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 Y) Out $end
$var wire 1 U+ AB $end
$var wire 1 V+ CD $end

$scope module muxAB $end
$var wire 1 ]! InA $end
$var wire 1 m! InB $end
$var wire 1 Q S $end
$var wire 1 U+ Out $end
$var wire 1 W+ S_n $end
$var wire 1 X+ As $end
$var wire 1 Y+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 W+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 ]! in1 $end
$var wire 1 W+ in2 $end
$var wire 1 X+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 m! in1 $end
$var wire 1 Q in2 $end
$var wire 1 Y+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 X+ in1 $end
$var wire 1 Y+ in2 $end
$var wire 1 U+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 }! InA $end
$var wire 1 /" InB $end
$var wire 1 Q S $end
$var wire 1 V+ Out $end
$var wire 1 Z+ S_n $end
$var wire 1 [+ As $end
$var wire 1 \+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 Z+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 }! in1 $end
$var wire 1 Z+ in2 $end
$var wire 1 [+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 /" in1 $end
$var wire 1 Q in2 $end
$var wire 1 \+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 [+ in1 $end
$var wire 1 \+ in2 $end
$var wire 1 V+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 U+ InA $end
$var wire 1 V+ InB $end
$var wire 1 P S $end
$var wire 1 Y) Out $end
$var wire 1 ]+ S_n $end
$var wire 1 ^+ As $end
$var wire 1 _+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ]+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 U+ in1 $end
$var wire 1 ]+ in2 $end
$var wire 1 ^+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 V+ in1 $end
$var wire 1 P in2 $end
$var wire 1 _+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ^+ in1 $end
$var wire 1 _+ in2 $end
$var wire 1 Y) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 |! InC $end
$var wire 1 ." InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 X) Out $end
$var wire 1 `+ AB $end
$var wire 1 a+ CD $end

$scope module muxAB $end
$var wire 1 \! InA $end
$var wire 1 l! InB $end
$var wire 1 Q S $end
$var wire 1 `+ Out $end
$var wire 1 b+ S_n $end
$var wire 1 c+ As $end
$var wire 1 d+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 b+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 \! in1 $end
$var wire 1 b+ in2 $end
$var wire 1 c+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 l! in1 $end
$var wire 1 Q in2 $end
$var wire 1 d+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 c+ in1 $end
$var wire 1 d+ in2 $end
$var wire 1 `+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 |! InA $end
$var wire 1 ." InB $end
$var wire 1 Q S $end
$var wire 1 a+ Out $end
$var wire 1 e+ S_n $end
$var wire 1 f+ As $end
$var wire 1 g+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 e+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 |! in1 $end
$var wire 1 e+ in2 $end
$var wire 1 f+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ." in1 $end
$var wire 1 Q in2 $end
$var wire 1 g+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 f+ in1 $end
$var wire 1 g+ in2 $end
$var wire 1 a+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 `+ InA $end
$var wire 1 a+ InB $end
$var wire 1 P S $end
$var wire 1 X) Out $end
$var wire 1 h+ S_n $end
$var wire 1 i+ As $end
$var wire 1 j+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 h+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 `+ in1 $end
$var wire 1 h+ in2 $end
$var wire 1 i+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 a+ in1 $end
$var wire 1 P in2 $end
$var wire 1 j+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 i+ in1 $end
$var wire 1 j+ in2 $end
$var wire 1 X) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 {! InC $end
$var wire 1 -" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 W) Out $end
$var wire 1 k+ AB $end
$var wire 1 l+ CD $end

$scope module muxAB $end
$var wire 1 [! InA $end
$var wire 1 k! InB $end
$var wire 1 Q S $end
$var wire 1 k+ Out $end
$var wire 1 m+ S_n $end
$var wire 1 n+ As $end
$var wire 1 o+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 m+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 [! in1 $end
$var wire 1 m+ in2 $end
$var wire 1 n+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 k! in1 $end
$var wire 1 Q in2 $end
$var wire 1 o+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 n+ in1 $end
$var wire 1 o+ in2 $end
$var wire 1 k+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 {! InA $end
$var wire 1 -" InB $end
$var wire 1 Q S $end
$var wire 1 l+ Out $end
$var wire 1 p+ S_n $end
$var wire 1 q+ As $end
$var wire 1 r+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 p+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 {! in1 $end
$var wire 1 p+ in2 $end
$var wire 1 q+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 -" in1 $end
$var wire 1 Q in2 $end
$var wire 1 r+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 q+ in1 $end
$var wire 1 r+ in2 $end
$var wire 1 l+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 k+ InA $end
$var wire 1 l+ InB $end
$var wire 1 P S $end
$var wire 1 W) Out $end
$var wire 1 s+ S_n $end
$var wire 1 t+ As $end
$var wire 1 u+ Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 s+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 k+ in1 $end
$var wire 1 s+ in2 $end
$var wire 1 t+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 l+ in1 $end
$var wire 1 P in2 $end
$var wire 1 u+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 t+ in1 $end
$var wire 1 u+ in2 $end
$var wire 1 W) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 z! InC $end
$var wire 1 ," InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 V) Out $end
$var wire 1 v+ AB $end
$var wire 1 w+ CD $end

$scope module muxAB $end
$var wire 1 Z! InA $end
$var wire 1 j! InB $end
$var wire 1 Q S $end
$var wire 1 v+ Out $end
$var wire 1 x+ S_n $end
$var wire 1 y+ As $end
$var wire 1 z+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 x+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 Z! in1 $end
$var wire 1 x+ in2 $end
$var wire 1 y+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 j! in1 $end
$var wire 1 Q in2 $end
$var wire 1 z+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 y+ in1 $end
$var wire 1 z+ in2 $end
$var wire 1 v+ out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 z! InA $end
$var wire 1 ," InB $end
$var wire 1 Q S $end
$var wire 1 w+ Out $end
$var wire 1 {+ S_n $end
$var wire 1 |+ As $end
$var wire 1 }+ Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 {+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 z! in1 $end
$var wire 1 {+ in2 $end
$var wire 1 |+ out $end
$upscope $end

$scope module nandB $end
$var wire 1 ," in1 $end
$var wire 1 Q in2 $end
$var wire 1 }+ out $end
$upscope $end

$scope module nandOut $end
$var wire 1 |+ in1 $end
$var wire 1 }+ in2 $end
$var wire 1 w+ out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 v+ InA $end
$var wire 1 w+ InB $end
$var wire 1 P S $end
$var wire 1 V) Out $end
$var wire 1 ~+ S_n $end
$var wire 1 !, As $end
$var wire 1 ", Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ~+ out $end
$upscope $end

$scope module nandA $end
$var wire 1 v+ in1 $end
$var wire 1 ~+ in2 $end
$var wire 1 !, out $end
$upscope $end

$scope module nandB $end
$var wire 1 w+ in1 $end
$var wire 1 P in2 $end
$var wire 1 ", out $end
$upscope $end

$scope module nandOut $end
$var wire 1 !, in1 $end
$var wire 1 ", in2 $end
$var wire 1 V) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 V! InA [3] $end
$var wire 1 W! InA [2] $end
$var wire 1 X! InA [1] $end
$var wire 1 Y! InA [0] $end
$var wire 1 f! InB [3] $end
$var wire 1 g! InB [2] $end
$var wire 1 h! InB [1] $end
$var wire 1 i! InB [0] $end
$var wire 1 v! InC [3] $end
$var wire 1 w! InC [2] $end
$var wire 1 x! InC [1] $end
$var wire 1 y! InC [0] $end
$var wire 1 (" InD [3] $end
$var wire 1 )" InD [2] $end
$var wire 1 *" InD [1] $end
$var wire 1 +" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 R) Out [3] $end
$var wire 1 S) Out [2] $end
$var wire 1 T) Out [1] $end
$var wire 1 U) Out [0] $end

$scope module mux0 $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 y! InC $end
$var wire 1 +" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 U) Out $end
$var wire 1 $, AB $end
$var wire 1 %, CD $end

$scope module muxAB $end
$var wire 1 Y! InA $end
$var wire 1 i! InB $end
$var wire 1 Q S $end
$var wire 1 $, Out $end
$var wire 1 &, S_n $end
$var wire 1 ', As $end
$var wire 1 (, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 &, out $end
$upscope $end

$scope module nandA $end
$var wire 1 Y! in1 $end
$var wire 1 &, in2 $end
$var wire 1 ', out $end
$upscope $end

$scope module nandB $end
$var wire 1 i! in1 $end
$var wire 1 Q in2 $end
$var wire 1 (, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ', in1 $end
$var wire 1 (, in2 $end
$var wire 1 $, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 y! InA $end
$var wire 1 +" InB $end
$var wire 1 Q S $end
$var wire 1 %, Out $end
$var wire 1 ), S_n $end
$var wire 1 *, As $end
$var wire 1 +, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ), out $end
$upscope $end

$scope module nandA $end
$var wire 1 y! in1 $end
$var wire 1 ), in2 $end
$var wire 1 *, out $end
$upscope $end

$scope module nandB $end
$var wire 1 +" in1 $end
$var wire 1 Q in2 $end
$var wire 1 +, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 *, in1 $end
$var wire 1 +, in2 $end
$var wire 1 %, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 $, InA $end
$var wire 1 %, InB $end
$var wire 1 P S $end
$var wire 1 U) Out $end
$var wire 1 ,, S_n $end
$var wire 1 -, As $end
$var wire 1 ., Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 ,, out $end
$upscope $end

$scope module nandA $end
$var wire 1 $, in1 $end
$var wire 1 ,, in2 $end
$var wire 1 -, out $end
$upscope $end

$scope module nandB $end
$var wire 1 %, in1 $end
$var wire 1 P in2 $end
$var wire 1 ., out $end
$upscope $end

$scope module nandOut $end
$var wire 1 -, in1 $end
$var wire 1 ., in2 $end
$var wire 1 U) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 x! InC $end
$var wire 1 *" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 T) Out $end
$var wire 1 /, AB $end
$var wire 1 0, CD $end

$scope module muxAB $end
$var wire 1 X! InA $end
$var wire 1 h! InB $end
$var wire 1 Q S $end
$var wire 1 /, Out $end
$var wire 1 1, S_n $end
$var wire 1 2, As $end
$var wire 1 3, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 1, out $end
$upscope $end

$scope module nandA $end
$var wire 1 X! in1 $end
$var wire 1 1, in2 $end
$var wire 1 2, out $end
$upscope $end

$scope module nandB $end
$var wire 1 h! in1 $end
$var wire 1 Q in2 $end
$var wire 1 3, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 2, in1 $end
$var wire 1 3, in2 $end
$var wire 1 /, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 x! InA $end
$var wire 1 *" InB $end
$var wire 1 Q S $end
$var wire 1 0, Out $end
$var wire 1 4, S_n $end
$var wire 1 5, As $end
$var wire 1 6, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 4, out $end
$upscope $end

$scope module nandA $end
$var wire 1 x! in1 $end
$var wire 1 4, in2 $end
$var wire 1 5, out $end
$upscope $end

$scope module nandB $end
$var wire 1 *" in1 $end
$var wire 1 Q in2 $end
$var wire 1 6, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 5, in1 $end
$var wire 1 6, in2 $end
$var wire 1 0, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 /, InA $end
$var wire 1 0, InB $end
$var wire 1 P S $end
$var wire 1 T) Out $end
$var wire 1 7, S_n $end
$var wire 1 8, As $end
$var wire 1 9, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 7, out $end
$upscope $end

$scope module nandA $end
$var wire 1 /, in1 $end
$var wire 1 7, in2 $end
$var wire 1 8, out $end
$upscope $end

$scope module nandB $end
$var wire 1 0, in1 $end
$var wire 1 P in2 $end
$var wire 1 9, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 8, in1 $end
$var wire 1 9, in2 $end
$var wire 1 T) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 w! InC $end
$var wire 1 )" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 S) Out $end
$var wire 1 :, AB $end
$var wire 1 ;, CD $end

$scope module muxAB $end
$var wire 1 W! InA $end
$var wire 1 g! InB $end
$var wire 1 Q S $end
$var wire 1 :, Out $end
$var wire 1 <, S_n $end
$var wire 1 =, As $end
$var wire 1 >, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 <, out $end
$upscope $end

$scope module nandA $end
$var wire 1 W! in1 $end
$var wire 1 <, in2 $end
$var wire 1 =, out $end
$upscope $end

$scope module nandB $end
$var wire 1 g! in1 $end
$var wire 1 Q in2 $end
$var wire 1 >, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 =, in1 $end
$var wire 1 >, in2 $end
$var wire 1 :, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 w! InA $end
$var wire 1 )" InB $end
$var wire 1 Q S $end
$var wire 1 ;, Out $end
$var wire 1 ?, S_n $end
$var wire 1 @, As $end
$var wire 1 A, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ?, out $end
$upscope $end

$scope module nandA $end
$var wire 1 w! in1 $end
$var wire 1 ?, in2 $end
$var wire 1 @, out $end
$upscope $end

$scope module nandB $end
$var wire 1 )" in1 $end
$var wire 1 Q in2 $end
$var wire 1 A, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 @, in1 $end
$var wire 1 A, in2 $end
$var wire 1 ;, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 :, InA $end
$var wire 1 ;, InB $end
$var wire 1 P S $end
$var wire 1 S) Out $end
$var wire 1 B, S_n $end
$var wire 1 C, As $end
$var wire 1 D, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 B, out $end
$upscope $end

$scope module nandA $end
$var wire 1 :, in1 $end
$var wire 1 B, in2 $end
$var wire 1 C, out $end
$upscope $end

$scope module nandB $end
$var wire 1 ;, in1 $end
$var wire 1 P in2 $end
$var wire 1 D, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 C, in1 $end
$var wire 1 D, in2 $end
$var wire 1 S) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 v! InC $end
$var wire 1 (" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 R) Out $end
$var wire 1 E, AB $end
$var wire 1 F, CD $end

$scope module muxAB $end
$var wire 1 V! InA $end
$var wire 1 f! InB $end
$var wire 1 Q S $end
$var wire 1 E, Out $end
$var wire 1 G, S_n $end
$var wire 1 H, As $end
$var wire 1 I, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 G, out $end
$upscope $end

$scope module nandA $end
$var wire 1 V! in1 $end
$var wire 1 G, in2 $end
$var wire 1 H, out $end
$upscope $end

$scope module nandB $end
$var wire 1 f! in1 $end
$var wire 1 Q in2 $end
$var wire 1 I, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 H, in1 $end
$var wire 1 I, in2 $end
$var wire 1 E, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 v! InA $end
$var wire 1 (" InB $end
$var wire 1 Q S $end
$var wire 1 F, Out $end
$var wire 1 J, S_n $end
$var wire 1 K, As $end
$var wire 1 L, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 J, out $end
$upscope $end

$scope module nandA $end
$var wire 1 v! in1 $end
$var wire 1 J, in2 $end
$var wire 1 K, out $end
$upscope $end

$scope module nandB $end
$var wire 1 (" in1 $end
$var wire 1 Q in2 $end
$var wire 1 L, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 K, in1 $end
$var wire 1 L, in2 $end
$var wire 1 F, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 E, InA $end
$var wire 1 F, InB $end
$var wire 1 P S $end
$var wire 1 R) Out $end
$var wire 1 M, S_n $end
$var wire 1 N, As $end
$var wire 1 O, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 M, out $end
$upscope $end

$scope module nandA $end
$var wire 1 E, in1 $end
$var wire 1 M, in2 $end
$var wire 1 N, out $end
$upscope $end

$scope module nandB $end
$var wire 1 F, in1 $end
$var wire 1 P in2 $end
$var wire 1 O, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 N, in1 $end
$var wire 1 O, in2 $end
$var wire 1 R) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 R! InA [3] $end
$var wire 1 S! InA [2] $end
$var wire 1 T! InA [1] $end
$var wire 1 U! InA [0] $end
$var wire 1 b! InB [3] $end
$var wire 1 c! InB [2] $end
$var wire 1 d! InB [1] $end
$var wire 1 e! InB [0] $end
$var wire 1 r! InC [3] $end
$var wire 1 s! InC [2] $end
$var wire 1 t! InC [1] $end
$var wire 1 u! InC [0] $end
$var wire 1 $" InD [3] $end
$var wire 1 %" InD [2] $end
$var wire 1 &" InD [1] $end
$var wire 1 '" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 N) Out [3] $end
$var wire 1 O) Out [2] $end
$var wire 1 P) Out [1] $end
$var wire 1 Q) Out [0] $end

$scope module mux0 $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 u! InC $end
$var wire 1 '" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 Q) Out $end
$var wire 1 Q, AB $end
$var wire 1 R, CD $end

$scope module muxAB $end
$var wire 1 U! InA $end
$var wire 1 e! InB $end
$var wire 1 Q S $end
$var wire 1 Q, Out $end
$var wire 1 S, S_n $end
$var wire 1 T, As $end
$var wire 1 U, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 S, out $end
$upscope $end

$scope module nandA $end
$var wire 1 U! in1 $end
$var wire 1 S, in2 $end
$var wire 1 T, out $end
$upscope $end

$scope module nandB $end
$var wire 1 e! in1 $end
$var wire 1 Q in2 $end
$var wire 1 U, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 T, in1 $end
$var wire 1 U, in2 $end
$var wire 1 Q, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 u! InA $end
$var wire 1 '" InB $end
$var wire 1 Q S $end
$var wire 1 R, Out $end
$var wire 1 V, S_n $end
$var wire 1 W, As $end
$var wire 1 X, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 V, out $end
$upscope $end

$scope module nandA $end
$var wire 1 u! in1 $end
$var wire 1 V, in2 $end
$var wire 1 W, out $end
$upscope $end

$scope module nandB $end
$var wire 1 '" in1 $end
$var wire 1 Q in2 $end
$var wire 1 X, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 W, in1 $end
$var wire 1 X, in2 $end
$var wire 1 R, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 Q, InA $end
$var wire 1 R, InB $end
$var wire 1 P S $end
$var wire 1 Q) Out $end
$var wire 1 Y, S_n $end
$var wire 1 Z, As $end
$var wire 1 [, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 Y, out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q, in1 $end
$var wire 1 Y, in2 $end
$var wire 1 Z, out $end
$upscope $end

$scope module nandB $end
$var wire 1 R, in1 $end
$var wire 1 P in2 $end
$var wire 1 [, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 Z, in1 $end
$var wire 1 [, in2 $end
$var wire 1 Q) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 t! InC $end
$var wire 1 &" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 P) Out $end
$var wire 1 \, AB $end
$var wire 1 ], CD $end

$scope module muxAB $end
$var wire 1 T! InA $end
$var wire 1 d! InB $end
$var wire 1 Q S $end
$var wire 1 \, Out $end
$var wire 1 ^, S_n $end
$var wire 1 _, As $end
$var wire 1 `, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ^, out $end
$upscope $end

$scope module nandA $end
$var wire 1 T! in1 $end
$var wire 1 ^, in2 $end
$var wire 1 _, out $end
$upscope $end

$scope module nandB $end
$var wire 1 d! in1 $end
$var wire 1 Q in2 $end
$var wire 1 `, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 _, in1 $end
$var wire 1 `, in2 $end
$var wire 1 \, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 t! InA $end
$var wire 1 &" InB $end
$var wire 1 Q S $end
$var wire 1 ], Out $end
$var wire 1 a, S_n $end
$var wire 1 b, As $end
$var wire 1 c, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 a, out $end
$upscope $end

$scope module nandA $end
$var wire 1 t! in1 $end
$var wire 1 a, in2 $end
$var wire 1 b, out $end
$upscope $end

$scope module nandB $end
$var wire 1 &" in1 $end
$var wire 1 Q in2 $end
$var wire 1 c, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 b, in1 $end
$var wire 1 c, in2 $end
$var wire 1 ], out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 \, InA $end
$var wire 1 ], InB $end
$var wire 1 P S $end
$var wire 1 P) Out $end
$var wire 1 d, S_n $end
$var wire 1 e, As $end
$var wire 1 f, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 d, out $end
$upscope $end

$scope module nandA $end
$var wire 1 \, in1 $end
$var wire 1 d, in2 $end
$var wire 1 e, out $end
$upscope $end

$scope module nandB $end
$var wire 1 ], in1 $end
$var wire 1 P in2 $end
$var wire 1 f, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 e, in1 $end
$var wire 1 f, in2 $end
$var wire 1 P) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 s! InC $end
$var wire 1 %" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 O) Out $end
$var wire 1 g, AB $end
$var wire 1 h, CD $end

$scope module muxAB $end
$var wire 1 S! InA $end
$var wire 1 c! InB $end
$var wire 1 Q S $end
$var wire 1 g, Out $end
$var wire 1 i, S_n $end
$var wire 1 j, As $end
$var wire 1 k, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 i, out $end
$upscope $end

$scope module nandA $end
$var wire 1 S! in1 $end
$var wire 1 i, in2 $end
$var wire 1 j, out $end
$upscope $end

$scope module nandB $end
$var wire 1 c! in1 $end
$var wire 1 Q in2 $end
$var wire 1 k, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 j, in1 $end
$var wire 1 k, in2 $end
$var wire 1 g, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 s! InA $end
$var wire 1 %" InB $end
$var wire 1 Q S $end
$var wire 1 h, Out $end
$var wire 1 l, S_n $end
$var wire 1 m, As $end
$var wire 1 n, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 l, out $end
$upscope $end

$scope module nandA $end
$var wire 1 s! in1 $end
$var wire 1 l, in2 $end
$var wire 1 m, out $end
$upscope $end

$scope module nandB $end
$var wire 1 %" in1 $end
$var wire 1 Q in2 $end
$var wire 1 n, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 m, in1 $end
$var wire 1 n, in2 $end
$var wire 1 h, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 g, InA $end
$var wire 1 h, InB $end
$var wire 1 P S $end
$var wire 1 O) Out $end
$var wire 1 o, S_n $end
$var wire 1 p, As $end
$var wire 1 q, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 o, out $end
$upscope $end

$scope module nandA $end
$var wire 1 g, in1 $end
$var wire 1 o, in2 $end
$var wire 1 p, out $end
$upscope $end

$scope module nandB $end
$var wire 1 h, in1 $end
$var wire 1 P in2 $end
$var wire 1 q, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 p, in1 $end
$var wire 1 q, in2 $end
$var wire 1 O) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 r! InC $end
$var wire 1 $" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 N) Out $end
$var wire 1 r, AB $end
$var wire 1 s, CD $end

$scope module muxAB $end
$var wire 1 R! InA $end
$var wire 1 b! InB $end
$var wire 1 Q S $end
$var wire 1 r, Out $end
$var wire 1 t, S_n $end
$var wire 1 u, As $end
$var wire 1 v, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 t, out $end
$upscope $end

$scope module nandA $end
$var wire 1 R! in1 $end
$var wire 1 t, in2 $end
$var wire 1 u, out $end
$upscope $end

$scope module nandB $end
$var wire 1 b! in1 $end
$var wire 1 Q in2 $end
$var wire 1 v, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 u, in1 $end
$var wire 1 v, in2 $end
$var wire 1 r, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 r! InA $end
$var wire 1 $" InB $end
$var wire 1 Q S $end
$var wire 1 s, Out $end
$var wire 1 w, S_n $end
$var wire 1 x, As $end
$var wire 1 y, Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 w, out $end
$upscope $end

$scope module nandA $end
$var wire 1 r! in1 $end
$var wire 1 w, in2 $end
$var wire 1 x, out $end
$upscope $end

$scope module nandB $end
$var wire 1 $" in1 $end
$var wire 1 Q in2 $end
$var wire 1 y, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 x, in1 $end
$var wire 1 y, in2 $end
$var wire 1 s, out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 r, InA $end
$var wire 1 s, InB $end
$var wire 1 P S $end
$var wire 1 N) Out $end
$var wire 1 z, S_n $end
$var wire 1 {, As $end
$var wire 1 |, Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 z, out $end
$upscope $end

$scope module nandA $end
$var wire 1 r, in1 $end
$var wire 1 z, in2 $end
$var wire 1 {, out $end
$upscope $end

$scope module nandB $end
$var wire 1 s, in1 $end
$var wire 1 P in2 $end
$var wire 1 |, out $end
$upscope $end

$scope module nandOut $end
$var wire 1 {, in1 $end
$var wire 1 |, in2 $end
$var wire 1 N) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA [3] $end
$var wire 1 O! InA [2] $end
$var wire 1 P! InA [1] $end
$var wire 1 Q! InA [0] $end
$var wire 1 ^! InB [3] $end
$var wire 1 _! InB [2] $end
$var wire 1 `! InB [1] $end
$var wire 1 a! InB [0] $end
$var wire 1 n! InC [3] $end
$var wire 1 o! InC [2] $end
$var wire 1 p! InC [1] $end
$var wire 1 q! InC [0] $end
$var wire 1 ~! InD [3] $end
$var wire 1 !" InD [2] $end
$var wire 1 "" InD [1] $end
$var wire 1 #" InD [0] $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out [3] $end
$var wire 1 K) Out [2] $end
$var wire 1 L) Out [1] $end
$var wire 1 M) Out [0] $end

$scope module mux0 $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 q! InC $end
$var wire 1 #" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 M) Out $end
$var wire 1 ~, AB $end
$var wire 1 !- CD $end

$scope module muxAB $end
$var wire 1 Q! InA $end
$var wire 1 a! InB $end
$var wire 1 Q S $end
$var wire 1 ~, Out $end
$var wire 1 "- S_n $end
$var wire 1 #- As $end
$var wire 1 $- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 "- out $end
$upscope $end

$scope module nandA $end
$var wire 1 Q! in1 $end
$var wire 1 "- in2 $end
$var wire 1 #- out $end
$upscope $end

$scope module nandB $end
$var wire 1 a! in1 $end
$var wire 1 Q in2 $end
$var wire 1 $- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 #- in1 $end
$var wire 1 $- in2 $end
$var wire 1 ~, out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 q! InA $end
$var wire 1 #" InB $end
$var wire 1 Q S $end
$var wire 1 !- Out $end
$var wire 1 %- S_n $end
$var wire 1 &- As $end
$var wire 1 '- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 %- out $end
$upscope $end

$scope module nandA $end
$var wire 1 q! in1 $end
$var wire 1 %- in2 $end
$var wire 1 &- out $end
$upscope $end

$scope module nandB $end
$var wire 1 #" in1 $end
$var wire 1 Q in2 $end
$var wire 1 '- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 &- in1 $end
$var wire 1 '- in2 $end
$var wire 1 !- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 ~, InA $end
$var wire 1 !- InB $end
$var wire 1 P S $end
$var wire 1 M) Out $end
$var wire 1 (- S_n $end
$var wire 1 )- As $end
$var wire 1 *- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 (- out $end
$upscope $end

$scope module nandA $end
$var wire 1 ~, in1 $end
$var wire 1 (- in2 $end
$var wire 1 )- out $end
$upscope $end

$scope module nandB $end
$var wire 1 !- in1 $end
$var wire 1 P in2 $end
$var wire 1 *- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 )- in1 $end
$var wire 1 *- in2 $end
$var wire 1 M) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 p! InC $end
$var wire 1 "" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 L) Out $end
$var wire 1 +- AB $end
$var wire 1 ,- CD $end

$scope module muxAB $end
$var wire 1 P! InA $end
$var wire 1 `! InB $end
$var wire 1 Q S $end
$var wire 1 +- Out $end
$var wire 1 -- S_n $end
$var wire 1 .- As $end
$var wire 1 /- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 -- out $end
$upscope $end

$scope module nandA $end
$var wire 1 P! in1 $end
$var wire 1 -- in2 $end
$var wire 1 .- out $end
$upscope $end

$scope module nandB $end
$var wire 1 `! in1 $end
$var wire 1 Q in2 $end
$var wire 1 /- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 .- in1 $end
$var wire 1 /- in2 $end
$var wire 1 +- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 p! InA $end
$var wire 1 "" InB $end
$var wire 1 Q S $end
$var wire 1 ,- Out $end
$var wire 1 0- S_n $end
$var wire 1 1- As $end
$var wire 1 2- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 0- out $end
$upscope $end

$scope module nandA $end
$var wire 1 p! in1 $end
$var wire 1 0- in2 $end
$var wire 1 1- out $end
$upscope $end

$scope module nandB $end
$var wire 1 "" in1 $end
$var wire 1 Q in2 $end
$var wire 1 2- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 1- in1 $end
$var wire 1 2- in2 $end
$var wire 1 ,- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 +- InA $end
$var wire 1 ,- InB $end
$var wire 1 P S $end
$var wire 1 L) Out $end
$var wire 1 3- S_n $end
$var wire 1 4- As $end
$var wire 1 5- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 3- out $end
$upscope $end

$scope module nandA $end
$var wire 1 +- in1 $end
$var wire 1 3- in2 $end
$var wire 1 4- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ,- in1 $end
$var wire 1 P in2 $end
$var wire 1 5- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 4- in1 $end
$var wire 1 5- in2 $end
$var wire 1 L) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux2 $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 o! InC $end
$var wire 1 !" InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 K) Out $end
$var wire 1 6- AB $end
$var wire 1 7- CD $end

$scope module muxAB $end
$var wire 1 O! InA $end
$var wire 1 _! InB $end
$var wire 1 Q S $end
$var wire 1 6- Out $end
$var wire 1 8- S_n $end
$var wire 1 9- As $end
$var wire 1 :- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 8- out $end
$upscope $end

$scope module nandA $end
$var wire 1 O! in1 $end
$var wire 1 8- in2 $end
$var wire 1 9- out $end
$upscope $end

$scope module nandB $end
$var wire 1 _! in1 $end
$var wire 1 Q in2 $end
$var wire 1 :- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 9- in1 $end
$var wire 1 :- in2 $end
$var wire 1 6- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 o! InA $end
$var wire 1 !" InB $end
$var wire 1 Q S $end
$var wire 1 7- Out $end
$var wire 1 ;- S_n $end
$var wire 1 <- As $end
$var wire 1 =- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 ;- out $end
$upscope $end

$scope module nandA $end
$var wire 1 o! in1 $end
$var wire 1 ;- in2 $end
$var wire 1 <- out $end
$upscope $end

$scope module nandB $end
$var wire 1 !" in1 $end
$var wire 1 Q in2 $end
$var wire 1 =- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 <- in1 $end
$var wire 1 =- in2 $end
$var wire 1 7- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 6- InA $end
$var wire 1 7- InB $end
$var wire 1 P S $end
$var wire 1 K) Out $end
$var wire 1 >- S_n $end
$var wire 1 ?- As $end
$var wire 1 @- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 >- out $end
$upscope $end

$scope module nandA $end
$var wire 1 6- in1 $end
$var wire 1 >- in2 $end
$var wire 1 ?- out $end
$upscope $end

$scope module nandB $end
$var wire 1 7- in1 $end
$var wire 1 P in2 $end
$var wire 1 @- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 ?- in1 $end
$var wire 1 @- in2 $end
$var wire 1 K) out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 n! InC $end
$var wire 1 ~! InD $end
$var wire 1 P S [1] $end
$var wire 1 Q S [0] $end
$var wire 1 J) Out $end
$var wire 1 A- AB $end
$var wire 1 B- CD $end

$scope module muxAB $end
$var wire 1 N! InA $end
$var wire 1 ^! InB $end
$var wire 1 Q S $end
$var wire 1 A- Out $end
$var wire 1 C- S_n $end
$var wire 1 D- As $end
$var wire 1 E- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 C- out $end
$upscope $end

$scope module nandA $end
$var wire 1 N! in1 $end
$var wire 1 C- in2 $end
$var wire 1 D- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ^! in1 $end
$var wire 1 Q in2 $end
$var wire 1 E- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 D- in1 $end
$var wire 1 E- in2 $end
$var wire 1 A- out $end
$upscope $end
$upscope $end

$scope module muxCD $end
$var wire 1 n! InA $end
$var wire 1 ~! InB $end
$var wire 1 Q S $end
$var wire 1 B- Out $end
$var wire 1 F- S_n $end
$var wire 1 G- As $end
$var wire 1 H- Bs $end

$scope module notSelect $end
$var wire 1 Q in1 $end
$var wire 1 F- out $end
$upscope $end

$scope module nandA $end
$var wire 1 n! in1 $end
$var wire 1 F- in2 $end
$var wire 1 G- out $end
$upscope $end

$scope module nandB $end
$var wire 1 ~! in1 $end
$var wire 1 Q in2 $end
$var wire 1 H- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 G- in1 $end
$var wire 1 H- in2 $end
$var wire 1 B- out $end
$upscope $end
$upscope $end

$scope module muxOut $end
$var wire 1 A- InA $end
$var wire 1 B- InB $end
$var wire 1 P S $end
$var wire 1 J) Out $end
$var wire 1 I- S_n $end
$var wire 1 J- As $end
$var wire 1 K- Bs $end

$scope module notSelect $end
$var wire 1 P in1 $end
$var wire 1 I- out $end
$upscope $end

$scope module nandA $end
$var wire 1 A- in1 $end
$var wire 1 I- in2 $end
$var wire 1 J- out $end
$upscope $end

$scope module nandB $end
$var wire 1 B- in1 $end
$var wire 1 P in2 $end
$var wire 1 K- out $end
$upscope $end

$scope module nandOut $end
$var wire 1 J- in1 $end
$var wire 1 K- in2 $end
$var wire 1 J) out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module decoder $end
$var wire 1 R In [2] $end
$var wire 1 S In [1] $end
$var wire 1 T In [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 M-
b0 J
b0 K
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
0_$
0`$
0a$
0b$
0c$
0t$
0u$
0v$
0w$
0x$
0y$
0z$
0{$
0|$
0}$
0~$
0!%
0"%
0#%
0$%
0%%
b100 A
b1 B
1C
b1101011000001001 D
b11 E
0I
1i
1j
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
b10000 &%
b10000 G%
b100 H%
b100 u%
b100 D&
b100 q&
b10000 @'
b100 A'
b100 n'
b100 =(
b100 j(
b10000 9)
b10000 Z)
b100 [)
b100 **
b100 W*
b100 &+
b10000 S+
b100 T+
b100 #,
b100 P,
b100 },
b10000 L-
b0 F
b1 k
1e
1d
0c
0b
1a
0`
0_
0^
0]
0\
1[
1Z
0Y
1X
0W
1V
1U
1T
1S
0R
1Q
0P
0O
0N
0M
1L
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
1G
1H
1f
1g
0h
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
07"
06"
05"
14"
03"
02"
01"
00"
0?"
0>"
0="
1<"
0;"
0:"
09"
08"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
1Q#
0P#
0O#
1N#
0M#
0L#
0K#
0J#
0I#
1H#
1G#
0F#
1E#
0D#
1C#
1B#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x(%
x'%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x:%
x9%
x8%
x7%
xI%
xJ%
1K%
xL%
1M%
1N%
xO%
1P%
1Q%
xR%
1S%
xT%
xU%
1V%
xW%
1X%
1Y%
xZ%
1[%
1\%
x]%
1^%
x_%
x`%
1a%
xb%
1c%
1d%
xe%
1f%
1g%
xh%
1i%
xj%
xk%
1l%
xm%
1n%
1o%
xp%
1q%
1r%
xs%
1t%
xv%
xw%
1x%
xy%
1z%
1{%
x|%
1}%
1~%
x!&
1"&
x#&
x$&
1%&
x&&
1'&
1(&
x)&
1*&
1+&
x,&
1-&
x.&
x/&
10&
x1&
12&
13&
x4&
15&
16&
x7&
18&
x9&
x:&
1;&
x<&
1=&
1>&
x?&
1@&
1A&
xB&
1C&
xE&
xF&
1G&
xH&
1I&
1J&
xK&
1L&
1M&
xN&
1O&
xP&
xQ&
1R&
xS&
1T&
1U&
xV&
1W&
1X&
xY&
1Z&
x[&
x\&
1]&
x^&
1_&
1`&
xa&
1b&
1c&
xd&
1e&
xf&
xg&
1h&
xi&
1j&
1k&
xl&
1m&
1n&
xo&
1p&
xr&
xs&
1t&
xu&
1v&
1w&
xx&
1y&
1z&
x{&
1|&
x}&
x~&
1!'
x"'
1#'
1$'
x%'
1&'
1''
x('
1)'
x*'
x+'
1,'
x-'
1.'
1/'
x0'
11'
12'
x3'
14'
x5'
x6'
17'
x8'
19'
1:'
x;'
1<'
1='
x>'
1?'
xB'
xC'
1D'
xE'
1F'
1G'
xH'
1I'
1J'
xK'
1L'
xM'
xN'
1O'
xP'
1Q'
1R'
xS'
1T'
1U'
xV'
1W'
xX'
xY'
1Z'
x['
1\'
1]'
x^'
1_'
1`'
xa'
1b'
xc'
xd'
1e'
xf'
1g'
1h'
xi'
1j'
1k'
xl'
1m'
xo'
xp'
1q'
xr'
1s'
1t'
xu'
1v'
1w'
xx'
1y'
xz'
x{'
1|'
x}'
1~'
1!(
x"(
1#(
1$(
x%(
1&(
x'(
x((
1)(
x*(
1+(
1,(
x-(
1.(
1/(
x0(
11(
x2(
x3(
14(
x5(
16(
17(
x8(
19(
1:(
x;(
1<(
x>(
x?(
1@(
xA(
1B(
1C(
xD(
1E(
1F(
xG(
1H(
xI(
xJ(
1K(
xL(
1M(
1N(
xO(
1P(
1Q(
xR(
1S(
xT(
xU(
1V(
xW(
1X(
1Y(
xZ(
1[(
1\(
x](
1^(
x_(
x`(
1a(
xb(
1c(
1d(
xe(
1f(
1g(
xh(
1i(
xk(
xl(
1m(
xn(
1o(
1p(
xq(
1r(
1s(
xt(
1u(
xv(
xw(
1x(
xy(
1z(
1{(
x|(
1}(
1~(
x!)
1")
x#)
x$)
1%)
x&)
1')
1()
x))
1*)
1+)
x,)
1-)
x.)
x/)
10)
x1)
12)
13)
x4)
15)
16)
x7)
18)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
xY)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
x\)
x])
0^)
1_)
x`)
0a)
1b)
xc)
1d)
xe)
1f)
xg)
xh)
0i)
1j)
xk)
0l)
1m)
xn)
1o)
xp)
1q)
xr)
xs)
0t)
1u)
xv)
0w)
1x)
xy)
1z)
x{)
1|)
x})
x~)
0!*
1"*
x#*
0$*
1%*
x&*
1'*
x(*
1)*
x+*
x,*
0-*
1.*
x/*
00*
11*
x2*
13*
x4*
15*
x6*
x7*
08*
19*
x:*
0;*
1<*
x=*
1>*
x?*
1@*
xA*
xB*
0C*
1D*
xE*
0F*
1G*
xH*
1I*
xJ*
1K*
xL*
xM*
0N*
1O*
xP*
0Q*
1R*
xS*
1T*
xU*
1V*
xX*
xY*
0Z*
1[*
x\*
0]*
1^*
x_*
1`*
xa*
1b*
xc*
xd*
0e*
1f*
xg*
0h*
1i*
xj*
1k*
xl*
1m*
xn*
xo*
0p*
1q*
xr*
0s*
1t*
xu*
1v*
xw*
1x*
xy*
xz*
0{*
1|*
x}*
0~*
1!+
x"+
1#+
x$+
1%+
x'+
x(+
0)+
1*+
x++
0,+
1-+
x.+
1/+
x0+
11+
x2+
x3+
04+
15+
x6+
07+
18+
x9+
1:+
x;+
1<+
x=+
x>+
0?+
1@+
xA+
0B+
1C+
xD+
1E+
xF+
1G+
xH+
xI+
0J+
1K+
xL+
0M+
1N+
xO+
1P+
xQ+
1R+
xU+
xV+
0W+
1X+
xY+
0Z+
1[+
x\+
1]+
x^+
1_+
x`+
xa+
0b+
1c+
xd+
0e+
1f+
xg+
1h+
xi+
1j+
xk+
xl+
0m+
1n+
xo+
0p+
1q+
xr+
1s+
xt+
1u+
xv+
xw+
0x+
1y+
xz+
0{+
1|+
x}+
1~+
x!,
1",
x$,
x%,
0&,
1',
x(,
0),
1*,
x+,
1,,
x-,
1.,
x/,
x0,
01,
12,
x3,
04,
15,
x6,
17,
x8,
19,
x:,
x;,
0<,
1=,
x>,
0?,
1@,
xA,
1B,
xC,
1D,
xE,
xF,
0G,
1H,
xI,
0J,
1K,
xL,
1M,
xN,
1O,
xQ,
xR,
0S,
1T,
xU,
0V,
1W,
xX,
1Y,
xZ,
1[,
x\,
x],
0^,
1_,
x`,
0a,
1b,
xc,
1d,
xe,
1f,
xg,
xh,
0i,
1j,
xk,
0l,
1m,
xn,
1o,
xp,
1q,
xr,
xs,
0t,
1u,
xv,
0w,
1x,
xy,
1z,
x{,
1|,
x~,
x!-
0"-
1#-
x$-
0%-
1&-
x'-
1(-
x)-
1*-
x+-
x,-
0--
1.-
x/-
00-
11-
x2-
13-
x4-
15-
x6-
x7-
08-
19-
x:-
0;-
1<-
x=-
1>-
x?-
1@-
xA-
xB-
0C-
1D-
xE-
0F-
1G-
xH-
1I-
xJ-
1K-
$end
#1
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
1L%
1W%
1b%
1m%
1y%
1&&
11&
1<&
1H&
1S&
1^&
1i&
1u&
1"'
1-'
18'
1`)
1k)
1v)
1#*
1/*
1:*
1E*
1P*
1\*
1g*
1r*
1}*
1++
16+
1A+
1L+
1O%
1Z%
1e%
1p%
1|%
1)&
14&
1?&
1K&
1V&
1a&
1l&
1x&
1%'
10'
1;'
1c)
1n)
1y)
1&*
12*
1=*
1H*
1S*
1_*
1j*
1u*
1"+
1.+
19+
1D+
1O+
1E'
1P'
1['
1f'
1r'
1}'
1*(
15(
1A(
1L(
1W(
1b(
1n(
1y(
1&)
11)
1Y+
1d+
1o+
1z+
1(,
13,
1>,
1I,
1U,
1`,
1k,
1v,
1$-
1/-
1:-
1E-
1H'
1S'
1^'
1i'
1u'
1"(
1-(
18(
1D(
1O(
1Z(
1e(
1q(
1|(
1))
14)
1\+
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
1g+
1r+
1}+
1+,
16,
1A,
1L,
1X,
1c,
1n,
1y,
1'-
12-
1=-
1H-
0I%
0T%
0_%
0j%
0v%
0#&
0.&
09&
0E&
0P&
0[&
0f&
0r&
0}&
0*'
05'
0\)
0g)
0r)
0})
0+*
06*
0A*
0L*
0X*
0c*
0n*
0y*
0'+
02+
0=+
0H+
0J%
0U%
0`%
0k%
0w%
0$&
0/&
0:&
0F&
0Q&
0\&
0g&
0s&
0~&
0+'
06'
0])
0h)
0s)
0~)
0,*
07*
0B*
0M*
0Y*
0d*
0o*
0z*
0(+
03+
0>+
0I+
0B'
0M'
0X'
0c'
0o'
0z'
0'(
02(
0>(
0I(
0T(
0_(
0k(
0v(
0#)
0.)
0U+
0`+
0k+
0v+
0$,
0/,
0:,
0E,
0Q,
0\,
0g,
0r,
0~,
0+-
06-
0A-
0C'
0N'
0Y'
0d'
0p'
0{'
0((
03(
0?(
0J(
0U(
0`(
0l(
0w(
0$)
0/)
0V+
0a+
0l+
0w+
0%,
00,
0;,
0F,
0R,
0],
0h,
0s,
0!-
0,-
07-
0B-
1R%
1]%
1h%
1s%
1!&
1,&
17&
1B&
1N&
1Y&
1d&
1o&
1{&
1('
13'
1>'
1e)
1p)
1{)
1(*
14*
1?*
1J*
1U*
1a*
1l*
1w*
1$+
10+
1;+
1F+
1Q+
1K'
1V'
1a'
1l'
1x'
1%(
10(
1;(
1G(
1R(
1](
1h(
1t(
1!)
1,)
17)
1^+
1i+
1t+
1!,
1-,
18,
1C,
1N,
1Z,
1e,
1p,
1{,
1)-
14-
1?-
1J-
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
#10
b1 F
#50
0i
0G
0f
#100
1i
1G
1f
b101 A
b101 B
b101001000010010 D
b1 E
b10 k
0d
1c
0a
1`
0Z
0U
1O
1N
0Q#
1P#
0N#
1M#
0G#
0B#
03)
00)
0()
0%)
0{(
0x(
0p(
0m(
0d(
0a(
0Y(
0V(
0N(
0K(
0C(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0q'
0h'
0e'
0]'
0Z'
0R'
0O'
0G'
0D'
0:'
07'
0/'
0,'
0$'
0!'
0w&
0t&
0k&
0h&
0`&
0]&
0U&
0R&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0{%
0x%
0o%
0l%
0d%
0a%
0Y%
0V%
0N%
0K%
0S
b10 M-
1>"
0<"
16"
04"
0P#
0M#
0H#
0E#
0C#
1n"
1k"
1f"
1c"
1a"
#110
b10 F
#150
0i
0G
0f
#200
1i
1G
1f
b110 A
b101011111101101 D
b100 E
b11 k
1d
0c
1b
1a
0`
1_
1^
1]
1\
1Z
0N
1M
1o"
0n"
1m"
1l"
0k"
1j"
1i"
1h"
1g"
1e"
13)
10)
1()
1%)
1{(
1x(
1p(
1m(
1d(
1a(
1Y(
1V(
1N(
1K(
1C(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1q'
1h'
1e'
1]'
1Z'
1R'
1O'
1G'
1D'
1:'
17'
1/'
1,'
1$'
1!'
1w&
1t&
1k&
1h&
1`&
1]&
1U&
1R&
1J&
1G&
1>&
1;&
13&
10&
1(&
1%&
1{%
1x%
1o%
1l%
1d%
1a%
1Y%
1V%
1N%
1K%
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
0T
1R
b10000 M-
0>"
1;"
06"
13"
1q#
1o#
1n#
1l#
1k#
1j#
1i#
1h#
1g#
1e#
1c#
0o"
0m"
0l"
0j"
0i"
0h"
0g"
0f"
0e"
0c"
0a"
#201
0j
0H
0g
#210
b11 F
#250
0i
0G
0f
#300
1i
1G
1f
1r#
1t#
1u#
1w#
1x#
1y#
1z#
1{#
1|#
1~#
1"$
b1101001010101010 D
b101 E
b100 k
0d
1c
0b
0^
0\
0Z
1U
0q#
1p#
0o#
0k#
0i#
0g#
1b#
1T
b100000 M-
0;"
1:"
03"
12"
12$
10$
1.$
1,$
1*$
1'$
1%$
1$$
0p#
0n#
0l#
0j#
0h#
0e#
0c#
0b#
#301
1]!
1[!
1Z!
1X!
1W!
1V!
1U!
1T!
1S!
1Q!
1O!
0E'
1q#
1o#
1n#
1l#
1k#
1j#
1i#
1h#
1g#
1e#
1c#
0['
0f'
0}'
0*(
05(
0A(
0L(
0W(
0n(
0&)
1B'
1X'
1c'
1z'
1'(
12(
1>(
1I(
1T(
1k(
1#)
#310
b100 F
#350
0i
0G
0f
#400
1i
1G
1f
15$
17$
19$
1;$
1=$
1@$
1B$
1C$
b10 A
b111 B
b110100111110010 D
b110 E
0C
b101 k
0a
1`
1^
1\
0[
1Y
0X
1W
0U
1P
0L
0e
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
02"
00$
1/$
1-$
1+$
0*$
1($
0'$
1&$
0$$
02$
0/$
0.$
0-$
0,$
0+$
0($
0&$
0%$
0T
1S
b1000000 M-
0:"
19"
#401
1l!
1j!
1h!
1f!
1d!
1a!
1_!
1^!
0d+
12$
10$
1.$
1,$
1*$
1'$
1%$
1$$
0z+
03,
0I,
0`,
0$-
0:-
0E-
1`+
1v+
1/,
1E,
1\,
1~,
16-
1A-
#410
b101 F
#450
0i
0G
0f
#500
1i
1G
1f
b101 A
b100 B
b10100010111101 D
b101 E
1C
b1101001010101010 J
b101011111101101 K
b110 k
1d
0c
1b
1a
0^
0\
0V
0Q
0P
1N
0M
1L
1e
1F-
1E-
1C-
1;-
1:-
18-
10-
1--
1%-
1$-
1"-
1w,
1t,
1l,
1i,
1a,
1`,
1^,
1V,
1S,
1J,
1I,
1G,
1?,
1<,
14,
13,
11,
1),
1&,
1{+
1z+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1W+
1M+
1J+
1B+
1?+
17+
14+
1,+
1)+
1~*
1{*
1s*
1p*
1h*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1!*
1w)
1t)
1l)
1i)
1a)
1^)
1I-
1>-
13-
1(-
1z,
1o,
1d,
1Y,
1M,
1B,
17,
1,,
1~+
1s+
1h+
1]+
1P+
1E+
1:+
1/+
1#+
1v*
1k*
1`*
1T*
1I*
1>*
13*
1'*
1z)
1o)
1d)
03)
02)
00)
0()
0')
0%)
0{(
0x(
0p(
0o(
0m(
0d(
0a(
0Y(
0V(
0N(
0M(
0K(
0C(
0@(
07(
06(
04(
0,(
0)(
0!(
0~'
0|'
0t'
0q'
0h'
0g'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0D'
0:'
07'
0/'
0,'
0$'
0!'
0w&
0t&
0k&
0h&
0`&
0]&
0U&
0R&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0{%
0x%
0o%
0l%
0d%
0a%
0Y%
0V%
0N%
0K%
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
11"
0A-
06-
09-
0~,
0#-
0j,
0\,
0_,
0T,
0E,
0H,
0=,
0/,
02,
0v+
0y+
0n+
0`+
0X+
0J-
0?-
0)-
0e,
0N,
08,
0!,
0i+
1.)
1&)
1n(
1W(
1L(
1A(
15(
1*(
1}'
1f'
1['
1M'
1E'
0,)
0t(
0](
0R(
0G(
0;(
00(
0%(
0l'
0a'
0K'
1S$
1Q$
1P$
1O$
1N$
1L$
1H$
1F$
1J-
1?-
16-
1)-
1~,
1g,
1e,
1\,
1Q,
1N,
1E,
1:,
18,
1/,
1!,
1v+
1k+
1i+
1U+
1J)
1K)
1M)
1P)
1R)
1T)
1V)
1X)
07)
0T(
0>(
0'(
0X'
0V'
0B'
18%
1:%
1<%
1=%
1>%
1?%
1@%
1A%
1C%
1D%
1F%
0J)
0K)
0?-
0M)
0)-
0p,
0P)
0e,
0Z,
0R)
0N,
0C,
0T)
08,
0V)
0!,
0t+
0X)
0^+
17%
1](
1G(
10(
1a'
1E%
1K'
10
1.
1-
1+
1*
1)
1(
1'
1&
1$
1"
1?
1=
1;
19
17
14
12
11
1K)
1M)
1O)
1P)
1Q)
1R)
1S)
1T)
1V)
1W)
1Y)
1/
1!
0?
0=
0;
09
07
04
02
01
0<%
0>%
0@%
0D%
0F%
00
0.
0*
0(
0&
1@
1>
1=
1;
1:
19
18
17
16
14
12
1T
0S
b100000 M-
1:"
09"
12"
01"
0S$
0Q$
0P$
0O$
0N$
0L$
0H$
0F$
13$
02$
11$
1/$
0*$
1($
0'$
1&$
0%$
0$$
#510
b110 F
#550
0i
0G
0f
#600
1i
1G
1f
14$
05$
16$
18$
0=$
1?$
0@$
1A$
0B$
0C$
b11 A
b10 B
b10001010000000 D
b0 E
0C
b0 J
b0 K
b111 k
0d
0b
0a
0`
0_
1[
0Y
1P
0O
1M
0L
0e
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
02"
0/
0-
0+
0)
0'
0$
0"
0!
0@
0>
0=
0;
0:
09
08
07
06
04
02
03$
01$
00$
0/$
0.$
1*$
0($
1?-
1)-
1p,
1e,
1Z,
1N,
1C,
18,
1!,
1t+
1^+
17)
1,)
1t(
1R(
1;(
1%(
1l'
1V'
12$
10$
1.$
1'$
0&$
1%$
1$$
0K)
0M)
0O)
0P)
0Q)
0R)
0S)
0T)
0V)
0W)
0Y)
07%
08%
0:%
0=%
0?%
0A%
0C%
0E%
0T
0R
b1 M-
1?"
0:"
#601
1m!
0l!
1k!
1i!
0d!
1b!
0a!
1`!
0_!
0^!
0F'
13$
02$
11$
1/$
0*$
1($
0'$
1&$
0%$
0$$
1Q'
0\'
0s'
1M(
0c(
1o(
0z(
1')
12)
1B'
0M'
1X'
1o'
0I(
1_(
0k(
1v(
0#)
0.)
#610
b111 F
#650
0i
0G
0f
#700
1i
1G
1f
b101 A
b110 B
b1011100000010011 D
b101 E
1C
b10100010111101 J
b1000 k
1d
1c
1`
0]
0[
1Y
1X
1U
1O
0M
1L
1e
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
17"
0!)
0h(
0;(
0%(
0x'
0l'
0a'
0K'
1O"
1N"
1K"
1D"
1C"
1B"
1@"
19%
1;%
1?%
1A%
1B%
1C%
1D%
1F%
10
1.
1-
1,
1+
1)
1%
1#
1T
1R
b100000 M-
0?"
1:"
07"
12"
12$
01$
00$
0.$
0,$
1'$
1$$
0O"
0N"
0K"
0D"
0C"
0B"
0@"
#710
b1000 F
#750
0i
0G
0f
#800
1i
1G
1f
15$
06$
07$
09$
0;$
1@$
1C$
b11 A
b101 B
b100101000000010 D
b110 E
b0 J
b1011100000010011 K
b1001 k
0d
0`
1[
0X
0W
1V
0U
1Q
0P
1M
0L
0F-
0C-
0;-
08-
00-
0/-
0--
0%-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0I,
0G,
0?,
0<,
04,
03,
01,
0),
0(,
0&,
0{+
0z+
0x+
0p+
0o+
0m+
0e+
0b+
0Z+
0Y+
0W+
0M+
0J+
0B+
0?+
07+
04+
0,+
0)+
0~*
0{*
0s*
0p*
0h*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0!*
0w)
0t)
0l)
0i)
0a)
0^)
1I-
1>-
13-
1(-
1z,
1o,
1d,
1Y,
1M,
1B,
17,
1,,
1~+
1s+
1h+
1]+
1P+
1E+
1:+
1/+
1#+
1v*
1k*
1`*
1T*
1I*
1>*
13*
1'*
1z)
1o)
1d)
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
00
0.
0-
0,
0+
0)
0%
0#
03$
0/$
1*$
0'$
0&$
1%$
0$$
19-
1+-
1#-
1r,
1j,
1_,
1T,
1H,
1=,
12,
1$,
1y+
1n+
1X+
0?-
0)-
0p,
0e,
0Z,
0N,
0C,
08,
0!,
0t+
0^+
1!)
1h(
1;(
1%(
1x'
1l'
1a'
1K'
06-
04-
0~,
0{,
0g,
0\,
0Q,
0:,
0-,
1K)
1M)
1O)
1P)
1Q)
1R)
1S)
1T)
1V)
1W)
1Y)
09%
0;%
0?%
0A%
0B%
0C%
0D%
0F%
1?-
1L)
1)-
1N)
1p,
1e,
1Z,
1C,
1U)
1@
1>
1=
1;
1:
19
18
17
16
14
12
0K)
1<
15
13
0M)
0O)
0P)
0Q)
0S)
0:
08
07
06
04
02
0T
1S
b1000000 M-
0:"
19"
02"
11"
1R$
1J$
1H$
1E$
13$
02$
11$
10$
1/$
1.$
1,$
0*$
1&$
0%$
#801
1l!
0k!
0j!
0h!
0f!
1a!
1^!
0d+
0Q'
12$
01$
00$
0.$
0,$
1'$
1$$
1o+
1\'
1z+
1g'
13,
1~'
1I,
16(
0$-
0o(
0E-
02)
1`+
1M'
0k+
0X'
0v+
0c'
0/,
0z'
0E,
02(
1~,
1k(
1A-
1.)
0i+
1t+
1!,
18,
1N,
0)-
0J-
1X)
0W)
0V)
0T)
0R)
1M)
1J)
1?
0>
0=
0;
09
14
11
#810
b1001 F
#850
0i
0G
0f
#900
1i
1G
1f
1U$
1]$
1_$
1b$
b111 A
b11 B
b110010100001010 D
b10 E
0C
b0 K
b1010 k
1a
1\
0[
1Z
0Y
1W
1P
0O
1L
0e
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
01"
0@
0?
0<
05
04
03
01
1P$
1K$
0J$
1I$
0H$
1F$
1J-
14-
1)-
1{,
1-,
1i+
1^+
0R$
0P$
0K$
0I$
0F$
0E$
0J)
0L)
0M)
0N)
0U)
0X)
0Y)
0R
b100 M-
1="
09"
#901
1|!
1t!
1r!
1o!
1R$
1J$
1H$
1E$
#910
b1010 F
#950
0i
0G
0f
#1000
1i
1G
1f
b10 A
b10 B
b1011001101000001 D
b0 E
b1011 k
1d
0c
0a
1^
1[
0Z
1X
0V
1U
0Q
0N
0L
1F-
1E-
1C-
1;-
18-
10-
1/-
1--
1%-
1$-
1"-
1w,
1v,
1t,
1l,
1i,
1a,
1^,
1V,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1Y+
1W+
1M+
1J+
1B+
1?+
17+
14+
1,+
1)+
1~*
1{*
1s*
1p*
1h*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1!*
1w)
1t)
1l)
1i)
1a)
1^)
13)
12)
10)
1()
1%)
1{(
1z(
1x(
1p(
1o(
1m(
1d(
1c(
1a(
1Y(
1V(
1N(
1K(
1C(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1F'
1D'
1:'
17'
1/'
1,'
1$'
1!'
1w&
1t&
1k&
1h&
1`&
1]&
1U&
1R&
1J&
1G&
1>&
1;&
13&
10&
1(&
1%&
1{%
1x%
1o%
1l%
1d%
1a%
1Y%
1V%
1N%
1K%
0A-
0<-
09-
0+-
0~,
0#-
0x,
0r,
0j,
0b,
0_,
0T,
0H,
0=,
02,
0$,
0y+
0n+
0f+
0`+
0U+
0X+
0.)
0))
0&)
0v(
0k(
0n(
0e(
0_(
0W(
0O(
0L(
0A(
05(
0*(
0}'
0o'
0f'
0['
0S'
0M'
0B'
0E'
17-
16-
1~,
1s,
1g,
1],
1\,
1Q,
1E,
1:,
1/,
1v+
1k+
1a+
1U+
1$)
1#)
1k(
1`(
1T(
1J(
1I(
1>(
12(
1'(
1z'
1c'
1X'
1N'
1B'
0@-
0|,
0f,
0j+
0-)
0i(
0S(
0W'
1K)
1N)
1P)
1X)
18%
1;%
1=%
1E%
0S
b1 M-
1?"
0="
#1010
b1011 F
#1050
0i
0G
0f
#1100
1i
1G
1f
b1 A
b11 B
b110010110110110 D
b110 E
b1100 k
0d
1c
1b
1`
1_
0^
1]
0[
1Z
0X
1V
0U
1Q
1N
0M
0F-
0E-
0C-
0;-
08-
00-
0/-
0--
0%-
0$-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0Y+
0W+
0M+
0J+
0B+
0?+
07+
04+
0,+
0)+
0~*
0{*
0s*
0p*
0h*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0!*
0w)
0t)
0l)
0i)
0a)
0^)
03)
02)
00)
0()
0%)
0{(
0z(
0x(
0p(
0o(
0m(
0d(
0c(
0a(
0Y(
0V(
0N(
0K(
0C(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0F'
0D'
0:'
07'
0/'
0,'
0$'
0!'
0w&
0t&
0k&
0h&
0`&
0]&
0U&
0R&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0{%
0x%
0o%
0l%
0d%
0a%
0Y%
0V%
0N%
0K%
16)
1-)
1+)
1~(
1s(
1i(
1g(
1\(
1S(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1W'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
1A-
1<-
19-
1+-
1#-
1x,
1r,
1j,
1b,
1_,
1T,
1H,
1=,
12,
1$,
1y+
1n+
1f+
1`+
1X+
1.)
1))
1&)
1v(
1n(
1e(
1_(
1W(
1O(
1L(
1A(
15(
1*(
1}'
1o'
1f'
1['
1S'
1M'
1E'
08%
0,)
0t(
0;%
0](
0=%
0R(
0G(
0;(
00(
0%(
0l'
0a'
0E%
0K'
07-
06-
0s,
0g,
0],
0\,
0Q,
0E,
0:,
0/,
0v+
0k+
0a+
07)
0$)
0#)
0!)
0`(
0h(
0T(
0J(
0I(
0>(
02(
0'(
0z'
0x'
0c'
0X'
0N'
0V'
18%
1:%
1<%
1=%
1>%
1?%
1@%
1A%
1C%
1D%
1F%
1@-
1|,
1f,
1j+
17%
1,)
19%
1;%
1](
1R(
1G(
1;(
10(
1%(
1B%
1l'
1a'
1E%
0K)
0N)
0P)
0X)
08%
0<%
0=%
0>%
0?%
0@%
0A%
0C%
0D%
1S
1R
b1000000 M-
0?"
19"
#1110
b1100 F
#1150
0i
0G
0f
#1200
1i
1G
1f
b100 A
b10 B
b1001101000001011 D
b1 E
1C
b101011111101101 J
b1101 k
1d
0b
1a
0`
0_
0]
0\
1[
0Z
1Y
1X
0W
0V
1U
0Q
0N
1L
1e
1F-
1E-
1C-
1;-
18-
10-
1/-
1--
1%-
1$-
1"-
1w,
1v,
1t,
1l,
1i,
1a,
1^,
1V,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1Y+
1W+
1M+
1J+
1B+
1?+
17+
14+
1,+
1)+
1~*
1{*
1s*
1p*
1h*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1!*
1w)
1t)
1l)
1i)
1a)
1^)
13)
12)
10)
1()
1%)
1{(
1z(
1x(
1p(
1o(
1m(
1d(
1c(
1a(
1Y(
1V(
1N(
1K(
1C(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1F'
1D'
1:'
17'
1/'
1,'
1$'
1!'
1w&
1t&
1k&
1h&
1`&
1]&
1U&
1R&
1J&
1G&
1>&
1;&
13&
10&
1(&
1%&
1{%
1x%
1o%
1l%
1d%
1a%
1Y%
1V%
1N%
1K%
11"
10
1/
1,
1%
1$
1#
1!
0A-
0<-
09-
0+-
0~,
0#-
0x,
0r,
0j,
0b,
0_,
0T,
0H,
0=,
02,
0$,
0y+
0n+
0f+
0`+
0U+
0X+
0.)
0))
0&)
0v(
0k(
0n(
0e(
0_(
0W(
0O(
0L(
0A(
05(
0*(
0}'
0o'
0f'
0['
0S'
0M'
0B'
0E'
1S$
1P$
1G$
0E$
1D$
17-
16-
1~,
1s,
1g,
1],
1\,
1Q,
1E,
1:,
1/,
1v+
1k+
1a+
1U+
17)
1$)
1#)
1!)
1t(
1k(
1`(
1h(
1T(
1J(
1I(
1>(
12(
1'(
1z'
1x'
1c'
1X'
1N'
1V'
1K'
1B'
0@-
0|,
0f,
0j+
07%
0,)
09%
0:%
0t(
0;%
0](
0R(
0G(
0;(
00(
0%(
0B%
0l'
0a'
0E%
0F%
0K'
1K)
1N)
1P)
1X)
00
0/
0,
0%
0$
0#
0!
18%
1:%
1<%
1=%
1>%
1?%
1@%
1A%
1C%
1D%
1F%
10
1.
1-
1+
1*
1)
1(
1'
1&
1$
1"
1T
0S
0R
b10 M-
1>"
09"
16"
01"
0S$
0P$
0G$
1E$
0D$
1o"
1n"
1l"
1f"
1d"
1c"
1`"
#1210
b1101 F
#1250
0i
0G
0f
#1300
1i
1G
1f
1p"
1q"
1s"
1y"
1{"
1|"
1!#
b111 A
b11 B
b11001100111010 D
b110 E
b0 J
b1110 k
0d
1`
1_
1\
0Y
1W
0U
1Q
1N
1M
0o"
1k"
1j"
1g"
0d"
1b"
0`"
0F-
0E-
0C-
0;-
08-
00-
0/-
0--
0%-
0$-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0Y+
0W+
0M+
0J+
0B+
0?+
07+
04+
0,+
0)+
0~*
0{*
0s*
0p*
0h*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0!*
0w)
0t)
0l)
0i)
0a)
0^)
03)
02)
00)
0()
0%)
0{(
0z(
0x(
0p(
0o(
0m(
0d(
0c(
0a(
0Y(
0V(
0N(
0K(
0C(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0F'
0D'
0:'
07'
0/'
0,'
0$'
0!'
0w&
0t&
0k&
0h&
0`&
0]&
0U&
0R&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0{%
0x%
0o%
0l%
0d%
0a%
0Y%
0V%
0N%
0K%
06)
0-)
0+)
0~(
0s(
0i(
0g(
0\(
0S(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0W'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
1A-
1<-
19-
1+-
1#-
1x,
1r,
1j,
1b,
1_,
1T,
1H,
1=,
12,
1$,
1y+
1n+
1f+
1`+
1X+
1.)
1))
1&)
1v(
1n(
1e(
1_(
1W(
1O(
1L(
1A(
15(
1*(
1}'
1o'
1f'
1['
1S'
1M'
1E'
1,)
1t(
1;%
1](
1R(
1G(
1;(
10(
1%(
1l'
1a'
1E%
1K'
07-
06-
0s,
0g,
0],
0\,
0Q,
0E,
0:,
0/,
0v+
0k+
0a+
0$)
0#)
0`(
0T(
0J(
0I(
0>(
02(
0'(
0z'
0c'
0X'
0N'
0:%
1/
1%
0<%
0>%
0?%
0@%
0A%
0C%
0D%
0F%
1@-
1|,
1f,
1j+
1-)
1i(
1S(
1W'
00
0.
0-
0+
0*
0)
0(
0&
0$
0K)
0N)
0P)
0X)
08%
0;%
0=%
0E%
0/
0'
0%
0"
0T
1S
1R
b1000000 M-
0>"
19"
06"
11"
1P$
1O$
1N$
1K$
0H$
1G$
1F$
0E$
0n"
0l"
0k"
0j"
0g"
0f"
0c"
0b"
#1301
1-!
1,!
1*!
1$!
1"!
1!!
1|
0`)
0M%
1o"
1n"
1l"
1f"
1d"
1c"
1`"
0k)
0X%
0#*
0n%
0g*
0T&
0}*
0j&
0++
0v&
0L+
09'
1\)
1I%
1g)
1T%
1})
1j%
1c*
1P&
1y*
1f&
1'+
1r&
1H+
15'
#1310
b1110 F
#1350
0i
0G
0f
#1400
1i
1G
1f
1W$
1X$
1Y$
1\$
0_$
1`$
1a$
0b$
b1 A
b1 B
b11101100010 D
b100 E
b1001101000001011 J
b1001101000001011 K
b1111 k
0a
0`
1^
1Z
0X
0W
0P
0M
0L
0P$
0O$
1M$
1I$
0G$
0F$
1I-
1>-
13-
1(-
1z,
1o,
1d,
1Y,
1M,
1B,
17,
1,,
1~+
1s+
1h+
1]+
1P+
1E+
1:+
1/+
1#+
1v*
1k*
1`*
1T*
1I*
1>*
13*
1'*
1z)
1o)
1d)
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
0J-
04-
0)-
0{,
0-,
0i+
0^+
0Q+
00+
0$+
0l*
0(*
0p)
0e)
07)
0!)
0t(
0h(
0x'
0V'
0K'
0>'
0{&
0o&
0Y&
0s%
0]%
0R%
1J)
1L)
1M)
1N)
1U)
1X)
1Y)
1:)
1=)
1>)
1@)
1F)
1H)
1I)
17%
19%
1:%
1;%
1B%
1E%
1F%
1'%
1*%
1+%
1-%
13%
15%
16%
10
1/
1-
1'
1%
1$
1!
1@
1?
1=
17
15
14
11
0S
b10000 M-
1;"
09"
13"
01"
0N$
0M$
0K$
0I$
1H$
1E$
0q#
1p#
0o#
0n#
0j#
0e#
0c#
#1401
1z!
1y!
1x!
1u!
0r!
1q!
1p!
0o!
1P$
1O$
1N$
1K$
0H$
1G$
1F$
0E$
#1410
b1111 F
#1450
0i
0G
0f
#1500
1i
1G
1f
0r#
1s#
0t#
0u#
0y#
0~#
0"$
b111 A
b0 B
b110000010110111 D
b111 E
0C
b0 J
b0 K
b10000 k
1d
1b
1`
0^
1]
0\
0[
0Z
1W
1V
0Q
1M
1L
0e
1F-
1E-
1C-
1;-
18-
10-
1/-
1--
1%-
1$-
1"-
1w,
1v,
1t,
1l,
1i,
1a,
1^,
1V,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1Y+
1W+
1M+
1L+
1J+
1B+
1?+
17+
14+
1,+
1++
1)+
1~*
1}*
1{*
1s*
1p*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1a)
1`)
1^)
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
03"
0-
1,
0'
1#
1q#
1o#
1m#
0k#
1j#
0i#
0h#
0g#
1d#
1c#
0A-
09-
01-
0+-
0&-
0~,
0#-
0r,
0j,
0b,
0_,
0W,
0T,
0H,
0=,
05,
02,
0*,
0$,
0|+
0y+
0n+
0f+
0`+
0U+
0X+
0H+
0'+
0y*
0c*
0})
0g)
0\)
17)
1!)
1t(
1h(
1x'
1V'
1K'
1>'
1{&
1o&
1Y&
1s%
1]%
1R%
0p#
1n#
0m#
1k#
1i#
1h#
1g#
1e#
0d#
1J-
16-
1,-
14-
1!-
1)-
1~,
1{,
1g,
1],
1\,
1R,
1Q,
1E,
1:,
10,
1/,
1%,
1-,
1w+
1v+
1k+
1a+
1i+
1^+
1U+
1Q+
10+
1$+
1l*
1(*
1p)
1e)
07%
09%
0:%
0;%
0B%
0E%
0F%
0'%
0*%
0+%
0-%
03%
05%
06%
0J)
0?-
0L)
0M)
0)-
0N)
0p,
0e,
0Z,
0N,
0C,
08,
0U)
0!,
0t+
0X)
0Y)
0^+
0:)
0=)
0>)
0@)
0F)
0H)
0I)
00
0/
0,
0%
0$
0#
0!
0@
0?
0=
07
05
04
01
1K)
1M)
1O)
1P)
1Q)
1R)
1S)
1T)
1V)
1W)
1Y)
1T
1S
b10000000 M-
0;"
18"
#1501
0]!
1\!
0[!
0Z!
0V!
0Q!
0O!
1X+
0q#
1p#
0o#
0n#
0j#
0e#
0c#
0c+
1n+
1y+
1H,
1#-
19-
0U+
1`+
0k+
0v+
0E,
0~,
06-
1^+
0i+
1t+
1!,
1N,
1)-
1?-
0Y)
1X)
0W)
0V)
0R)
0M)
0K)
#1510
b10000 F
#1550
0i
0G
0f
#1600
1i
1G
1f
b11 A
b1 B
b11001001001001 D
b0 E
1C
b1001101000001011 K
b10001 k
0c
0b
1a
0`
0_
1^
0]
1[
1X
0V
1Q
0L
1e
0F-
0E-
0C-
0;-
08-
00-
0/-
0--
0%-
0$-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0Y+
0W+
0M+
0L+
0J+
0B+
0?+
07+
04+
0,+
0++
0)+
0~*
0}*
0{*
0s*
0p*
0h*
0g*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0#*
0!*
0w)
0t)
0l)
0k)
0i)
0a)
0`)
0^)
10"
1A-
11-
1+-
1&-
1~,
1r,
1j,
1b,
1_,
1W,
1T,
1=,
15,
12,
1*,
1$,
1|+
1f+
1c+
1U+
1H+
1'+
1y*
1c*
1})
1g)
1\)
1s$
1p$
1m$
1j$
1g$
1f$
0J-
0,-
04-
0!-
0)-
0{,
0g,
0],
0\,
0R,
0Q,
0:,
00,
0/,
0%,
0-,
0w+
0a+
0^+
0Q+
00+
0$+
0l*
0(*
0p)
0e)
1J)
1L)
1M)
1N)
1p,
1e,
1Z,
1C,
18,
1U)
1Y)
1:)
1=)
1>)
1@)
1F)
1H)
1I)
1@
1?
1=
17
15
14
11
0O)
0P)
0Q)
0S)
0T)
0T
0S
0R
b1 M-
1?"
08"
17"
00"
0s$
0p$
0m$
0j$
0g$
0f$
1O"
1L"
1I"
1F"
1C"
1B"
#1610
b10001 F
#1650
0i
0G
0f
#1700
1i
1G
1f
1P"
1S"
1V"
1Y"
1\"
1]"
b1 A
b110 B
b111111100001100 D
b10 E
0C
b1001101000001011 J
b11001100111010 K
b10010 k
0d
1b
0^
1\
1Z
1Y
1V
0Q
1P
1O
0M
0e
1F-
1E-
1C-
1;-
18-
10-
1/-
1--
1%-
1$-
1"-
1w,
1v,
1t,
1l,
1i,
1a,
1^,
1V,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1Y+
1W+
1M+
1L+
1J+
1B+
1?+
17+
14+
1,+
1++
1)+
1~*
1}*
1{*
1s*
1p*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1a)
1`)
1^)
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
07"
0=
1<
07
13
0O"
1M"
0I"
1G"
1E"
1D"
1A"
0A-
01-
0+-
0&-
0~,
0r,
0j,
0b,
0_,
0W,
0T,
0=,
05,
02,
0*,
0$,
0|+
0f+
0`+
0c+
0U+
0H+
0'+
0y*
0c*
0})
0g)
0\)
1J-
14-
1)-
1{,
1-,
1i+
1^+
1Q+
10+
1$+
1l*
1(*
1p)
1e)
07)
0!)
0t(
0h(
0x'
0V'
0K'
0>'
0{&
0o&
0Y&
0s%
0]%
0R%
0M"
0L"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
1,-
1!-
1g,
1],
1\,
1R,
1Q,
1:,
10,
1/,
1%,
1w+
1a+
1`+
0J)
0L)
0M)
0N)
0U)
0X)
0Y)
0:)
0=)
0>)
0@)
0F)
0H)
0I)
17%
19%
1:%
1;%
1B%
1E%
1F%
1'%
1*%
1+%
1-%
13%
15%
16%
05-
0*-
0f,
0[,
09,
0.,
0",
0j+
10
1/
1-
1'
1%
1$
1!
0@
0?
0<
05
04
03
01
1L)
1M)
1P)
1Q)
1T)
1U)
1V)
1X)
1?
1=
1<
1;
18
17
14
13
1S
b100 M-
0?"
1="
#1701
1{
1x
1u
1r
1o
1n
0_)
1O"
1L"
1I"
1F"
1C"
1B"
0"*
0D*
0f*
0*+
05+
1\)
1})
1A*
1c*
1'+
12+
#1710
b10010 F
#1750
0i
0G
0f
#1800
1i
1G
1f
b111 A
b101 B
b1101101100010010 D
b110 E
1C
b0 J
b1011100000010011 K
b10011 k
1c
0b
0a
1`
0Z
0W
1U
1Q
0P
1M
1L
1e
0F-
0E-
0C-
0;-
08-
00-
0/-
0--
0%-
0$-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0Y+
0W+
0M+
0L+
0J+
0B+
0?+
07+
04+
0,+
0++
0)+
0~*
0}*
0{*
0s*
0p*
0h*
0g*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0#*
0!*
0w)
0t)
0l)
0k)
0i)
0a)
0`)
0^)
1I-
1>-
15-
13-
1*-
1(-
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
19,
17,
1.,
1,,
1",
1~+
1s+
1j+
1h+
1]+
1P+
1E+
1:+
1/+
1#+
1v*
1k*
1`*
1T*
1I*
1>*
13*
1'*
1z)
1o)
1d)
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
15"
0-
1,
0'
1#
1A-
11-
1+-
1&-
1~,
1r,
1j,
1b,
1_,
1W,
1T,
1=,
15,
12,
1*,
1$,
1|+
1f+
1c+
1U+
1H+
15+
1*+
1y*
1f*
1D*
1"*
1g)
1_)
0L)
0M)
0p,
0P)
0e,
0Q)
0Z,
0C,
0T)
08,
0U)
0V)
0X)
0i+
0;+
00+
0l*
0J*
0(*
0e)
17)
1!)
1t(
1h(
1x'
1V'
1K'
1>'
1{&
1o&
1Y&
1s%
1]%
1R%
10#
1-#
1)#
1(#
1&#
1%#
1##
1"#
0J-
0,-
04-
0!-
0)-
0{,
0g,
0],
0\,
0R,
0Q,
0:,
00,
0/,
0%,
0-,
0w+
0a+
0^+
0Q+
02+
0$+
0A*
0p)
0?
0=
0<
0;
08
07
04
03
1O)
1P)
1Q)
1S)
1T)
1X)
1<)
1=)
1@)
1C)
1F)
1I)
07%
09%
0:%
0;%
0B%
0E%
0F%
0'%
0*%
0+%
0-%
03%
05%
06%
1J)
1L)
1M)
1N)
1p,
1e,
1Z,
1C,
18,
1U)
1Y)
1:)
1;+
1>)
1J*
1H)
00
0/
0,
0%
0$
0#
0!
1?
1;
1:
18
17
16
1@
1<
15
14
13
11
0O)
0P)
0Q)
0S)
0T)
0<)
0C)
0;
0:
08
07
06
1R
b1000000 M-
0="
19"
05"
11"
0P$
0N$
1H$
0F$
1E$
1D$
00#
0-#
0)#
0(#
0&#
0%#
0##
0"#
#1810
b10011 F
#1850
0i
0G
0f
#1900
1i
1G
1f
0W$
0Y$
1_$
0a$
1b$
1c$
b1 A
b111 B
b1111011011010011 D
b101 E
0C
b1001101000001011 J
b0 K
b10100 k
1d
1^
1]
0\
1Z
0Y
1W
1P
0M
0L
0e
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
01"
1S$
1M$
1L$
0K$
1I$
0H$
1F$
1J-
14-
1)-
1{,
1-,
1i+
1^+
1Q+
10+
1$+
1l*
1(*
1p)
1e)
07)
0!)
0t(
0h(
0x'
0V'
0K'
0>'
0{&
0o&
0Y&
0s%
0]%
0R%
0S$
1P$
1N$
0M$
0L$
1K$
0I$
0E$
0D$
0J)
0L)
0M)
0N)
0U)
0X)
0Y)
0:)
0=)
0>)
0@)
0F)
0H)
0I)
17%
19%
1:%
1;%
1B%
1E%
1F%
1'%
1*%
1+%
1-%
13%
15%
16%
10
1/
1-
1'
1%
1$
1!
0@
0?
0<
05
04
03
01
1T
0S
b100000 M-
1:"
09"
#1901
0z!
0x!
1r!
0p!
1o!
1n!
0P$
0N$
1H$
0F$
1E$
1D$
#1910
b10100 F
#1950
0i
0G
0f
#2000
1i
1G
1f
b11 A
b1 B
b1010111000111111 D
b10 E
b0 J
b1001101000001011 K
b10101 k
1b
1a
1_
0^
0]
1Y
0X
0V
0P
0O
1M
1I-
1>-
13-
1(-
1z,
1o,
1d,
1Y,
1M,
1B,
17,
1,,
1~+
1s+
1h+
1]+
1P+
1E+
1:+
1/+
1#+
1v*
1k*
1`*
1T*
1I*
1>*
13*
1'*
1z)
1o)
1d)
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0='
02'
0''
0z&
0n&
0c&
0X&
0M&
0A&
06&
0+&
0~%
0r%
0g%
0\%
0Q%
0J-
04-
0)-
0{,
0-,
0i+
0^+
0Q+
00+
0$+
0l*
0(*
0p)
0e)
17)
1!)
1t(
1h(
1x'
1V'
1K'
1>'
1{&
1o&
1Y&
1s%
1]%
1R%
1J)
1L)
1M)
1N)
1U)
1X)
1Y)
1:)
1=)
1>)
1@)
1F)
1H)
1I)
07%
09%
0:%
0;%
0B%
0E%
0F%
0'%
0*%
0+%
0-%
03%
05%
06%
00
0/
0-
0'
0%
0$
0!
1@
1?
1=
17
15
14
11
0T
1S
0R
b100 M-
1="
0:"
#2010
b10101 F
#2050
0i
0G
0f
#2100
1i
1G
1f
b110 A
b110 B
b1111001010011100 D
b1101101100010010 J
b1101101100010010 K
b10110 k
0d
0c
0_
1]
0Z
0Y
1X
1V
0Q
1P
1O
0N
1L
1F-
1E-
1C-
1;-
18-
10-
1/-
1--
1%-
1$-
1"-
1w,
1v,
1t,
1l,
1i,
1a,
1^,
1V,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1Y+
1W+
1M+
1L+
1J+
1B+
1?+
17+
14+
1,+
1++
1)+
1~*
1}*
1{*
1s*
1p*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1;*
18*
10*
1-*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1a)
1`)
1^)
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0P+
0E+
0:+
0/+
0#+
0v*
0k*
0`*
0T*
0I*
0>*
03*
0'*
0z)
0o)
0d)
0=
1<
07
13
13)
12)
10)
1()
1%)
1{(
1z(
1x(
1p(
1o(
1m(
1d(
1c(
1a(
1Y(
1V(
1N(
1K(
1C(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1F'
1D'
1:'
19'
17'
1/'
1,'
1$'
1!'
1w&
1v&
1t&
1k&
1j&
1h&
1`&
1]&
1U&
1T&
1R&
1J&
1G&
1>&
1;&
13&
10&
1(&
1%&
1{%
1x%
1o%
1n%
1l%
1d%
1a%
1Y%
1X%
1V%
1N%
1M%
1K%
0G-
0A-
0<-
0+-
0&-
0~,
0x,
0r,
0j,
0b,
0_,
0W,
0T,
0=,
02,
0*,
0$,
0f+
0`+
0c+
0U+
0H+
05+
0'+
0*+
0y*
0c*
0f*
0D*
0})
0"*
0g)
0\)
0_)
1J-
14-
1)-
1{,
1-,
1i+
1^+
1Q+
10+
1$+
1l*
1(*
1p)
1e)
04)
0.)
0))
0v(
0q(
0k(
0e(
0_(
0W(
0O(
0L(
0D(
0A(
0*(
0}'
0u'
0o'
0S'
0M'
0P'
0B'
05'
0"'
0r&
0u&
0f&
0P&
0S&
01&
0j%
0m%
0T%
0I%
0L%
1B-
17-
1!-
1s,
1g,
1],
1\,
1R,
1Q,
1:,
1/,
1%,
1a+
1`+
12+
1'+
1c*
1A*
1})
1\)
0J)
0L)
0M)
0N)
0U)
0X)
0Y)
0:)
0=)
0>)
0@)
0F)
0H)
0I)
1/)
1$)
1l(
1`(
1T(
1J(
1I(
1?(
1>(
1'(
1z'
1p'
1N'
1M'
1}&
1r&
1P&
1.&
1j%
1I%
0K-
0@-
0*-
0|,
0f,
0[,
0.,
0j+
0@
0?
0<
05
04
03
01
08)
0-)
0u(
0i(
0S(
0H(
0y'
0W'
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
17%
18%
1:%
1;%
1=%
1>%
1B%
1E%
1/
1,
1(
1'
1%
1$
1"
1!
1?
1<
18
17
15
14
12
11
#2110
b10110 F
#2150
0i
0G
0f
#2200
1i
1G
1f
b11 A
b11 B
b1010100000101111 D
b11 E
1C
b0 J
b0 K
b10111 k
1d
1c
0`
1_
0]
0[
1Y
0X
0V
1Q
0O
1N
0L
1e
0F-
0E-
0C-
0;-
08-
00-
0/-
0--
0%-
0$-
0"-
0w,
0v,
0t,
0l,
0i,
0a,
0^,
0V,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0Y+
0W+
0M+
0L+
0J+
0B+
0?+
07+
04+
0,+
0++
0)+
0~*
0}*
0{*
0s*
0p*
0h*
0g*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
00*
0-*
0$*
0#*
0!*
0w)
0t)
0l)
0k)
0i)
0a)
0`)
0^)
03)
02)
00)
0()
0%)
0{(
0z(
0x(
0p(
0o(
0m(
0d(
0c(
0a(
0Y(
0V(
0N(
0K(
0C(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0F'
0D'
0:'
09'
07'
0/'
0,'
0$'
0!'
0w&
0v&
0t&
0k&
0j&
0h&
0`&
0]&
0U&
0T&
0R&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0{%
0x%
0o%
0n%
0l%
0d%
0a%
0Y%
0X%
0V%
0N%
0M%
0K%
15"
0/
0,
0(
0'
0%
0$
0"
0!
0?
0<
08
07
05
04
02
01
1G-
1A-
1<-
1+-
1&-
1~,
1x,
1r,
1j,
1b,
1_,
1W,
1T,
1=,
12,
1*,
1$,
1f+
1c+
1U+
1H+
15+
1*+
1y*
1f*
1D*
1"*
1g)
1_)
14)
1.)
1))
1v(
1q(
1k(
1e(
1_(
1W(
1O(
1L(
1D(
1A(
1*(
1}'
1u'
1o'
1S'
1P'
1B'
15'
1"'
1u&
1f&
1S&
11&
1m%
1T%
1L%
11#
10#
1/#
1.#
1,#
1&#
1$#
1"#
0B-
07-
0!-
0s,
0g,
0],
0\,
0R,
0Q,
0:,
0/,
0%,
0a+
02+
0A*
0/)
0$)
0l(
0`(
0T(
0J(
0I(
0?(
0>(
0'(
0z'
0p'
0N'
0}&
0.&
1K-
1@-
1*-
1|,
1f,
1[,
1.,
1j+
18)
1-)
1u(
1i(
1S(
1H(
1y'
1W'
0J)
0K)
0M)
0N)
0P)
0Q)
0U)
0X)
07%
08%
0:%
0;%
0=%
0>%
0B%
0E%
1T
b1000 M-
0="
1<"
05"
14"
1Q#
1P#
1O#
1N#
1L#
1F#
1D#
1B#
01#
00#
0/#
0.#
0,#
0&#
0$#
0"#
#2210
b10111 F
#2250
0i
0G
0f
#2300
1i
1G
1f
1R#
1S#
1T#
1U#
1W#
1]#
1_#
1a#
b100 A
b111 B
b11011011001011 D
b110 E
0C
b11101100010 J
b11000 k
0b
0_
1^
1]
1[
1Z
0Y
1X
0U
1O
0N
0M
1L
0e
13)
12)
10)
1()
1%)
1{(
1z(
1x(
1p(
1o(
1m(
1d(
1c(
1a(
1Y(
1V(
1N(
1K(
1C(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1F'
1D'
1:'
19'
17'
1/'
1,'
1$'
1!'
1w&
1v&
1t&
1k&
1j&
1h&
1`&
1]&
1U&
1T&
1R&
1J&
1G&
1>&
1;&
13&
10&
1(&
1%&
1{%
1x%
1o%
1n%
1l%
1d%
1a%
1Y%
1X%
1V%
1N%
1M%
1K%
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1='
12'
1''
1z&
1n&
1c&
1X&
1M&
1A&
16&
1+&
1~%
1r%
1g%
1\%
1Q%
04"
0O#
0L#
1K#
1J#
1H#
1G#
0F#
1E#
0B#
04)
0.)
0))
0v(
0q(
0k(
0e(
0_(
0W(
0O(
0L(
0D(
0A(
0*(
0}'
0u'
0o'
0S'
0M'
0P'
0B'
05'
0"'
0r&
0u&
0f&
0P&
0S&
01&
0j%
0m%
0T%
0I%
0L%
07)
0!)
0t(
0h(
0x'
0V'
0K'
0>'
0{&
0o&
0Y&
0s%
0]%
0R%
0Q#
0P#
0N#
0K#
0J#
0H#
0G#
0E#
0D#
1/)
17)
1$)
1!)
1l(
1t(
1`(
1h(
1T(
1J(
1I(
1?(
1>(
1'(
1z'
1p'
1x'
1N'
1V'
1M'
1K'
1>'
1}&
1{&
1r&
1o&
1Y&
1P&
1.&
1s%
1j%
1]%
1R%
1I%
17%
19%
1:%
1;%
1B%
1E%
1F%
1'%
1*%
1+%
1-%
13%
15%
16%
07%
09%
0:%
0;%
0](
0R(
0G(
00(
0%(
0B%
0E%
0V'
0F%
0'%
0('
0*%
0{&
0+%
0-%
0Y&
07&
03%
0s%
05%
06%
0R%
10
1/
1,
1%
1$
1#
1!
00
0/
0,
0%
0$
0#
0!
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
1/
1+
1*
1(
1'
1&
0T
1R
b1000000 M-
0<"
19"
#2301
1M!
1L!
1K!
1J!
1H!
1B!
1@!
1>!
0c)
1Q#
1P#
1O#
1N#
1L#
1F#
1D#
1B#
0n)
0y)
0&*
0=*
0"+
09+
0O+
1])
1h)
1s)
1~)
17*
1z*
13+
1I+
0f)
0q)
0|)
0)*
0@*
0%+
0<+
0R+
1I)
1H)
1G)
1F)
1D)
1>)
1<)
1:)
#2310
b11000 F
#2350
0i
0G
0f
#2400
1i
1G
1f
b1 A
b101 B
b110110011011010 D
b101 E
1C
b1001101000001011 J
b1011100000010011 K
b11001 k
0d
1`
0[
1Y
0X
1V
0P
1N
0L
1e
1I-
1>-
13-
1(-
1z,
1o,
1d,
1Y,
1M,
1B,
17,
1,,
1~+
1s+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1v*
1k*
1`*
1T*
1I*
1@*
1>*
13*
1)*
1'*
1|)
1z)
1q)
1o)
1f)
1d)
03)
02)
00)
0()
0%)
0{(
0z(
0x(
0p(
0o(
0m(
0d(
0c(
0a(
0Y(
0V(
0N(
0K(
0C(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0F'
0D'
0<'
0:'
09'
07'
0/'
0,'
0&'
0$'
0!'
0w&
0v&
0t&
0m&
0k&
0j&
0h&
0`&
0]&
0U&
0T&
0R&
0J&
0G&
0>&
0;&
03&
00&
0*&
0(&
0%&
0{%
0x%
0q%
0o%
0n%
0l%
0f%
0d%
0a%
0[%
0Y%
0X%
0V%
0P%
0N%
0M%
0K%
11"
10
0/
1-
0+
0(
0&
1$
1#
0J-
04-
0)-
0{,
0-,
0i+
0^+
0:)
0Q+
0<)
00+
0>)
0$+
0l*
0D)
0F)
0(*
0G)
0H)
0p)
0I)
0e)
14)
1.)
1))
1v(
1q(
1k(
1e(
1_(
1W(
1O(
1L(
1D(
1A(
1*(
1}'
1u'
1o'
1S'
1P'
1B'
16'
15'
1~&
1"'
1u&
1g&
1f&
1S&
11&
1$&
1k%
1m%
1`%
1U%
1T%
1J%
1L%
1P$
1M$
1L$
0K$
0J$
1I$
0G$
1F$
0D$
1J)
1L)
1M)
1N)
1U)
1X)
1Y)
1:)
1=)
1>)
1@)
1F)
1H)
1I)
0/)
07)
0$)
0!)
0l(
0t(
0`(
0h(
0T(
0J(
0I(
0?(
0>(
0'(
0z'
0p'
0x'
0N'
0K'
0>'
0}&
0o&
0.&
0]%
1@
1?
1<
15
14
13
11
17%
19%
1:%
1;%
1](
1R(
1G(
10(
1%(
1B%
1F%
1'%
1('
1+%
17&
15%
1/
1%
1!
0<%
0=%
0>%
0@%
0A%
0)%
00%
0*
0#
1T
0S
b100000 M-
1:"
09"
12"
01"
0P$
0M$
0L$
1K$
1J$
0I$
1G$
0F$
1D$
03$
10$
1-$
1,$
1)$
0'$
1%$
0$$
#2410
b11001 F
#2450
0i
0G
0f
#2500
1i
1G
1f
04$
17$
1:$
1;$
1>$
0@$
1B$
0C$
b111 A
b1 B
b1111111101000100 D
b0 E
0C
b0 J
b1001101000001011 K
b11010 k
0c
1b
0a
0`
0]
1\
1[
1X
1U
0O
1M
1L
0e
06)
0+)
0~(
0s(
0g(
0\(
0Q(
0F(
0:(
0/(
0$(
0w'
0k'
0`'
0U'
0J'
0?'
0='
02'
0)'
0''
0z&
0p&
0n&
0c&
0X&
0M&
0A&
06&
0-&
0+&
0~%
0t%
0r%
0i%
0g%
0^%
0\%
0S%
0Q%
02"
0-
1,
0'
1#
1=
0<
17
03
02$
11$
00$
0/$
0,$
1+$
1*$
1'$
1$$
17)
1!)
1t(
1h(
1x'
1V'
1K'
1>'
1)%
1{&
1o&
1Y&
11%
1s%
14%
1]%
1R%
13$
12$
01$
1/$
0-$
0+$
0*$
0)$
0%$
07%
09%
0:%
0;%
0B%
0E%
0F%
0*%
0-%
00
0/
0,
0%
0$
0#
0!
0T
0R
b1 M-
1?"
0:"
#2501
0m!
1j!
1g!
1f!
1c!
0a!
1_!
0^!
1Y+
1F'
03$
10$
1-$
1,$
1)$
0'$
1%$
0$$
0z+
0g'
0>,
0+(
0I,
06(
0k,
0X(
1$-
1o(
0:-
0')
1E-
12)
0U+
0B'
1v+
1c'
1:,
1'(
1E,
12(
1g,
1T(
0~,
0k(
16-
1#)
0A-
0.)
1^+
0!,
0C,
0N,
0p,
1)-
0?-
1J-
0Y)
1V)
1S)
1R)
1O)
0M)
1K)
0J)
#2510
b11010 F
#2550
0i
0G
0f
#2600
1i
1G
1f
b11 A
b110 B
b1010110111011100 D
b10 E
1C
b1010100000101111 J
b1101101100010010 K
b11011 k
1a
1`
1]
0[
0X
0V
0Q
1P
1O
0L
1e
1F-
1C-
1;-
1:-
18-
10-
1/-
1--
1%-
1"-
1w,
1v,
1t,
1l,
1k,
1i,
1a,
1^,
1V,
1S,
1J,
1I,
1G,
1?,
1>,
1<,
14,
11,
1),
1(,
1&,
1{+
1z+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1W+
1O+
1M+
1L+
1J+
1B+
1?+
19+
17+
14+
1,+
1++
1)+
1"+
1~*
1}*
1{*
1s*
1p*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1F*
1C*
1=*
1;*
18*
10*
1-*
1&*
1$*
1#*
1!*
1y)
1w)
1t)
1n)
1l)
1k)
1i)
1c)
1a)
1`)
1^)
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0R+
0P+
0E+
0<+
0:+
0/+
0%+
0#+
0v*
0k*
0`*
0T*
0I*
0@*
0>*
03*
0)*
0'*
0|)
0z)
0q)
0o)
0f)
0d)
17"
10
1/
1.
1-
1+
1%
1#
1!
0@
1<
1:
19
07
16
04
13
12
01
0G-
0<-
06-
0+-
0&-
0x,
0r,
0g,
0j,
0b,
0_,
0W,
0T,
0E,
0:,
0=,
02,
0*,
0$,
0v+
0f+
0`+
0c+
0I+
0H+
03+
05+
0'+
0*+
0z*
0y*
0c*
0f*
0D*
07*
0~)
0})
0"*
0s)
0h)
0g)
0])
0\)
0_)
1?-
14-
1{,
1p,
1N,
1C,
1-,
1!,
1i+
1Q+
1<)
10+
1$+
1l*
1D)
1(*
1G)
1p)
1e)
0O"
1M"
1K"
1H"
1G"
0F"
1E"
1D"
0C"
1@"
1B-
17-
1!-
1s,
1g,
1],
1\,
1R,
1Q,
1:,
1/,
1%,
1a+
1`+
1R+
1<+
12+
1'+
1%+
1c*
1A*
1@*
1)*
1})
1|)
1q)
1f)
1\)
0K)
0L)
0N)
0O)
0R)
0S)
0U)
0V)
0X)
0=)
0@)
0K-
0@-
0*-
0|,
0f,
0[,
0.,
0j+
0:)
0<)
0>)
0D)
0F)
0G)
0H)
0I)
0?
0=
0<
0:
09
06
05
03
02
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
1?
1<
18
17
15
14
12
11
1S
b100 M-
0?"
1="
07"
15"
1/#
1.#
1-#
1+#
1*#
1)#
1'#
1&#
1$#
1"#
1O"
0M"
0K"
0H"
0G"
1F"
0E"
0D"
1C"
0@"
#2610
b11011 F
#2650
0i
0G
0f
#2700
1i
1G
1f
14#
15#
16#
18#
19#
1:#
1<#
1=#
1?#
1A#
b1110100101001110 D
b111 E
0C
b11100 k
1c
0`
0]
0Z
1V
0e
05"
10#
0-#
0*#
0'#
1##
00#
0/#
0.#
0+#
0)#
0&#
0$#
0##
0"#
1T
1R
b10000000 M-
0="
18"
#2701
1;!
1:!
19!
17!
16!
15!
13!
12!
10!
1.!
0x)
1/#
1.#
1-#
1+#
1*#
1)#
1'#
1&#
1$#
1"#
0%*
01*
0G*
0R*
0^*
0t*
0!+
08+
0N+
1s)
1~)
1,*
1B*
1M*
1Y*
1o*
1z*
13+
1I+
0|)
0)*
05*
0K*
0V*
0b*
0x*
0%+
0<+
0R+
1G)
1F)
1E)
1C)
1B)
1A)
1?)
1>)
1<)
1:)
#2710
b11100 F
#2750
0i
0G
0f
#2800
1i
1G
1f
b110 A
b0 B
b1000011101111001 D
b0 E
b1101101100010010 J
b11001001001001 K
b11101 k
1d
0c
0b
1`
1_
1[
1Z
0Y
0W
0V
0P
0O
0N
1L
1K-
1I-
1@-
1>-
13-
1*-
1(-
1|,
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
17,
1.,
1,,
1~+
1s+
1j+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1x*
1v*
1k*
1b*
1`*
1V*
1T*
1K*
1I*
1>*
15*
13*
1)*
1'*
1|)
1z)
1o)
1d)
13)
10)
1()
1')
1%)
1{(
1z(
1x(
1p(
1m(
1d(
1c(
1a(
1Y(
1X(
1V(
1N(
1K(
1C(
1@(
17(
16(
14(
1,(
1+(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1g'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1D'
1<'
1:'
19'
17'
1/'
1,'
1&'
1$'
1!'
1w&
1v&
1t&
1m&
1k&
1j&
1h&
1`&
1]&
1U&
1T&
1R&
1J&
1G&
1>&
1;&
13&
10&
1*&
1(&
1%&
1{%
1x%
1q%
1o%
1n%
1l%
1f%
1d%
1a%
1[%
1Y%
1X%
1V%
1P%
1N%
1M%
1K%
00
0/
0.
0-
0+
0%
0#
0!
0?
1>
1=
1:
19
07
16
04
13
02
0J)
0K)
0M)
0N)
0p,
0P)
0e,
0Q)
0Z,
0C,
08,
0U)
0X)
0i+
0:)
0<)
0;+
00+
0>)
0?)
0l*
0A)
0B)
0C)
0J*
0E)
0F)
0(*
0G)
0e)
04)
0))
0#)
0v(
0q(
0e(
0_(
0T(
0W(
0O(
0L(
0D(
0A(
02(
0'(
0*(
0}'
0u'
0o'
0c'
0S'
0M'
0P'
06'
0;'
05'
0~&
0%'
0"'
0r&
0u&
0g&
0l&
0f&
0a&
0P&
0S&
0K&
0?&
04&
01&
0$&
0|%
0k%
0p%
0j%
0m%
0`%
0e%
0U%
0T%
0J%
0I%
0L%
0>
0=
0<
0:
09
08
06
05
03
01
1O)
1P)
1Q)
1S)
1T)
1X)
1<)
1=)
1@)
1C)
1F)
1I)
1/)
1$)
1l(
1`(
1T(
1J(
1I(
1?(
1>(
1'(
1z'
1p'
1N'
1M'
1?'
16'
1)'
1~&
1}&
1r&
1p&
1g&
1\&
1P&
1F&
1:&
1/&
1.&
1-&
1w%
1t%
1k%
1j%
1i%
1`%
1^%
1S%
1I%
1@
1=
1:
17
14
13
08)
0-)
0u(
0i(
0S(
0H(
0y'
0W'
0'%
0?'
0)%
0)'
0+%
0p&
0e&
0O&
0C&
08&
01%
0"&
03%
0t%
04%
0i%
05%
06%
17%
18%
1:%
1;%
1=%
1>%
1B%
1E%
1'%
1)%
1+%
1,%
1.%
1/%
10%
12%
13%
14%
1/
1,
1(
1'
1%
1$
1"
1!
0T
0S
0R
b1 M-
1?"
08"
#2810
b11101 F
#2850
0i
0G
0f
#2900
1i
1G
1f
b11 A
b100 B
b1100101001011001 D
b11 E
1C
b1010100000101111 J
b11101100010 K
b11110 k
0_
0\
0Z
1Y
1V
1O
1N
0L
1e
03)
00)
0()
0')
0%)
0{(
0z(
0x(
0p(
0m(
0d(
0c(
0a(
0Y(
0X(
0V(
0N(
0K(
0C(
0@(
07(
06(
04(
0,(
0+(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0g'
0e'
0]'
0Z'
0R'
0Q'
0O'
0G'
0D'
0<'
0:'
09'
07'
0/'
0,'
0&'
0$'
0!'
0w&
0v&
0t&
0m&
0k&
0j&
0h&
0`&
0]&
0U&
0T&
0R&
0J&
0G&
0>&
0;&
03&
00&
0*&
0(&
0%&
0{%
0x%
0q%
0o%
0n%
0l%
0f%
0d%
0a%
0[%
0Y%
0X%
0V%
0P%
0N%
0M%
0K%
17"
0/
1.
1-
1*
1)
0'
1&
0$
1#
0"
0@
1?
0=
1;
18
16
04
03
14)
1))
1#)
1v(
1q(
1e(
1_(
1W(
1O(
1L(
1D(
1A(
12(
1*(
1}'
1u'
1o'
1c'
1S'
1P'
1;'
15'
1%'
1"'
1u&
1l&
1f&
1a&
1S&
1K&
1?&
14&
11&
1$&
1|%
1p%
1m%
1e%
1U%
1T%
1J%
1L%
1K"
1D"
0C"
0B"
1A"
1@"
0/)
0$)
0l(
0`(
0J(
0I(
0?(
0>(
0z'
0p'
0N'
0}&
0\&
0F&
0:&
0/&
0.&
0-&
0w%
0^%
0S%
18)
1-)
1u(
1i(
1S(
1H(
1y'
1W'
1e&
1O&
1C&
18&
11%
1"&
15%
16%
07%
08%
0:%
0;%
0=%
0>%
0B%
0E%
0,%
0.%
0/%
00%
10
1/
1+
02%
0,
0*
0)
0(
0&
1T
1S
b1000 M-
0?"
1<"
07"
14"
0P#
0O#
1M#
0L#
1K#
1H#
0D#
1C#
0K"
0D"
1C"
1B"
0A"
0@"
#2910
b11110 F
#2950
0i
0G
0f
#3000
1i
1G
1f
0S#
0T#
1V#
0W#
1X#
1[#
0_#
1`#
b1 A
b101 B
b1110001001110110 D
b10 E
0C
b1001101000001011 J
b110110011011010 K
b11111 k
0d
1c
1b
0a
1_
0Y
1W
1Q
0M
0e
0F-
0C-
0;-
0:-
08-
00-
0/-
0--
0%-
0"-
0w,
0v,
0t,
0l,
0k,
0i,
0a,
0^,
0V,
0S,
0J,
0I,
0G,
0?,
0>,
0<,
04,
01,
0),
0(,
0&,
0{+
0z+
0x+
0p+
0m+
0e+
0d+
0b+
0Z+
0W+
0O+
0M+
0L+
0J+
0B+
0?+
09+
07+
04+
0,+
0++
0)+
0"+
0~*
0}*
0{*
0s*
0p*
0h*
0g*
0e*
0]*
0Z*
0Q*
0N*
0F*
0C*
0=*
0;*
08*
00*
0-*
0&*
0$*
0#*
0!*
0y)
0w)
0t)
0n)
0l)
0k)
0i)
0c)
0a)
0`)
0^)
16)
1+)
1~(
1s(
1g(
1\(
1Q(
1F(
1:(
1/(
1$(
1w'
1k'
1`'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1c&
1X&
1M&
1A&
16&
1-&
1+&
1~%
1t%
1r%
1i%
1g%
1^%
1\%
1S%
1Q%
04"
0Q#
1P#
1O#
0N#
1L#
0F#
1D#
1G-
1<-
16-
1+-
1&-
1x,
1r,
1j,
1b,
1_,
1W,
1T,
1E,
1=,
12,
1*,
1$,
1v+
1f+
1c+
1N+
1H+
18+
15+
1*+
1!+
1y*
1t*
1f*
1^*
1R*
1G*
1D*
17*
11*
1%*
1"*
1x)
1h)
1g)
1])
1_)
0,)
0!)
0h(
0](
0;(
00(
0x'
0l'
0V'
0'%
0>'
0)%
0{&
0+%
0o&
0Y&
01%
03%
0s%
04%
05%
0]%
06%
0R%
1Q#
1N#
0M#
0K#
0H#
1F#
0C#
0B-
07-
0?-
04-
0!-
0s,
0{,
0],
0\,
0R,
0Q,
0N,
0/,
0%,
0-,
0!,
0a+
0Q+
02+
0$+
0o*
0Y*
0M*
0B*
0A*
0,*
0p)
18%
19%
1;%
1<%
1?%
1@%
1B%
1C%
1E%
00
0/
0.
0-
0+
0%
0#
0!
1'%
1*%
1+%
1-%
13%
15%
16%
1K)
1L)
1N)
1e,
1Z,
1R)
18,
1U)
1V)
1:)
1;+
1>)
1J*
1H)
10
1/
1-
1'
1%
1$
1!
1=
1<
19
15
13
12
0P)
0Q)
0T)
0<)
0C)
0;
08
07
0T
b100 M-
1="
0<"
#3001
0L!
0K!
1I!
0H!
1G!
1D!
0@!
1?!
1n)
1[%
0P#
0O#
1M#
0L#
1K#
1H#
0D#
1C#
1y)
1f%
02*
0}%
1=*
1*&
0H*
05&
0j*
0W&
19+
1&'
0D+
01'
0h)
0U%
0s)
0`%
1,*
1w%
07*
0$&
1B*
1/&
1d*
1Q&
03+
0~&
1>+
1+'
#3010
b11111 F
#3050
0i
0G
0f
#3100
1i
1G
1f
b101 A
b110 B
b1001101100000100 D
b111 E
1C
b110110011011010 J
b1101101100010010 K
b100000 k
0c
0`
0_
0^
1\
1Y
1X
0W
0V
0Q
1P
1L
1e
1F-
1C-
1;-
1:-
18-
10-
1/-
1--
1%-
1"-
1w,
1v,
1t,
1l,
1k,
1i,
1a,
1^,
1V,
1S,
1J,
1I,
1G,
1?,
1>,
1<,
14,
11,
1),
1(,
1&,
1{+
1z+
1x+
1p+
1m+
1e+
1d+
1b+
1Z+
1W+
1O+
1M+
1L+
1J+
1D+
1B+
1?+
17+
14+
1,+
1++
1)+
1"+
1~*
1}*
1{*
1s*
1p*
1j*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1H*
1F*
1C*
1;*
18*
12*
10*
1-*
1&*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1c)
1a)
1`)
1^)
0I-
0>-
03-
0(-
0z,
0o,
0d,
0Y,
0M,
0B,
07,
0,,
0~+
0s+
0h+
0]+
0R+
0P+
0G+
0E+
0:+
0/+
0%+
0#+
0v*
0m*
0k*
0`*
0T*
0K*
0I*
0>*
05*
03*
0)*
0'*
0z)
0o)
0f)
0d)
15"
00
1,
1*
1)
0'
1&
0$
1#
1"
0!
0G-
0<-
06-
0+-
0&-
0x,
0r,
0g,
0j,
0b,
0_,
0W,
0T,
0E,
0:,
0=,
02,
0*,
0$,
0v+
0f+
0`+
0c+
0I+
0N+
0H+
0>+
08+
05+
0'+
0*+
0z*
0!+
0y*
0t*
0d*
0c*
0f*
0^*
0R*
0B*
0G*
0D*
0,*
01*
0~)
0%*
0})
0"*
0x)
0g)
0])
0\)
0_)
1?-
14-
1{,
1p,
1N,
1C,
1-,
1!,
1i+
1Q+
1;)
10+
1$+
1l*
1C)
1E)
1(*
1p)
1e)
0.#
0-#
0+#
0*#
1(#
0'#
1%#
0$#
1B-
17-
1!-
1s,
1g,
1],
1\,
1R,
1Q,
1:,
1/,
1%,
1a+
1`+
1R+
1I+
1G+
13+
12+
1'+
1%+
1z*
1o*
1m*
1c*
1Y*
1M*
1K*
1B*
1A*
15*
1,*
1)*
1~)
1})
1s)
1f)
1\)
0K)
0L)
0N)
0O)
0R)
0S)
0U)
0V)
0X)
0=)
0H)
0K-
0@-
0*-
0|,
0f,
0[,
0.,
0j+
0:)
0R+
0;)
0<+
0>)
0%+
0x*
0@)
0b*
0V*
0C)
0K*
0E)
05*
0F)
0)*
0|)
0I)
0?
0=
0<
0:
09
06
05
03
02
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
1:)
1<)
1>)
1?)
1A)
1B)
1C)
1E)
1F)
1G)
1?
1<
18
17
15
14
12
11
1T
1R
b10000000 M-
0="
18"
05"
10"
1q$
1k$
1j$
1h$
1g$
1d$
1.#
1-#
1+#
1*#
0(#
1'#
0%#
1$#
#3110
b100000 F
#3150
0i
0G
0f
#3200
1i
1G
1f
1v$
1|$
1}$
1!%
1"%
1%%
b100 A
b0 B
b1101100100101000 D
b101 E
b11101100010 J
b11001001001001 K
b100001 k
0b
1a
1_
0[
1V
0P
0O
0N
1K-
1I-
1@-
1>-
13-
1*-
1(-
1|,
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
17,
1.,
1,,
1~+
1s+
1j+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1x*
1v*
1k*
1b*
1`*
1V*
1T*
1K*
1I*
1>*
15*
13*
1)*
1'*
1|)
1z)
1o)
1d)
0?
1>
1=
1:
19
07
16
04
13
02
0q$
1p$
1n$
0j$
1e$
13)
10)
1()
1')
1%)
1{(
1z(
1x(
1p(
1m(
1d(
1c(
1a(
1Y(
1X(
1V(
1N(
1K(
1C(
1@(
17(
16(
14(
1,(
1+(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1g'
1e'
1]'
1Z'
1R'
1Q'
1O'
1G'
1D'
1<'
1:'
19'
17'
11'
1/'
1,'
1$'
1!'
1w&
1v&
1t&
1m&
1k&
1j&
1h&
1`&
1]&
1W&
1U&
1T&
1R&
1J&
1G&
1>&
1;&
15&
13&
10&
1(&
1%&
1}%
1{%
1x%
1q%
1o%
1n%
1l%
1d%
1a%
1Y%
1X%
1V%
1P%
1N%
1M%
1K%
0J)
0K)
0M)
0N)
0p,
0P)
0e,
0Q)
0Z,
0C,
08,
0U)
0X)
0i+
0:)
0<)
0;+
00+
0>)
0?)
0l*
0A)
0B)
0C)
0J*
0E)
0F)
0(*
0G)
0e)
04)
0))
0#)
0v(
0q(
0e(
0_(
0T(
0W(
0O(
0L(
0D(
0A(
02(
0'(
0*(
0}'
0u'
0o'
0c'
0S'
0M'
0P'
06'
0;'
05'
0+'
0%'
0"'
0r&
0u&
0g&
0l&
0f&
0a&
0Q&
0P&
0S&
0K&
0?&
0/&
04&
01&
0w%
0|%
0k%
0p%
0j%
0m%
0e%
0T%
0J%
0I%
0L%
0>
0=
0<
0:
09
08
06
05
03
01
1O)
1P)
1Q)
1S)
1T)
1X)
1<)
1=)
1@)
1C)
1F)
1I)
1/)
1$)
1,)
1!)
1l(
1`(
1h(
1](
1T(
1J(
1I(
1?(
1>(
1;(
10(
1'(
1z'
1p'
1x'
1l'
1N'
1V'
1M'
16'
1>'
1~&
1}&
1{&
1r&
1g&
1o&
1\&
1Y&
1P&
1F&
1:&
1/&
1.&
1w%
1k%
1s%
1j%
1`%
1]%
1R%
1I%
1@
1=
1:
17
14
13
08%
09%
0;%
0<%
0](
0R(
0G(
0?%
0@%
00(
0%(
0B%
0C%
0E%
0V'
0'%
0('
0*%
0{&
0+%
0-%
0Y&
07&
03%
0s%
05%
06%
0R%
0/
0-
0,
0*
0)
0&
0%
0#
0"
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
1/
1+
1*
1(
1'
1&
0S
b100000 M-
1:"
08"
12"
00"
0p$
0n$
0k$
0h$
0g$
0e$
0d$
02$
0/$
1.$
0-$
0,$
1+$
0)$
1'$
0&$
1$$
#3201
1-"
1'"
1&"
1$"
1#"
1~!
1q$
1k$
1j$
1h$
1g$
1d$
#3210
b100001 F
#3250
0i
0G
0f
#3300
1i
1G
1f
05$
08$
19$
0:$
0;$
1<$
0>$
1@$
0A$
1C$
b110 A
b100010100011100 D
b1101101100010010 J
b100010 k
1b
1`
0_
1Z
0Y
0X
0U
1M
11$
1/$
0.$
1)$
0($
0'$
0$$
08)
06)
0-)
0+)
0~(
0u(
0s(
0i(
0g(
0\(
0S(
0Q(
0H(
0F(
0:(
0/(
0$(
0y'
0w'
0k'
0`'
0W'
0U'
0J'
0?'
0='
02'
0)'
0''
0z&
0p&
0n&
0e&
0c&
0X&
0O&
0M&
0C&
0A&
08&
06&
0+&
0"&
0~%
0t%
0r%
0i%
0g%
0\%
0Q%
17%
18%
1:%
1;%
1](
1R(
1G(
10(
1%(
1B%
1V'
1'%
1('
1{&
1+%
1,%
1Y&
1.%
1/%
17&
12%
1s%
14%
1R%
1,
1%
1$
1"
1!
0<%
0@%
0A%
0*%
0-%
06%
0+
0*
0&
#3301
0l!
0i!
1h!
0g!
0f!
1e!
0c!
1a!
0`!
1^!
#3310
b100010 F
#3350
0i
0G
0f
#3400
1i
1G
1f
16$
18$
09$
1>$
0?$
0@$
0C$
b100 A
b110 B
b100011011010 D
0C
b11101100010 J
b1101101100010010 K
b100011 k
1c
0b
1^
1]
0\
0Z
1Y
0V
1P
1O
0M
0e
0K-
0I-
0@-
0>-
03-
0*-
0(-
0|,
0z,
0o,
0f,
0d,
0[,
0Y,
0M,
0B,
07,
0.,
0,,
0~+
0s+
0j+
0h+
0]+
0R+
0P+
0E+
0<+
0:+
0/+
0%+
0#+
0x*
0v*
0k*
0b*
0`*
0V*
0T*
0K*
0I*
0>*
05*
03*
0)*
0'*
0|)
0z)
0o)
0d)
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
02"
0@
1?
0=
1;
18
16
04
03
12$
01$
1-$
1,$
0+$
0)$
1($
0%$
1J)
1K)
1M)
1N)
1p,
1e,
1Z,
1C,
18,
1U)
1i+
1:)
1;+
10+
1>)
1?)
1l*
1A)
1B)
1J*
1E)
1(*
1G)
1e)
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0)%
0('
0{&
0+%
0,%
0Y&
0.%
0/%
00%
07&
02%
03%
0s%
04%
0R%
02$
0/$
1.$
0-$
0,$
1+$
1'$
1%$
1$$
0O)
0S)
0T)
0=)
0@)
0I)
0/
0,
0(
0'
0%
0$
0"
0!
1<
15
14
12
11
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
1/
1+
1*
1(
1'
1&
0;
0:
06
#3401
1k!
1i!
0h!
1c!
0b!
0a!
0^!
11$
1/$
0.$
1)$
0($
0'$
0$$
#3410
b100011 F
#3450
0i
0G
0f
#3500
1i
1G
1f
b0 A
b11 B
b1001100110111010 D
b110 E
b11001001001001 J
b1100101001011001 K
b100100 k
1_
0^
1\
1X
1U
1Q
0O
0L
0H-
0F-
0C-
0;-
0:-
08-
00-
0--
0'-
0%-
0"-
0y,
0w,
0t,
0l,
0k,
0i,
0c,
0a,
0^,
0X,
0V,
0U,
0S,
0J,
0G,
0?,
0<,
04,
01,
0),
0(,
0&,
0{+
0z+
0x+
0r+
0p+
0o+
0m+
0e+
0b+
0Z+
0W+
0O+
0M+
0L+
0J+
0D+
0B+
0?+
07+
04+
0,+
0++
0)+
0"+
0~*
0}*
0{*
0s*
0p*
0j*
0h*
0g*
0e*
0]*
0Z*
0Q*
0N*
0H*
0F*
0C*
0;*
08*
02*
00*
0-*
0&*
0$*
0#*
0!*
0w)
0t)
0l)
0k)
0i)
0c)
0a)
0`)
0^)
10
0/
1-
0+
0(
0&
1$
1#
0?
1>
1=
1:
19
07
16
04
13
02
1G-
1<-
16-
1&-
1x,
1j,
1b,
1_,
1W,
1T,
1=,
12,
1*,
1$,
1v+
1l+
1k+
1f+
1c+
1N+
1H+
1>+
18+
15+
1*+
1!+
1y*
1t*
1d*
1f*
1^*
1R*
1G*
1D*
11*
1%*
1"*
1x)
1g)
1])
1_)
07-
0\,
0:,
0/,
0%,
0u+
0a+
0`+
0G+
03+
02+
0o*
0m*
0Y*
0M*
0A*
0s)
0f)
1@-
1.,
1W)
1j+
1;)
1<+
1x*
1@)
1b*
1V*
1|)
1I)
0K)
0U)
1@
17
12
0X)
0<)
0?)
0A)
0B)
0G)
0>
09
08
06
03
0T
1S
b1000000 M-
0:"
19"
#3510
b100100 F
#3550
0i
0G
0f
#3600
1i
1G
1f
b101 A
b10 B
b10111001 D
b111 E
b100010100011100 J
b1010110111011100 K
b100101 k
1d
0c
0\
0Y
0X
0U
0Q
1N
1L
1H-
1F-
1C-
1;-
1:-
18-
10-
1--
1'-
1%-
1"-
1y,
1w,
1t,
1l,
1k,
1i,
1c,
1a,
1^,
1X,
1V,
1U,
1S,
1J,
1G,
1?,
1<,
14,
11,
1),
1(,
1&,
1{+
1z+
1x+
1r+
1p+
1o+
1m+
1e+
1b+
1Z+
1W+
1O+
1M+
1L+
1J+
1D+
1B+
1?+
17+
14+
1,+
1++
1)+
1"+
1~*
1}*
1{*
1s*
1p*
1j*
1h*
1g*
1e*
1]*
1Z*
1Q*
1N*
1H*
1F*
1C*
1;*
18*
12*
10*
1-*
1&*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1c)
1a)
1`)
1^)
05)
03)
00)
0()
0')
0%)
0{(
0x(
0r(
0p(
0m(
0f(
0d(
0a(
0Y(
0X(
0V(
0P(
0N(
0K(
0E(
0C(
0B(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0g'
0e'
0_'
0]'
0\'
0Z'
0R'
0O'
0G'
0D'
0<'
0:'
09'
07'
01'
0/'
0,'
0$'
0!'
0w&
0v&
0t&
0m&
0k&
0j&
0h&
0`&
0]&
0W&
0U&
0T&
0R&
0J&
0G&
0>&
0;&
05&
03&
00&
0(&
0%&
0}%
0{%
0x%
0q%
0o%
0n%
0l%
0d%
0a%
0Y%
0X%
0V%
0P%
0N%
0M%
0K%
00
1/
0-
1+
1(
1&
0$
0#
0B-
0G-
0<-
06-
0!-
0&-
0s,
0x,
0g,
0j,
0],
0b,
0_,
0R,
0W,
0Q,
0T,
0=,
02,
0*,
0$,
0v+
0l+
0k+
0f+
0c+
0I+
0N+
0H+
0>+
08+
05+
0'+
0*+
0z*
0!+
0y*
0t*
0d*
0c*
0f*
0^*
0R*
0B*
0G*
0D*
0,*
01*
0~)
0%*
0})
0"*
0x)
0g)
0])
0\)
0_)
14)
1))
1#)
1q(
1e(
1W(
1O(
1L(
1D(
1A(
1*(
1}'
1u'
1o'
1c'
1Y'
1X'
1S'
1P'
1;'
15'
1+'
1%'
1"'
1u&
1l&
1f&
1a&
1Q&
1S&
1K&
1?&
14&
11&
1|%
1p%
1m%
1e%
1T%
1J%
1L%
1K-
1B-
17-
1*-
1!-
1|,
1s,
1g,
1f,
1],
1\,
1[,
1R,
1Q,
1:,
1/,
1%,
1u+
1a+
1`+
1R+
1I+
1G+
13+
12+
1'+
1%+
1z*
1o*
1m*
1c*
1Y*
1M*
1K*
1B*
1A*
15*
1,*
1)*
1~)
1})
1s)
1f)
1\)
0$)
0,)
0I(
0'(
0z'
0p'
0x'
0l'
0a'
0N'
0M'
0>'
0~&
0}&
0o&
0\&
0F&
0:&
0.&
0`%
0]%
0J)
0K-
0@-
0M)
0*-
0N)
0|,
0P)
0f,
0Q)
0[,
0.,
0W)
0j+
0:)
0R+
0;)
0<+
0>)
0%+
0x*
0@)
0b*
0V*
0C)
0K*
0E)
05*
0F)
0)*
0|)
0I)
18%
1R(
10(
1%(
1B%
1C%
1D%
1V'
1'%
1('
1+%
17&
15%
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
1:)
1<)
1>)
1?)
1A)
1B)
1C)
1E)
1F)
1G)
1.
1-
1,
1"
0@
0=
0<
0:
07
05
02
01
0=%
0@%
0A%
0E%
0)%
00%
0/
0+
0*
0'
1>
1=
1<
1:
19
18
16
15
13
11
1T
b10000000 M-
09"
18"
#3610
b100101 F
#3650
0i
0G
0f
#3700
1i
1G
1f
b0 A
b110 B
b1101010110110 D
b101 E
b11001001001001 J
b1101101100010010 K
b100110 k
0d
1c
1b
0a
1[
1Y
1X
1O
0N
0L
15)
13)
10)
1()
1')
1%)
1{(
1x(
1r(
1p(
1m(
1f(
1d(
1a(
1Y(
1X(
1V(
1P(
1N(
1K(
1E(
1C(
1B(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1g'
1e'
1_'
1]'
1\'
1Z'
1R'
1O'
1G'
1D'
1<'
1:'
19'
17'
11'
1/'
1,'
1$'
1!'
1w&
1v&
1t&
1m&
1k&
1j&
1h&
1`&
1]&
1W&
1U&
1T&
1R&
1J&
1G&
1>&
1;&
15&
13&
10&
1(&
1%&
1}%
1{%
1x%
1q%
1o%
1n%
1l%
1d%
1a%
1Y%
1X%
1V%
1P%
1N%
1M%
1K%
10
1/
0.
0,
0(
1'
0&
1%
1$
0"
1!
1?
0>
0=
0:
09
17
06
14
03
12
0/)
04)
0))
0#)
0l(
0q(
0`(
0e(
0T(
0W(
0J(
0O(
0L(
0?(
0D(
0>(
0A(
0*(
0}'
0u'
0o'
0c'
0Y'
0X'
0S'
0P'
06'
0;'
05'
0+'
0%'
0"'
0r&
0u&
0g&
0l&
0f&
0a&
0Q&
0P&
0S&
0K&
0?&
0/&
04&
01&
0w%
0|%
0k%
0p%
0j%
0m%
0e%
0T%
0J%
0I%
0L%
1/)
1$)
1,)
1l(
1`(
1](
1T(
1J(
1I(
1?(
1G(
1>(
1'(
1z'
1p'
1x'
1l'
1a'
1N'
1M'
16'
1>'
1~&
1}&
1{&
1r&
1g&
1o&
1\&
1Y&
1P&
1F&
1:&
1/&
1.&
1w%
1k%
1s%
1j%
1`%
1]%
1R%
1I%
08%
0<%
0](
0R(
0>%
0G(
00(
0%(
0B%
0C%
0D%
0V'
0'%
0('
0*%
0{&
0+%
0-%
0Y&
07&
03%
0s%
05%
06%
0R%
00
0/
0-
0'
0%
0$
0!
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
10
1-
1*
1'
1$
1#
0S
b100000 M-
1:"
08"
#3710
b100110 F
#3750
0i
0G
0f
#3800
1i
1G
1f
b110 A
b0 B
b1001101101111110 D
b11 E
1C
b1101101100010010 J
b11001001001001 K
b100111 k
1a
1^
0]
1\
1U
0P
0O
1M
1L
1e
1K-
1I-
1@-
1>-
13-
1*-
1(-
1|,
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
17,
1.,
1,,
1~+
1s+
1j+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1x*
1v*
1k*
1b*
1`*
1V*
1T*
1K*
1I*
1>*
15*
13*
1)*
1'*
1|)
1z)
1o)
1d)
08)
06)
0-)
0+)
0~(
0u(
0s(
0i(
0g(
0\(
0S(
0Q(
0H(
0F(
0:(
0/(
0$(
0y'
0w'
0k'
0`'
0W'
0U'
0J'
0?'
0='
02'
0)'
0''
0z&
0p&
0n&
0e&
0c&
0X&
0O&
0M&
0C&
0A&
08&
06&
0+&
0"&
0~%
0t%
0r%
0i%
0g%
0\%
0Q%
12"
00
1/
0-
1+
1(
1&
0$
0#
0?
1>
1=
1:
19
07
16
04
13
02
0J)
0K)
0M)
0N)
0p,
0P)
0e,
0Q)
0Z,
0C,
08,
0U)
0X)
0i+
0:)
0<)
0;+
00+
0>)
0?)
0l*
0A)
0B)
0C)
0J*
0E)
0F)
0(*
0G)
0e)
17%
18%
1:%
1;%
1](
1R(
1G(
10(
1%(
1B%
1V'
1'%
1('
1{&
1+%
1,%
1Y&
1.%
1/%
17&
12%
1s%
14%
1R%
12$
1.$
1-$
1*$
0)$
1($
1'$
0%$
1$$
1O)
1P)
1Q)
1S)
1T)
1X)
1<)
1=)
1@)
1C)
1F)
1I)
1,
1%
1$
1"
1!
0>
0=
0<
0:
09
08
06
05
03
01
0<%
0@%
0A%
0*%
0-%
06%
0+
0*
0&
1@
1=
1:
17
14
13
1S
0R
b1000 M-
1<"
0:"
14"
02"
02$
0.$
0-$
0*$
1)$
0($
0'$
1%$
0$$
0Q#
1P#
1O#
1L#
1I#
1E#
0C#
#3810
b100111 F
#3850
0i
0G
0f
#3900
1i
1G
1f
0R#
1S#
1T#
1W#
1Z#
1^#
0`#
b1 A
b10 B
b1110111001100001 D
b111 E
b1001101000001011 J
b1010110111011100 K
b101000 k
1d
0c
0b
0a
0`
0\
1Z
0X
1W
1V
1P
1N
0M
0L
0K-
0I-
0@-
0>-
03-
0*-
0(-
0|,
0z,
0o,
0f,
0d,
0[,
0Y,
0M,
0B,
07,
0.,
0,,
0~+
0s+
0j+
0h+
0]+
0R+
0P+
0E+
0<+
0:+
0/+
0%+
0#+
0x*
0v*
0k*
0b*
0`*
0V*
0T*
0K*
0I*
0>*
05*
03*
0)*
0'*
0|)
0z)
0o)
0d)
05)
03)
00)
0()
0')
0%)
0{(
0x(
0r(
0p(
0m(
0f(
0d(
0a(
0Y(
0X(
0V(
0P(
0N(
0K(
0E(
0C(
0B(
0@(
07(
04(
0,(
0)(
0!(
0|'
0t'
0s'
0q'
0h'
0g'
0e'
0_'
0]'
0\'
0Z'
0R'
0O'
0G'
0D'
0<'
0:'
09'
07'
01'
0/'
0,'
0$'
0!'
0w&
0v&
0t&
0m&
0k&
0j&
0h&
0`&
0]&
0W&
0U&
0T&
0R&
0J&
0G&
0>&
0;&
05&
03&
00&
0(&
0%&
0}%
0{%
0x%
0q%
0o%
0n%
0l%
0d%
0a%
0Y%
0X%
0V%
0P%
0N%
0M%
0K%
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
0/
1.
1-
1*
1)
0'
1&
0$
1#
0"
1Q#
0P#
0O#
0N#
0M#
0I#
1G#
0E#
1D#
1C#
1J)
1K)
1M)
1N)
1p,
1e,
1Z,
1C,
18,
1U)
1i+
1:)
1;+
10+
1>)
1?)
1l*
1A)
1B)
1J*
1E)
1(*
1G)
1e)
14)
1))
1#)
1q(
1e(
1W(
1O(
1L(
1D(
1A(
1*(
1}'
1u'
1o'
1c'
1Y'
1X'
1S'
1P'
1;'
15'
1+'
1%'
1"'
1u&
1l&
1f&
1a&
1Q&
1S&
1K&
1?&
14&
11&
1|%
1p%
1m%
1e%
1T%
1J%
1L%
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0)%
0('
0{&
0+%
0,%
0Y&
0.%
0/%
00%
07&
02%
03%
0s%
04%
0R%
0O)
0S)
0T)
0=)
0@)
0I)
0$)
0,)
0I(
0'(
0z'
0p'
0x'
0l'
0a'
0N'
0M'
0>'
0~&
0}&
0o&
0\&
0F&
0:&
0.&
0`%
0]%
0.
0-
0,
0*
0)
0(
0&
0%
0#
0!
1>
1<
19
18
16
15
11
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
18%
1R(
10(
1%(
1B%
1C%
1D%
1V'
1'%
1('
1+%
17&
15%
10
1-
1*
1'
1$
1#
0@
07
04
1/
1%
1!
0=%
0@%
0A%
0E%
0)%
00%
0*
0#
1R
b10000000 M-
0<"
18"
04"
10"
1s$
0q$
1n$
1m$
0k$
1i$
0g$
1f$
1e$
1N#
1M#
0L#
0G#
0D#
#3901
0M!
1L!
1K!
1H!
1E!
1A!
0?!
1P%
0Q#
1P#
1O#
1L#
1I#
1E#
0C#
0[%
0f%
0*&
0L&
0y&
11'
0J%
1U%
1`%
1$&
1F&
1s&
0+'
#3910
b101000 F
#3950
0i
0G
0f
#4000
1i
1G
1f
1t$
0v$
1y$
1z$
0|$
1~$
0"%
1#%
1$%
b110 A
b0 B
b101100111110101 D
b101 E
b1101101100010010 J
b11001001001001 K
b101001 k
1b
1`
1]
1\
0[
0Z
1X
0W
0U
0P
0N
1M
1L
1K-
1I-
1@-
1>-
13-
1*-
1(-
1|,
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
17,
1.,
1,,
1~+
1s+
1j+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1x*
1v*
1k*
1b*
1`*
1V*
1T*
1K*
1I*
1>*
15*
13*
1)*
1'*
1|)
1z)
1o)
1d)
15)
13)
10)
1()
1')
1%)
1{(
1x(
1r(
1p(
1m(
1f(
1d(
1a(
1Y(
1X(
1V(
1P(
1N(
1K(
1E(
1C(
1B(
1@(
17(
14(
1,(
1)(
1!(
1|'
1t'
1s'
1q'
1h'
1g'
1e'
1_'
1]'
1\'
1Z'
1R'
1O'
1G'
1D'
1<'
1:'
19'
17'
1/'
1,'
1$'
1!'
1y&
1w&
1v&
1t&
1m&
1k&
1j&
1h&
1`&
1]&
1W&
1U&
1T&
1R&
1L&
1J&
1G&
1>&
1;&
15&
13&
10&
1*&
1(&
1%&
1}%
1{%
1x%
1q%
1o%
1n%
1l%
1f%
1d%
1a%
1[%
1Y%
1X%
1V%
1N%
1M%
1K%
08)
06)
0+)
0~(
0u(
0s(
0i(
0g(
0\(
0S(
0Q(
0H(
0F(
0:(
0/(
0$(
0w'
0k'
0b'
0`'
0U'
0J'
0?'
0='
02'
0''
0|&
0z&
0p&
0n&
0c&
0Z&
0X&
0O&
0M&
0A&
08&
06&
0-&
0+&
0"&
0~%
0t%
0r%
0i%
0g%
0^%
0\%
0Q%
00
0/
1.
1,
1(
0'
1&
0%
0$
1"
0!
1q$
1o$
1l$
1k$
0j$
0i$
1g$
0f$
0d$
0J)
0K)
0M)
0N)
0p,
0P)
0e,
0Q)
0Z,
0C,
08,
0U)
0X)
0i+
0:)
0<)
0;+
00+
0>)
0?)
0l*
0A)
0B)
0C)
0J*
0E)
0F)
0(*
0G)
0e)
0/)
04)
0))
0#)
0l(
0q(
0`(
0e(
0T(
0W(
0J(
0O(
0L(
0?(
0D(
0>(
0A(
0*(
0}'
0u'
0o'
0c'
0Y'
0X'
0S'
0P'
06'
0;'
05'
0%'
0"'
0s&
0r&
0u&
0g&
0l&
0f&
0a&
0Q&
0P&
0S&
0F&
0K&
0?&
0/&
04&
01&
0$&
0w%
0|%
0k%
0p%
0j%
0m%
0`%
0e%
0U%
0T%
0I%
0L%
17%
1,)
1:%
1;%
1](
1=%
1G(
1x'
1l'
1a'
1>'
1{&
1o&
1Y&
1.%
10%
11%
12%
1s%
14%
1]%
1R%
1O)
1P)
1Q)
1S)
1T)
1X)
1<)
1=)
1@)
1C)
1F)
1I)
18)
1/)
1$)
1u(
1l(
1i(
1`(
1T(
1S(
1J(
1I(
1H(
1?(
1>(
1'(
1z'
1p'
1b'
1N'
1M'
1?'
16'
1~&
1}&
1|&
1r&
1p&
1g&
1\&
1Z&
1P&
1O&
1F&
1:&
18&
1/&
1.&
1-&
1"&
1w%
1t%
1k%
1j%
1i%
1`%
1^%
1I%
1'
1%
1$
1!
0>
0=
0<
0:
09
08
06
05
03
01
08%
0<%
0B%
0C%
06%
07%
08)
0-)
0:%
0u(
0;%
0i(
0=%
0S(
0>%
0H(
0y'
0D%
0W'
0'%
0?'
0)'
0*%
0+%
0p&
0e&
0-%
0.%
0O&
0C&
00%
08&
01%
02%
0"&
03%
0t%
04%
0i%
05%
0-
0,
0&
0"
1@
1=
1:
17
14
13
0.
0(
0'
0%
0$
0!
17%
18%
1:%
1;%
1=%
1>%
1B%
1E%
1'%
1)%
1+%
1,%
1.%
1/%
10%
12%
13%
14%
1/
1,
1(
1'
1%
1$
1"
1!
0S
b100000 M-
1:"
08"
12"
00"
0s$
0o$
0n$
0m$
0l$
1j$
0e$
1d$
13$
00$
1.$
1-$
1,$
0)$
1($
1'$
#4001
1/"
0-"
1*"
1)"
0'"
1%"
0#"
1""
1!"
1s$
0q$
1n$
1m$
0k$
1i$
0g$
1f$
1e$
#4010
b101001 F
#4050
0i
0G
0f
#4100
1i
1G
1f
14$
07$
19$
1:$
1;$
0>$
1?$
1@$
b1 A
b101 B
b1011010010011000 D
b11 E
b1001101000001011 J
b101100111110101 K
b101010 k
0d
0b
1a
0_
0^
0\
1Z
0Y
1W
0V
1U
1Q
1O
1N
0M
0L
0H-
0F-
0C-
0=-
0;-
0:-
08-
02-
00-
0--
0%-
0"-
0y,
0w,
0t,
0n,
0l,
0k,
0i,
0c,
0a,
0^,
0V,
0U,
0S,
0J,
0G,
0A,
0?,
0<,
06,
04,
01,
0),
0(,
0&,
0{+
0z+
0x+
0p+
0o+
0m+
0e+
0b+
0\+
0Z+
0W+
0O+
0M+
0L+
0J+
0B+
0?+
07+
04+
0.+
0,+
0++
0)+
0"+
0~*
0}*
0{*
0s*
0p*
0j*
0h*
0g*
0e*
0_*
0]*
0Z*
0Q*
0N*
0H*
0F*
0C*
0=*
0;*
08*
02*
00*
0-*
0&*
0$*
0#*
0!*
0y)
0w)
0t)
0n)
0l)
0k)
0i)
0a)
0`)
0^)
05)
03)
00)
0*)
0()
0')
0%)
0}(
0{(
0x(
0p(
0m(
0f(
0d(
0a(
0[(
0Y(
0X(
0V(
0P(
0N(
0K(
0C(
0B(
0@(
07(
04(
0.(
0,(
0)(
0#(
0!(
0|'
0t'
0s'
0q'
0h'
0g'
0e'
0]'
0\'
0Z'
0R'
0O'
0I'
0G'
0D'
0<'
0:'
09'
07'
0/'
0,'
0$'
0!'
0y&
0w&
0v&
0t&
0m&
0k&
0j&
0h&
0`&
0]&
0W&
0U&
0T&
0R&
0L&
0J&
0G&
0>&
0;&
05&
03&
00&
0*&
0(&
0%&
0}%
0{%
0x%
0q%
0o%
0n%
0l%
0f%
0d%
0a%
0[%
0Y%
0X%
0V%
0N%
0M%
0K%
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
0/
1.
1-
1*
1)
0'
1&
0$
1#
0"
0@
1?
0=
1;
18
16
04
03
03$
01$
10$
0.$
0-$
0+$
1)$
0($
1&$
0%$
1$$
1G-
1<-
16-
1,-
1&-
1x,
1h,
1j,
1b,
1_,
1W,
1T,
1;,
1=,
10,
12,
1*,
1$,
1v+
1k+
1f+
1c+
1V+
1N+
1H+
18+
15+
1(+
1*+
1!+
1y*
1t*
1d*
1f*
1^*
1R*
1G*
1D*
17*
11*
1%*
1"*
1x)
1h)
1g)
1_)
14)
1))
1#)
1w(
1q(
1e(
1U(
1W(
1O(
1L(
1D(
1A(
1((
1*(
1{'
1}'
1u'
1o'
1c'
1X'
1S'
1P'
1C'
1;'
15'
1%'
1"'
1s&
1u&
1l&
1f&
1a&
1Q&
1S&
1K&
1?&
14&
11&
1$&
1|%
1p%
1m%
1e%
1U%
1T%
1L%
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0)%
0('
0{&
0+%
0,%
0Y&
0.%
0/%
00%
07&
02%
03%
0s%
04%
0R%
0?-
0!-
0\,
0R,
0:,
0/,
0%,
0-,
0!,
0t+
0a+
0`+
0Q+
03+
02+
0$+
0o*
0M*
0A*
0p)
0,)
0l(
0I(
0?(
0'(
0z'
0p'
0x'
0l'
0a'
0N'
0M'
0>'
0~&
0}&
0o&
0\&
0:&
0.&
0]%
0.
0-
0,
0*
0)
0(
0&
0%
0#
0!
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
1K)
1e,
1C,
18,
1U)
1V)
1W)
1i+
1:)
1;+
1>)
1J*
1H)
18%
1R(
10(
1%(
1B%
1C%
1D%
1V'
1'%
1('
1+%
17&
15%
10
1-
1*
1'
1$
1#
0P)
0S)
0T)
0X)
0<)
0C)
1/
1%
1!
1>
1=
1<
12
0=%
0@%
0A%
0E%
0)%
00%
0*
0#
0?
0;
0:
07
1S
0R
b1000 M-
1<"
0:"
14"
02"
11$
0,$
1+$
0'$
0&$
1%$
0$$
0P#
0O#
0L#
0K#
1J#
0I#
0H#
1G#
0F#
1D#
#4101
1m!
0j!
1h!
1g!
1f!
0c!
1b!
1a!
0Y+
0F'
13$
00$
1.$
1-$
1,$
0)$
1($
1'$
1z+
1g'
03,
0~'
0>,
0+(
0I,
06(
1k,
1X(
0v,
0c(
0$-
0o(
1U+
1B'
0v+
0c'
1/,
1z'
1:,
1'(
1E,
12(
0g,
0T(
1r,
1_(
1~,
1k(
0^+
0K'
1!,
1l'
08,
0%(
0C,
00(
0N,
0;(
1p,
1](
0{,
0h(
0)-
0t(
1Y)
1F%
0V)
0C%
1T)
1A%
1S)
1@%
1R)
1?%
0O)
0<%
1N)
1;%
1M)
1:%
1@
0=
1;
1:
19
06
15
14
#4110
b101010 F
#4150
0i
0G
0f
#4200
1i
1G
1f
0S#
0T#
0W#
0X#
1Y#
0Z#
0[#
1\#
0]#
1_#
b100 A
b10 B
b1101000101001110 D
b0 E
b11101100010 J
b1010110111011100 K
b101011 k
1c
1b
0`
1^
0]
1\
0Z
0W
1V
0Q
1P
0O
0N
1L
1H-
1F-
1C-
1=-
1;-
1:-
18-
12-
10-
1--
1%-
1$-
1"-
1y,
1w,
1v,
1t,
1n,
1l,
1i,
1c,
1a,
1^,
1V,
1U,
1S,
1J,
1I,
1G,
1A,
1?,
1>,
1<,
16,
14,
13,
11,
1),
1(,
1&,
1{+
1x+
1p+
1o+
1m+
1e+
1b+
1\+
1Z+
1Y+
1W+
1O+
1M+
1L+
1J+
1B+
1?+
17+
14+
1.+
1,+
1++
1)+
1"+
1~*
1}*
1{*
1s*
1p*
1j*
1h*
1g*
1e*
1_*
1]*
1Z*
1Q*
1N*
1H*
1F*
1C*
1=*
1;*
18*
12*
10*
1-*
1&*
1$*
1#*
1!*
1y)
1w)
1t)
1n)
1l)
1k)
1i)
1a)
1`)
1^)
0K-
0I-
0@-
0>-
05-
03-
0(-
0|,
0z,
0q,
0o,
0f,
0d,
0Y,
0M,
0D,
0B,
09,
07,
0,,
0~+
0s+
0h+
0_+
0]+
0R+
0P+
0E+
0:+
01+
0/+
0%+
0#+
0v*
0m*
0k*
0b*
0`*
0T*
0K*
0I*
0@*
0>*
05*
03*
0)*
0'*
0|)
0z)
0q)
0o)
0d)
15)
13)
10)
1*)
1()
1')
1%)
1}(
1{(
1x(
1p(
1o(
1m(
1f(
1d(
1c(
1a(
1[(
1Y(
1V(
1P(
1N(
1K(
1C(
1B(
1@(
17(
16(
14(
1.(
1,(
1+(
1)(
1#(
1!(
1~'
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1\'
1Z'
1R'
1O'
1I'
1G'
1F'
1D'
1<'
1:'
19'
17'
1/'
1,'
1$'
1!'
1y&
1w&
1v&
1t&
1m&
1k&
1j&
1h&
1`&
1]&
1W&
1U&
1T&
1R&
1L&
1J&
1G&
1>&
1;&
15&
13&
10&
1*&
1(&
1%&
1}%
1{%
1x%
1q%
1o%
1n%
1l%
1f%
1d%
1a%
1[%
1Y%
1X%
1V%
1N%
1M%
1K%
0/
1.
0-
1,
1+
1*
1)
1(
0'
1"
0!
1?
0>
1=
0<
0;
0:
09
08
17
02
11
1P#
1O#
0M#
1K#
0J#
1I#
0G#
0D#
1C#
0B-
0G-
07-
0<-
06-
0,-
0&-
0~,
0s,
0x,
0r,
0h,
0j,
0],
0b,
0_,
0W,
0Q,
0T,
0E,
0;,
0:,
0=,
00,
0/,
02,
0*,
0$,
0k+
0f+
0c+
0V+
0U+
0I+
0N+
0H+
08+
05+
0(+
0'+
0*+
0z*
0!+
0y*
0t*
0d*
0c*
0f*
0Y*
0^*
0R*
0B*
0G*
0D*
07*
0,*
01*
0~)
0%*
0})
0"*
0s)
0x)
0h)
0g)
0\)
0_)
1J)
1?-
1L)
1)-
1{,
1O)
1P)
1Z,
1N,
1C,
18,
1-,
1t+
1^+
1Q+
10+
1$+
1l*
1A)
1C)
1D)
1E)
1(*
1G)
1p)
1e)
0/)
04)
0$)
0))
0#)
0w(
0q(
0k(
0`(
0e(
0_(
0U(
0W(
0J(
0O(
0L(
0D(
0>(
0A(
02(
0((
0'(
0*(
0{'
0z'
0}'
0u'
0o'
0X'
0S'
0P'
0C'
0B'
06'
0;'
05'
0%'
0"'
0s&
0r&
0u&
0g&
0l&
0f&
0a&
0Q&
0P&
0S&
0F&
0K&
0?&
0/&
04&
01&
0$&
0w%
0|%
0k%
0p%
0j%
0m%
0`%
0e%
0U%
0T%
0I%
0L%
1K-
1B-
1@-
17-
15-
1!-
1|,
1s,
1q,
1g,
1f,
1],
1\,
1R,
1Q,
1D,
1:,
19,
1/,
1%,
1a+
1`+
1_+
1R+
1I+
13+
12+
11+
1'+
1%+
1z*
1o*
1m*
1c*
1b*
1Y*
1M*
1K*
1B*
1A*
1@*
15*
1,*
1)*
1~)
1})
1|)
1s)
1q)
1\)
1>
1<
1;
1:
18
0M)
0Q)
0R)
0U)
0W)
0I)
1/)
1$)
1,)
1l(
1t(
1`(
1h(
1T(
1J(
1I(
1?(
1G(
1>(
1;(
10(
1'(
1%(
1z'
1p'
1x'
1a'
1N'
1M'
1K'
16'
1>'
1~&
1}&
1{&
1r&
1g&
1o&
1\&
1Y&
1P&
1F&
1:&
1/&
1.&
1w%
1k%
1s%
1j%
1`%
1]%
1R%
1I%
0J)
0K-
0K)
0@-
0L)
0*-
0N)
0|,
0O)
0P)
0f,
0[,
0S)
0T)
0.,
0j+
0Y)
0:)
0R+
0<+
0=)
0>)
0%+
0x*
0@)
0A)
0b*
0V*
0C)
0K*
0D)
0E)
05*
0F)
0)*
0G)
0|)
0H)
0@
08%
0:%
0;%
0](
0R(
0>%
0G(
0?%
0@%
00(
0A%
0%(
0B%
0D%
0V'
0F%
0'%
0('
0*%
0{&
0+%
0-%
0Y&
07&
03%
0s%
05%
06%
0R%
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
1:)
1<)
1>)
1?)
1A)
1B)
1C)
1E)
1F)
1G)
00
0.
0,
0+
0*
0)
0(
0%
0$
0"
0?
0>
0=
0<
0;
0:
08
07
05
04
01
1<%
1=%
1>%
1@%
1A%
1E%
1)%
1*%
1-%
10%
13%
16%
1/
1+
1*
1(
1'
1&
1>
1=
1<
1:
19
18
16
15
13
11
0T
0S
b1 M-
1?"
0<"
17"
04"
1M#
1L#
1H#
1F#
0C#
0O"
1N"
1M"
1G"
0F"
0B"
1A"
1@"
#4201
0L!
0K!
0H!
0G!
1F!
0E!
0D!
1C!
0B!
1@!
0P#
0O#
0L#
0K#
1J#
0I#
0H#
1G#
0F#
1D#
#4210
b101011 F
#4250
0i
0G
0f
#4300
1i
1G
1f
0P"
1Q"
1R"
1X"
0Y"
0]"
1^"
1_"
b1 A
b110 B
b110011011100110 D
b111 E
0C
b1001101000001011 J
b1101101100010010 K
b101100 k
0a
1_
1]
0\
1[
1Z
0X
1W
0U
1O
1N
0L
0e
05)
03)
00)
0*)
0()
0')
0%)
0}(
0{(
0x(
0p(
0o(
0m(
0f(
0d(
0c(
0a(
0[(
0Y(
0V(
0P(
0N(
0K(
0C(
0B(
0@(
07(
06(
04(
0.(
0,(
0+(
0)(
0#(
0!(
0~'
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0\'
0Z'
0R'
0O'
0I'
0G'
0F'
0D'
0<'
0:'
09'
07'
0/'
0,'
0&'
0$'
0!'
0y&
0w&
0v&
0t&
0k&
0j&
0h&
0b&
0`&
0]&
0U&
0T&
0R&
0J&
0G&
0@&
0>&
0;&
03&
00&
0(&
0%&
0}%
0{%
0x%
0q%
0o%
0n%
0l%
0d%
0a%
0Y%
0X%
0V%
0N%
0M%
0K%
07"
10
0/
1-
0+
0(
0&
1$
1#
1?
0>
0=
0:
09
17
06
14
03
12
0L"
1J"
1H"
0G"
1F"
1E"
0C"
1B"
0@"
14)
1))
1#)
1w(
1q(
1k(
1e(
1_(
1U(
1W(
1O(
1L(
1D(
1A(
12(
1((
1*(
1{'
1}'
1u'
1o'
1X'
1S'
1P'
1C'
1B'
1;'
15'
1%'
1"'
1s&
1u&
1l&
1f&
1a&
1S&
1K&
1?&
14&
11&
1|%
1p%
1m%
1e%
1T%
1L%
1O"
0N"
0M"
1L"
0J"
0H"
0E"
1C"
0A"
0,)
0l(
0t(
0h(
0T(
0I(
0?(
0;(
0p'
0x'
0a'
0N'
0M'
0K'
0>'
0}&
0g&
0o&
0F&
0/&
0.&
0`%
0]%
18%
1:%
1;%
1](
1R(
1?%
1B%
1D%
1V'
1F%
1'%
1('
1+%
17&
15%
1/
1%
1!
0<%
0=%
0E%
0)%
00%
0*
0#
1T
1S
1R
b10000000 M-
0?"
18"
#4301
0{
1z
1y
1s
0r
0n
1m
1l
1_)
0O"
1N"
1M"
1G"
0F"
0B"
1A"
1@"
0j)
0u)
0[*
1f*
15+
0@+
0K+
0\)
1g)
1r)
1X*
0c*
02+
1=+
1H+
#4310
b101100 F
#4350
0i
0G
0f
#4400
1i
1G
1f
b10 A
b101 B
b1111111110011110 D
b0 E
1C
b1010110111011100 J
b101100111110101 K
b101101 k
1a
1`
0_
0^
1\
1Y
1X
1U
1Q
0P
0N
1M
1e
0H-
0F-
0C-
0=-
0;-
0:-
08-
02-
00-
0--
0%-
0$-
0"-
0y,
0w,
0v,
0t,
0n,
0l,
0i,
0c,
0a,
0^,
0V,
0U,
0S,
0J,
0I,
0G,
0A,
0?,
0>,
0<,
06,
04,
03,
01,
0),
0(,
0&,
0{+
0x+
0p+
0o+
0m+
0e+
0b+
0\+
0Z+
0Y+
0W+
0O+
0M+
0L+
0J+
0B+
0?+
09+
07+
04+
0.+
0,+
0++
0)+
0~*
0}*
0{*
0u*
0s*
0p*
0h*
0g*
0e*
0]*
0Z*
0S*
0Q*
0N*
0F*
0C*
0;*
08*
02*
00*
0-*
0&*
0$*
0#*
0!*
0w)
0t)
0l)
0k)
0i)
0a)
0`)
0^)
1K-
1I-
1@-
1>-
13-
1*-
1(-
1|,
1z,
1o,
1f,
1d,
1[,
1Y,
1M,
1B,
17,
1.,
1,,
1~+
1s+
1j+
1h+
1]+
1R+
1P+
1E+
1<+
1:+
1/+
1%+
1#+
1x*
1v*
1k*
1b*
1`*
1V*
1T*
1K*
1I*
1>*
15*
13*
1)*
1'*
1|)
1z)
1o)
1d)
15)
13)
10)
1*)
1()
1')
1%)
1}(
1{(
1x(
1p(
1o(
1m(
1f(
1d(
1c(
1a(
1[(
1Y(
1V(
1P(
1N(
1K(
1C(
1B(
1@(
17(
16(
14(
1.(
1,(
1+(
1)(
1#(
1!(
1~'
1|'
1t'
1s'
1q'
1h'
1e'
1]'
1\'
1Z'
1R'
1O'
1I'
1G'
1F'
1D'
1<'
1:'
19'
17'
1/'
1,'
1&'
1$'
1!'
1y&
1w&
1v&
1t&
1k&
1j&
1h&
1b&
1`&
1]&
1U&
1T&
1R&
1J&
1G&
1@&
1>&
1;&
13&
10&
1(&
1%&
1}%
1{%
1x%
1q%
1o%
1n%
1l%
1d%
1a%
1Y%
1X%
1V%
1N%
1M%
1K%
08)
06)
0-)
0+)
0")
0~(
0s(
0i(
0g(
0^(
0\(
0S(
0Q(
0F(
0:(
01(
0/(
0&(
0$(
0w'
0k'
0`'
0U'
0L'
0J'
0?'
0='
02'
0)'
0''
0|&
0z&
0n&
0e&
0c&
0X&
0M&
0C&
0A&
06&
0+&
0"&
0~%
0t%
0r%
0g%
0\%
0Q%
10"
1G-
1<-
16-
1,-
1&-
1~,
1x,
1r,
1h,
1j,
1b,
1_,
1W,
1T,
1E,
1;,
1=,
10,
12,
1*,
1$,
1k+
1f+
1c+
1V+
1U+
1N+
1K+
1@+
18+
1(+
1*+
1!+
1y*
1t*
1c*
1^*
1[*
1R*
1G*
1D*
11*
1%*
1"*
1x)
1u)
1j)
1\)
0J)
0K)
0M)
0N)
0p,
0P)
0e,
0Q)
0Z,
0C,
08,
0U)
0X)
0i+
0:)
0Q+
0F+
0<)
00+
0>)
0?)
0A)
0a*
0B)
0C)
0J*
0E)
0F)
0(*
0G)
0{)
0p)
0/)
04)
0$)
0))
0#)
0w(
0q(
0k(
0`(
0e(
0_(
0U(
0W(
0J(
0O(
0L(
0D(
0>(
0A(
02(
0((
0'(
0*(
0{'
0z'
0}'
0u'
0o'
0X'
0S'
0P'
0C'
0B'
06'
0;'
05'
08'
0-'
0~&
0%'
0s&
0r&
0u&
0l&
0f&
0\&
0a&
0P&
0K&
0H&
0:&
0?&
04&
01&
0w%
0|%
0k%
0p%
0j%
0m%
0e%
0b%
0T%
0W%
0I%
17%
1,)
19%
1t(
1h(
1<%
1=%
1G(
1;(
10(
1%(
1x'
1a'
1K'
1>'
1)%
1{&
1o&
1,%
1Y&
1/%
12%
1s%
1]%
1R%
0s$
1r$
1q$
1p$
1o$
0n$
0m$
1l$
1k$
1g$
0?-
0!-
0)-
0{,
0g,
0\,
0R,
0N,
0%,
0-,
0t+
0a+
0`+
0^+
0=+
0z*
0$+
0l*
0Y*
0X*
0B*
0A*
0s)
0r)
0e)
1O)
1P)
1Q)
1S)
1T)
1X)
1:)
1;)
1=)
1A)
1C)
1F)
1G)
1H)
18)
1/)
1-)
1$)
1")
1l(
1i(
1`(
1^(
1T(
1S(
1J(
1I(
1?(
1>(
11(
1'(
1&(
1z'
1p'
1N'
1M'
1L'
1?'
16'
15'
1*'
1)'
1~&
1|&
1r&
1g&
1e&
1\&
1F&
1E&
1C&
1:&
1/&
1.&
1"&
1w%
1t%
1k%
1j%
1`%
1_%
1T%
1,
1)
1&
1#
0?
0<
08
07
05
04
02
01
0:%
0>%
0?%
0B%
0D%
0+%
0-%
05%
06%
1K)
1M)
1N)
1p,
1e,
1R)
1U)
1W)
1i+
1Y)
1F+
1>)
1@)
1a*
1J*
1{)
1I)
07%
08)
08%
0-)
09%
0u(
0;%
0i(
0<%
0=%
0S(
0H(
0@%
0A%
0y'
0W'
0F%
0'%
0?'
0)%
0)'
0*%
0p&
0,%
0e&
0O&
0/%
0C&
08&
02%
0"&
03%
0t%
0i%
00
0/
0'
0%
1?
1;
1:
18
17
16
0O)
0P)
0X)
0;)
0A)
0C)
0G)
0-
0,
0)
0&
0$
0#
0!
1@
1>
1<
19
15
14
12
17%
18%
1:%
1;%
1=%
1>%
1B%
1E%
1'%
1)%
1+%
1,%
1.%
1/%
10%
12%
13%
14%
1.
1-
1,
1*
1)
1(
1&
1%
1#
1!
0?
07
06
0T
0S
0R
b1 M-
1?"
08"
17"
00"
1s$
0r$
0q$
0p$
0o$
1n$
1m$
0l$
0k$
0g$
1K"
0I"
1H"
1F"
1E"
1D"
1B"
#4410
b101101 F
#4450
0i
0G
0f
#4500
1i
1G
1f
1T"
0V"
1W"
1Y"
1Z"
1["
1]"
b0 A
b10 B
b100000100010011 D
b11 E
b1111111110011110 J
b1010110111011100 K
b101110 k
1d
0b
0a
0]
0[
0Z
0Y
0X
0W
0U
0Q
1P
0O
0M
1H-
1F-
1C-
1=-
1;-
1:-
18-
12-
10-
1--
1%-
1$-
1"-
1y,
1w,
1v,
1t,
1n,
1l,
1i,
1c,
1a,
1^,
1V,
1U,
1S,
1J,
1I,
1G,
1A,
1?,
1>,
1<,
16,
14,
13,
11,
1),
1(,
1&,
1{+
1x+
1p+
1o+
1m+
1e+
1b+
1\+
1Z+
1Y+
1W+
1O+
1M+
1L+
1J+
1B+
1?+
19+
17+
14+
1.+
1,+
1++
1)+
1~*
1}*
1{*
1u*
1s*
1p*
1h*
1g*
1e*
1]*
1Z*
1S*
1Q*
1N*
1F*
1C*
1;*
18*
12*
10*
1-*
1&*
1$*
1#*
1!*
1w)
1t)
1l)
1k)
1i)
1a)
1`)
1^)
0K-
0I-
0@-
0>-
05-
03-
0(-
0|,
0z,
0q,
0o,
0f,
0d,
0Y,
0M,
0D,
0B,
09,
07,
0,,
0~+
0s+
0h+
0_+
0]+
0R+
0P+
0E+
0<+
0:+
01+
0/+
0#+
0x*
0v*
0k*
0`*
0V*
0T*
0I*
0>*
05*
03*
0)*
0'*
0z)
0o)
0d)
1?
0>
1=
0<
0;
0:
09
08
17
02
11
1O"
0M"
0L"
0H"
0F"
0E"
0D"
0C"
0B"
0@"
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
0B-
0G-
07-
0<-
06-
0,-
0&-
0~,
0s,
0x,
0r,
0h,
0j,
0],
0b,
0_,
0W,
0Q,
0T,
0E,
0;,
0:,
0=,
00,
0/,
02,
0*,
0$,
0k+
0f+
0c+
0V+
0U+
0I+
0N+
0H+
0K+
0@+
03+
08+
0(+
0'+
0*+
0!+
0y*
0o*
0t*
0c*
0^*
0[*
0M*
0R*
0G*
0D*
0,*
01*
0~)
0%*
0})
0"*
0x)
0u)
0g)
0j)
0\)
1J)
1?-
1L)
1)-
1{,
1O)
1P)
1Z,
1N,
1C,
18,
1-,
1t+
1^+
1Q+
1<)
10+
1$+
1?)
1l*
1B)
1E)
1(*
1p)
1e)
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0>'
03'
0)%
0{&
0+%
0,%
0.%
0N&
0/%
00%
07&
02%
03%
0s%
04%
0h%
0]%
1K-
1B-
1@-
17-
15-
1!-
1|,
1s,
1q,
1g,
1f,
1],
1\,
1R,
1Q,
1D,
1:,
19,
1/,
1%,
1a+
1`+
1_+
1R+
1I+
1H+
1=+
1<+
13+
11+
1'+
1z*
1x*
1o*
1Y*
1X*
1V*
1M*
1B*
1A*
15*
1,*
1)*
1~)
1})
1s)
1r)
1g)
0M)
0Q)
0R)
0U)
0W)
0>)
0@)
0H)
0I)
0.
0-
0,
0*
0)
0(
0&
0%
0#
0!
1<
19
16
13
1<%
1=%
1>%
1@%
1A%
1E%
1'%
1(%
1*%
1.%
10%
13%
14%
15%
0J)
0K-
0K)
0@-
0L)
0*-
0N)
0|,
0O)
0P)
0f,
0[,
0S)
0T)
0.,
0j+
0Y)
0:)
0R+
0<)
0<+
0=)
0%+
0?)
0x*
0b*
0B)
0V*
0K*
0E)
05*
0F)
0)*
0|)
1/
1.
1-
1*
1(
1$
1"
1!
0@
0?
07
05
0=
0<
09
06
04
03
01
1J)
1K)
1M)
1N)
1P)
1Q)
1U)
1X)
1:)
1<)
1>)
1?)
1A)
1B)
1C)
1E)
1F)
1G)
1>
1=
1<
1:
19
18
16
15
13
11
1T
1S
b1000 M-
0?"
1<"
07"
14"
1Q#
1P#
0N#
0J#
1I#
0G#
0E#
0D#
1C#
0B#
0O"
1M"
1L"
0K"
1I"
1C"
1@"
#4501
1w
0u
1t
1r
1q
1p
1n
0.*
0y%
1K"
0I"
1H"
1F"
1E"
1D"
1B"
1D*
11&
0O*
0<&
0f*
0S&
0q*
0^&
0|*
0i&
05+
0"'
1+*
1v%
0A*
0.&
1L*
19&
1c*
1P&
1n*
1[&
1y*
1f&
12+
1}&
0!&
17&
0B&
0Y&
0d&
0o&
0('
12%
00%
1/%
1-%
1,%
1+%
1)%
1,
0*
1)
1'
1&
1%
1#
#4510
b101110 F
#4550
0i
0G
0f
#4600
1i
1G
1f
1R#
1S#
0U#
0Y#
1Z#
0\#
0^#
0_#
1`#
0a#
b110 A
b1010101111000100 D
b1 E
0C
b1101101100010010 J
b101111 k
0d
0c
1b
0`
1^
1]
1[
1Y
1W
0V
1U
1M
1L
0e
08)
06)
0-)
0+)
0~(
0u(
0s(
0i(
0g(
0\(
0S(
0Q(
0H(
0F(
0:(
0/(
0$(
0y'
0w'
0k'
0`'
0W'
0U'
0J'
0?'
0='
02'
0)'
0''
0z&
0p&
0n&
0e&
0c&
0X&
0O&
0M&
0C&
0A&
08&
06&
0+&
0"&
0~%
0t%
0r%
0i%
0g%
0\%
0Q%
04"
0.
0-
0,
1+
1*
0)
0%
0$
0#
0"
0!
0Q#
0P#
1O#
0M#
1K#
1J#
1H#
1F#
1D#
0C#
1B#
17%
18%
1:%
1;%
1](
1R(
1G(
10(
1%(
1B%
1V'
1>'
13'
1('
1{&
1o&
1d&
1Y&
1N&
1B&
10%
1!&
1s%
1h%
1]%
0O#
1N#
1M#
0K#
0I#
0H#
1G#
0F#
1E#
1,
1%
1$
1"
1!
0<%
0@%
0A%
0(%
0*%
0-%
05%
0+
0*
0&
0S
b10 M-
1>"
0<"
#4601
1M!
1L!
0J!
0F!
1E!
0C!
0A!
0@!
1?!
0>!
1Q#
1P#
0N#
0J#
1I#
0G#
0E#
0D#
1C#
0B#
#4610
b101111 F
#4650
0i
0G
0f
#4700
1i
1G
1f
b100 A
b111 B
b1001000010000110 D
b10 E
b11101100010 J
b1110111001100001 K
b110000 k
1c
0^
0\
0[
0Y
1X
0W
1Q
1O
0M
0H-
0F-
0C-
0=-
0;-
0:-
08-
02-
00-
0--
0%-
0$-
0"-
0y,
0w,
0v,
0t,
0n,
0l,
0i,
0c,
0a,
0^,
0V,
0U,
0S,
0J,
0I,
0G,
0A,
0?,
0>,
0<,
06,
04,
03,
01,
0),
0(,
0&,
0{+
0x+
0p+
0o+
0m+
0e+
0b+
0\+
0Z+
0Y+
0W+
0M+
0L+
0J+
0D+
0B+
0?+
07+
04+
0,+
0++
0)+
0~*
0}*
0{*
0s*
0p*
0h*
0g*
0e*
0_*
0]*
0Z*
0Q*
0N*
0F*
0C*
0;*
08*
02*
00*
0-*
0$*
0#*
0!*
0w)
0t)
0n)
0l)
0k)
0i)
0c)
0a)
0`)
0^)
1?
0>
0=
0:
09
17
06
14
03
12
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
1G-
1<-
16-
1,-
1&-
1~,
1x,
1r,
1h,
1j,
1b,
1_,
1W,
1T,
1E,
1;,
1=,
10,
12,
1*,
1$,
1k+
1f+
1c+
1V+
1U+
1N+
1K+
1>+
1@+
18+
15+
1*+
1!+
1|*
1t*
1q*
1f*
1^*
1[*
1R*
1O*
1G*
11*
1.*
1%*
1"*
1x)
1u)
1h)
1j)
1])
1\)
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0>'
03'
0)%
0('
0{&
0+%
0o&
0,%
0d&
0Y&
0.%
0N&
0/%
0B&
00%
02%
0!&
03%
0s%
04%
0h%
0]%
05-
0!-
0q,
0g,
0\,
0R,
0D,
09,
0%,
0a+
0`+
0_+
0I+
0G+
0=+
03+
02+
0z*
0o*
0n*
0X*
0M*
0L*
0B*
0+*
0~)
0s)
0r)
0q)
0f)
0/
0,
0(
0'
0%
0$
0"
0!
1<%
1=%
1>%
1@%
1A%
1E%
1'%
1(%
1)%
1*%
1+%
1,%
1-%
1.%
1/%
12%
13%
14%
15%
1L)
1*-
1O)
1[,
1S)
1T)
1.,
1j+
1Y)
1R+
1;)
1<+
1%+
1x*
1V*
1K*
1)*
1|)
1H)
1I)
1/
1+
1*
1(
1'
1&
1@
1;
1:
16
13
0M)
0Q)
0U)
0X)
0:)
0<)
0>)
0?)
0B)
0C)
0F)
0G)
0?
0<
08
04
0T
1S
b100 M-
0>"
1="
#4710
b110000 F
#4750
0i
0G
0f
#4800
1i
1G
1f
b10 A
b101 B
b1100110110000100 D
b100 E
b1010110111011100 J
b101100111110101 K
b110001 k
0c
1\
1Z
1Y
0X
1V
0P
1M
0L
1K-
1I-
1@-
1>-
15-
13-
1(-
1|,
1z,
1q,
1o,
1f,
1d,
1Y,
1M,
1D,
1B,
19,
17,
1,,
1~+
1s+
1h+
1_+
1]+
1P+
1G+
1E+
1:+
1/+
1#+
1v*
1k*
1b*
1`*
1T*
1I*
1>*
15*
13*
1'*
1z)
1q)
1o)
1f)
1d)
08)
06)
0-)
0+)
0~(
0u(
0s(
0i(
0g(
0\(
0S(
0Q(
0H(
0F(
0:(
0/(
0$(
0y'
0w'
0k'
0`'
0W'
0U'
0J'
0?'
0='
02'
0)'
0''
0z&
0p&
0n&
0e&
0c&
0X&
0O&
0M&
0C&
0A&
08&
06&
0+&
0"&
0~%
0t%
0r%
0i%
0g%
0\%
0Q%
1.
1-
1,
0+
0*
1)
1%
1$
1#
1"
1!
0J)
0K)
0?-
0L)
0)-
0N)
0{,
0O)
0P)
0Z,
0N,
0S)
0C,
0T)
08,
0-,
0t+
0Y)
0^+
0Q+
0;)
00+
0$+
0l*
0A)
0E)
0(*
0H)
0p)
0I)
0e)
17%
18%
1:%
1;%
1](
1R(
1G(
10(
1%(
1B%
1V'
1>'
13'
1('
1{&
1o&
1d&
1Y&
1N&
1B&
10%
1!&
1s%
1h%
1]%
1K)
1M)
1N)
1Q)
1R)
1S)
1T)
1U)
1W)
1Y)
1:)
1=)
1>)
1@)
1F)
1H)
1I)
1*
0@
0;
0:
07
06
05
03
02
01
0<%
0@%
0A%
0(%
0*%
0-%
05%
0/
0'
0$
0"
1@
1>
1<
1;
1:
19
18
15
14
12
0S
1R
b10000 M-
0="
1;"
#4810
b110001 F
#4850
0i
0G
0f
#4900
1i
1G
1f
b1 A
b1 B
b1010100110001110 D
b11 E
1C
b1001101000001011 J
b1001101000001011 K
b110010 k
1c
1a
0Z
1W
0V
0O
1N
0M
1e
05)
03)
00)
0*)
0()
0')
0%)
0}(
0{(
0x(
0p(
0o(
0m(
0f(
0d(
0c(
0a(
0[(
0Y(
0V(
0P(
0N(
0K(
0C(
0B(
0@(
07(
06(
04(
0.(
0,(
0+(
0)(
0#(
0!(
0~'
0|'
0t'
0s'
0q'
0h'
0e'
0]'
0\'
0Z'
0R'
0O'
0I'
0G'
0F'
0D'
0:'
09'
07'
01'
0/'
0,'
0$'
0!'
0w&
0v&
0t&
0k&
0j&
0h&
0`&
0]&
0U&
0T&
0R&
0L&
0J&
0G&
0>&
0;&
03&
00&
0(&
0%&
0}%
0{%
0x%
0o%
0n%
0l%
0d%
0a%
0[%
0Y%
0X%
0V%
0P%
0N%
0M%
0K%
18)
16)
1-)
1+)
1~(
1u(
1s(
1i(
1g(
1\(
1S(
1Q(
1H(
1F(
1:(
1/(
1$(
1y'
1w'
1k'
1`'
1W'
1U'
1J'
1?'
1='
12'
1)'
1''
1z&
1p&
1n&
1e&
1c&
1X&
1O&
1M&
1C&
1A&
18&
16&
1+&
1"&
1~%
1t%
1r%
1i%
1g%
1\%
1Q%
13"
1?
0>
1=
0<
0;
0:
09
08
17
02
11
14)
1))
1#)
1w(
1q(
1k(
1e(
1_(
1U(
1W(
1O(
1L(
1D(
1A(
12(
1((
1*(
1{'
1}'
1u'
1o'
1X'
1S'
1P'
1C'
1B'
1;'
18'
1+'
1-'
1%'
1"'
1u&
1l&
1i&
1a&
1^&
1S&
1K&
1H&
1?&
1<&
14&
1|%
1y%
1p%
1m%
1e%
1b%
1U%
1W%
1J%
1I%
07%
08%
0:%
0;%
0](
0=%
0R(
0>%
0G(
00(
0%(
0B%
0E%
0V'
0'%
0>'
03'
0)%
0('
0{&
0+%
0o&
0,%
0d&
0Y&
0.%
0N&
0/%
0B&
00%
02%
0!&
03%
0s%
04%
0h%
0]%
1o#
1n#
0l#
0k#
1j#
0h#
0g#
1f#
1d#
1b#
0,)
0l(
0t(
0h(
0T(
0I(
0?(
0;(
0p'
0x'
0a'
0N'
0M'
0K'
06'
0*'
0~&
0}&
0g&
0\&
0[&
0E&
0:&
09&
0/&
0v%
0k%
0`%
0_%
0R%
0.
0-
0,
0*
0)
0(
0&
0%
0#
0!
1<%
1=%
1>%
1@%
1A%
1E%
1'%
1(%
1)%
1*%
1+%
1,%
1-%
1.%
1/%
12%
13%
14%
15%
18%
1:%
1;%
1](
1R(
1?%
1B%
1D%
1V'
1F%
13'
1('
1d&
1N&
1B&
1!&
1h%
16%
1/
1.
1-
1,
1)
1(
1'
1&
1%
1$
1#
1"
1!
10
0<%
0=%
0E%
0(%
0)%
0,%
0.%
0/%
02%
04%
0.
0,
0)
0(
0&
0#
0"
1T
1S
0R
b1000 M-
1<"
0;"
14"
03"
0o#
0n#
1l#
1k#
0j#
1h#
1g#
0f#
0d#
0b#
0Q#
1O#
1N#
0M#
1J#
1F#
1D#
0C#
1B#
#4910
b110010 F
#4950
0i
0G
0f
#5000
1i
1G
1f
0R#
1T#
1U#
0V#
1Y#
1]#
1_#
0`#
1a#
b111 A
b1110010100110110 D
b101 E
b1110111001100001 J
b110011 k
0a
1`
1_
0]
1Z
0Y
1V
1M
1L
08)
06)
0-)
0+)
0")
0~(
0s(
0i(
0g(
0^(
0\(
0S(
0Q(
0F(
0:(
01(
0/(
0&(
0$(
0w'
0k'
0`'
0U'
0L'
0J'
0='
04'
02'
0''
0z&
0n&
0c&
0X&
0O&
0M&
0A&
06&
0+&
0"&
0~%
0r%
0g%
0^%
0\%
0S%
0Q%
0/
1.
0-
1,
1+
1*
1)
1(
0'
1"
0!
0N#
1M#
1L#
0J#
1G#
0F#
1C#
17%
1,)
19%
1t(
1h(
1<%
1=%
1G(
1;(
10(
1%(
1x'
1a'
1K'
1>'
1(%
1{&
1o&
1Y&
1.%
12%
1s%
1]%
1R%
1'
1&
1#
1!
0:%
0>%
0?%
0B%
0D%
0'%
0*%
0+%
0-%
03%
0.
0,
0)
0(
0$
0S
1R
b100000 M-
0<"
1:"
04"
12"
03$
12$
0-$
0,$
1)$
0($
0'$
1&$
1$$
1Q#
0O#
0L#
0G#
0D#
0B#
#5001
0M!
1K!
1J!
0I!
1F!
1B!
1@!
0?!
1>!
1c)
1P%
0Q#
1O#
1N#
0M#
1J#
1F#
1D#
0C#
1B#
0y)
0f%
0&*
0q%
12*
1}%
0S*
0@&
0"+
0m&
09+
0&'
1D+
11'
0O+
0<'
0])
0J%
1s)
1`%
1~)
1k%
0,*
0w%
1M*
1:&
1z*
1g&
13+
1~&
0>+
0+'
1I+
16'
1S%
0i%
0t%
1"&
0C&
0p&
0)'
14'
0?'
06%
14%
13%
02%
1/%
1+%
1)%
0(%
1'%
#5010
b110011 F
